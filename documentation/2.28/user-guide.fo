<?xml version="1.0" encoding="utf-8"?><fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format" font-family="serif,Symbol,ZapfDingbats" font-size="10pt" text-align="justify" line-height="normal" font-selection-strategy="character-by-character" line-height-shift-adjustment="disregard-shifts" writing-mode="lr-tb" language="en"><fo:layout-master-set><fo:simple-page-master master-name="blank" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body display-align="center" margin-bottom="0.5in" margin-top="0.5in" margin-left="0in" margin-right="0in" region-name="blank-body"/><fo:region-before region-name="xsl-region-before-blank" extent="0.4in" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-blank" extent="0.4in" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-blank" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-blank" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-first" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-odd" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-even" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="lot-first" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="lot-odd" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="lot-even" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="front-first" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="front-odd" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="front-even" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="body-first" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="body-odd" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="body-even" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="back-first" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="back-odd" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="back-even" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="index-first" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="2" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="index-odd" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="2" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="index-even" page-width="8.5in" page-height="11in" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="2" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:page-sequence-master master-name="titlepage"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="titlepage-first" page-position="first"/><fo:conditional-page-master-reference master-reference="titlepage-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="titlepage-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="lot"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="lot-first" page-position="first"/><fo:conditional-page-master-reference master-reference="lot-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="lot-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="front"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="front-first" page-position="first"/><fo:conditional-page-master-reference master-reference="front-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="front-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="body"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="body-first" page-position="first"/><fo:conditional-page-master-reference master-reference="body-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="body-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="back"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="back-first" page-position="first"/><fo:conditional-page-master-reference master-reference="back-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="back-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="index"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="index-first" page-position="first"/><fo:conditional-page-master-reference master-reference="index-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="index-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master></fo:layout-master-set><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="titlepage" language="en" format="i" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"/></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"/></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body"><fo:block id="d0e2"><fo:block><fo:block><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" font-size="24.8832pt" text-align="center" space-before="18.6624pt"><fo:block keep-with-next.within-column="always" hyphenate="false">Jersey 2.28 User Guide</fo:block></fo:block></fo:block><fo:block><fo:block break-after="page"/><fo:block font-size="14.4pt" font-weight="bold" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block>Jersey 2.28 User Guide</fo:block></fo:block></fo:block><fo:block break-after="page"/></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="lot" language="en" format="i" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Jersey 2.28 User Guide</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Jersey 2.28 User Guide</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" id="toc...d0e2"><fo:block><fo:block><fo:block space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em" space-after="0.5em" start-indent="0pt" font-size="17.28pt" font-weight="bold" font-family="sans-serif,Symbol,ZapfDingbats">Table of Contents</fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="preface">Preface</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="preface"><fo:page-number-citation ref-id="preface"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="getting-started">1. Getting Started</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="getting-started"><fo:page-number-citation ref-id="getting-started"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.getting-started" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="new-from-archetype">1.1. Creating a New Project from Maven Archetype</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="new-from-archetype"><fo:page-number-citation ref-id="new-from-archetype"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="new-project-structure">1.2. Exploring the Newly Created Project</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="new-project-structure"><fo:page-number-citation ref-id="new-project-structure"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="running-project">1.3. Running the Project</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="running-project"><fo:page-number-citation ref-id="running-project"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="new-webapp">1.4. Creating a JavaEE Web Application</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="new-webapp"><fo:page-number-citation ref-id="new-webapp"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="heroku-webapp">1.5. Creating a Web Application that can be deployed on Heroku</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="heroku-webapp"><fo:page-number-citation ref-id="heroku-webapp"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.heroku-webapp" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deploy-it-on-heroku">1.5.1. Deploy it on Heroku</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deploy-it-on-heroku"><fo:page-number-citation ref-id="deploy-it-on-heroku"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="exploring-jersey-examples">1.6. Exploring Other Jersey Examples</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="exploring-jersey-examples"><fo:page-number-citation ref-id="exploring-jersey-examples"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="modules-and-dependencies">2. Modules and dependencies</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="modules-and-dependencies"><fo:page-number-citation ref-id="modules-and-dependencies"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.modules-and-dependencies" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e559">2.1. Java SE Compatibility</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e559"><fo:page-number-citation ref-id="d0e559"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e584">2.2. Introduction to Jersey dependencies</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e584"><fo:page-number-citation ref-id="d0e584"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="dependencies">2.3. Common Jersey Use Cases</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="dependencies"><fo:page-number-citation ref-id="dependencies"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.dependencies" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="servlet-app-glassfish">2.3.1. Servlet based application on Glassfish</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="servlet-app-glassfish"><fo:page-number-citation ref-id="servlet-app-glassfish"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="servlet-app-general">2.3.2. Servlet based server-side application</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="servlet-app-general"><fo:page-number-citation ref-id="servlet-app-general"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="client-jdk">2.3.3. Client application on JDK</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="client-jdk"><fo:page-number-citation ref-id="client-jdk"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="server-jdk">2.3.4. Server-side application on supported containers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="server-jdk"><fo:page-number-citation ref-id="server-jdk"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="modules">2.4. List of modules</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="modules"><fo:page-number-citation ref-id="modules"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jaxrs-resources">3. JAX-RS Application, Resources and Sub-Resources</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jaxrs-resources"><fo:page-number-citation ref-id="jaxrs-resources"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.jaxrs-resources" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2039">3.1. Root Resource Classes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2039"><fo:page-number-citation ref-id="d0e2039"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.d0e2039" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2078">3.1.1. @Path</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2078"><fo:page-number-citation ref-id="d0e2078"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2128">3.1.2. @GET, @PUT, @POST, @DELETE, ... (HTTP Methods)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2128"><fo:page-number-citation ref-id="d0e2128"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2166">3.1.3. @Produces</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2166"><fo:page-number-citation ref-id="d0e2166"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2245">3.1.4. @Consumes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2245"><fo:page-number-citation ref-id="d0e2245"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2270">3.2. Parameter Annotations (@*Param)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2270"><fo:page-number-citation ref-id="d0e2270"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2541">3.3. Sub-resources</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2541"><fo:page-number-citation ref-id="d0e2541"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2688">3.4. Life-cycle of Root Resource Classes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2688"><fo:page-number-citation ref-id="d0e2688"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2759">3.5. Rules of Injection</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2759"><fo:page-number-citation ref-id="d0e2759"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2867">3.6. Use of @Context</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2867"><fo:page-number-citation ref-id="d0e2867"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2895">3.7. Programmatic resource model</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2895"><fo:page-number-citation ref-id="d0e2895"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deployment">4. Application Deployment and Runtime Environments</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deployment"><fo:page-number-citation ref-id="deployment"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.deployment" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deployment.intro">4.1. Introduction</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deployment.intro"><fo:page-number-citation ref-id="deployment.intro"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="environmenmt.appmodel">4.2. JAX-RS Application Model</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="environmenmt.appmodel"><fo:page-number-citation ref-id="environmenmt.appmodel"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deployment.autodiscoverable">4.3. Auto-Discoverable Features</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deployment.autodiscoverable"><fo:page-number-citation ref-id="deployment.autodiscoverable"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.deployment.autodiscoverable" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deployment.autodiscovery.config">4.3.1. Configuring Feature Auto-discovery Mechanism</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deployment.autodiscovery.config"><fo:page-number-citation ref-id="deployment.autodiscovery.config"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deployment.classpath-scanning">4.4. Configuring the Classpath Scanning</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deployment.classpath-scanning"><fo:page-number-citation ref-id="deployment.classpath-scanning"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deployment.javase">4.5. Java SE Deployment Environments</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deployment.javase"><fo:page-number-citation ref-id="deployment.javase"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.deployment.javase" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deployment.http">4.5.1. HTTP servers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deployment.http"><fo:page-number-citation ref-id="deployment.http"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deployment.jaxrs.endpoint">4.6. Creating programmatic JAX-RS endpoint</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deployment.jaxrs.endpoint"><fo:page-number-citation ref-id="deployment.jaxrs.endpoint"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deployment.servlet">4.7. Servlet-based Deployment</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deployment.servlet"><fo:page-number-citation ref-id="deployment.servlet"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.deployment.servlet" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deployment.servlet.2">4.7.1. Servlet 2.x Container</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deployment.servlet.2"><fo:page-number-citation ref-id="deployment.servlet.2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deployment.servlet.3">4.7.2. Servlet 3.x Container</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deployment.servlet.3"><fo:page-number-citation ref-id="deployment.servlet.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deployment.servlet.containers">4.7.3. Jersey Servlet container modules</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deployment.servlet.containers"><fo:page-number-citation ref-id="deployment.servlet.containers"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deployment.javaee">4.8. Java EE Platform</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deployment.javaee"><fo:page-number-citation ref-id="deployment.javaee"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.deployment.javaee" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deployment.javaee.managed">4.8.1. Managed Beans</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deployment.javaee.managed"><fo:page-number-citation ref-id="deployment.javaee.managed"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deployment.javaee.cdi">4.8.2. Context and Dependency Injection (CDI)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deployment.javaee.cdi"><fo:page-number-citation ref-id="deployment.javaee.cdi"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deployment.javaee.ejb">4.8.3. Enterprise Java Beans (EJB)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deployment.javaee.ejb"><fo:page-number-citation ref-id="deployment.javaee.ejb"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deployment.appservers">4.8.4. Java EE Servers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deployment.appservers"><fo:page-number-citation ref-id="deployment.appservers"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deployment.osgi">4.9. OSGi</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deployment.osgi"><fo:page-number-citation ref-id="deployment.osgi"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.deployment.osgi" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="osgi.shell">4.9.1. Enabling the OSGi shell in Glassfish</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="osgi.shell"><fo:page-number-citation ref-id="osgi.shell"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="osgi.wab">4.9.2. WAB Example</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="osgi.wab"><fo:page-number-citation ref-id="osgi.wab"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="osgi.httpservice">4.9.3. HTTP Service Example</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="osgi.httpservice"><fo:page-number-citation ref-id="osgi.httpservice"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deployment.other">4.10. Other Environments</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deployment.other"><fo:page-number-citation ref-id="deployment.other"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.deployment.other" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="deployment.other.cloud">4.10.1. Oracle Java Cloud Service</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="deployment.other.cloud"><fo:page-number-citation ref-id="deployment.other.cloud"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="client">5. Client API</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="client"><fo:page-number-citation ref-id="client"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.client" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e4206">5.1. Uniform Interface Constraint</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e4206"><fo:page-number-citation ref-id="d0e4206"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e4249">5.2. Ease of use and reusing JAX-RS artifacts</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e4249"><fo:page-number-citation ref-id="d0e4249"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e4365">5.3. Overview of the Client API</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e4365"><fo:page-number-citation ref-id="d0e4365"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.d0e4365" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e4368">5.3.1. Getting started with the client API</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e4368"><fo:page-number-citation ref-id="d0e4368"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e4387">5.3.2. 
                Creating and configuring a Client instance
            </fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e4387"><fo:page-number-citation ref-id="d0e4387"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e4571">5.3.3. Targeting a web resource</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e4571"><fo:page-number-citation ref-id="d0e4571"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e4639">5.3.4. Identifying resource on WebTarget</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e4639"><fo:page-number-citation ref-id="d0e4639"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e4715">5.3.5. Invoking a HTTP request</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e4715"><fo:page-number-citation ref-id="d0e4715"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e4858">5.3.6. Example summary</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e4858"><fo:page-number-citation ref-id="d0e4858"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e4887">5.3.7. Setting ExecutorService and ScheduledExecutorService</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e4887"><fo:page-number-citation ref-id="d0e4887"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e4917">5.4. Java instances and types for representations</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e4917"><fo:page-number-citation ref-id="d0e4917"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.d0e4917" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e4936">5.4.1. Adding support for new representations</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e4936"><fo:page-number-citation ref-id="d0e4936"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e4970">5.5. Client Transport Connectors</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e4970"><fo:page-number-citation ref-id="d0e4970"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e5220">5.6. Using client request and response filters</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e5220"><fo:page-number-citation ref-id="d0e5220"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e5254">5.7. Closing connections</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e5254"><fo:page-number-citation ref-id="d0e5254"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e5278">5.8. Injections into client providers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e5278"><fo:page-number-citation ref-id="d0e5278"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e5313">5.9. Securing a Client</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e5313"><fo:page-number-citation ref-id="d0e5313"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.d0e5313" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e5460">5.9.1. Http Authentication Support</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e5460"><fo:page-number-citation ref-id="d0e5460"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="rx-client">6. Reactive JAX-RS Client API</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="rx-client"><fo:page-number-citation ref-id="rx-client"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.rx-client" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e5555">6.1. Motivation for Reactive Client Extension</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e5555"><fo:page-number-citation ref-id="d0e5555"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e5726">6.2. Usage and Extension Modules</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e5726"><fo:page-number-citation ref-id="d0e5726"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="rx.client.supported">6.3. Supported Reactive Libraries</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="rx.client.supported"><fo:page-number-citation ref-id="rx.client.supported"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.rx.client.supported" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="rx-client.rxjava">6.3.1. RxJava (Observable)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="rx-client.rxjava"><fo:page-number-citation ref-id="rx-client.rxjava"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="rx-client.rxjava2">6.3.2. RxJava (Flowable)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="rx-client.rxjava2"><fo:page-number-citation ref-id="rx-client.rxjava2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="rx-client.guava">6.3.3. Guava (ListenableFuture and Futures)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="rx-client.guava"><fo:page-number-citation ref-id="rx-client.guava"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="rx.client.spi">6.4. Implementing Support for Custom Reactive Libraries (SPI)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="rx.client.spi"><fo:page-number-citation ref-id="rx.client.spi"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="representations">7. Representations and Responses</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="representations"><fo:page-number-citation ref-id="representations"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.representations" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="reps-and-types">7.1. Representations and Java Types</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="reps-and-types"><fo:page-number-citation ref-id="reps-and-types"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e6314">7.2. Building Responses</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e6314"><fo:page-number-citation ref-id="d0e6314"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e6351">7.3. WebApplicationException and Mapping Exceptions to Responses</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e6351"><fo:page-number-citation ref-id="d0e6351"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e6432">7.4. Conditional GETs and Returning 304 (Not Modified) Responses</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e6432"><fo:page-number-citation ref-id="d0e6432"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="message-body-workers">8. JAX-RS Entity Providers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="message-body-workers"><fo:page-number-citation ref-id="message-body-workers"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.message-body-workers" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e6478">8.1. Introduction</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e6478"><fo:page-number-citation ref-id="d0e6478"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e6512">8.2. How to Write Custom Entity Providers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e6512"><fo:page-number-citation ref-id="d0e6512"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.d0e6512" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e6549">8.2.1. MessageBodyWriter</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e6549"><fo:page-number-citation ref-id="d0e6549"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e6837">8.2.2. MessageBodyReader</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e6837"><fo:page-number-citation ref-id="d0e6837"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="providers-selection">8.3. Entity Provider Selection</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="providers-selection"><fo:page-number-citation ref-id="providers-selection"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e7398">8.4. Jersey <fo:inline font-family="monospace">MessageBodyWorkers</fo:inline> API</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e7398"><fo:page-number-citation ref-id="d0e7398"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e7482">8.5. Default Jersey Entity Providers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e7482"><fo:page-number-citation ref-id="d0e7482"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="media">9. Support for Common Media Type Representations</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="media"><fo:page-number-citation ref-id="media"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.media" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="json">9.1. JSON</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="json"><fo:page-number-citation ref-id="json"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.json" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e7649">9.1.1. Approaches to JSON Support</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e7649"><fo:page-number-citation ref-id="d0e7649"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="json.moxy">9.1.2. MOXy</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="json.moxy"><fo:page-number-citation ref-id="json.moxy"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="json.json-p">9.1.3. Java API for JSON Processing (JSON-P)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="json.json-p"><fo:page-number-citation ref-id="json.json-p"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="json.jackson">9.1.4. Jackson (1.x and 2.x)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="json.jackson"><fo:page-number-citation ref-id="json.jackson"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="json.jettison">9.1.5. Jettison</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="json.jettison"><fo:page-number-citation ref-id="json.jettison"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8435">9.1.6. <fo:inline font-family="monospace">@JSONP</fo:inline> - JSON with Padding Support</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8435"><fo:page-number-citation ref-id="d0e8435"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="xml">9.2. XML</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="xml"><fo:page-number-citation ref-id="xml"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.xml" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8602">9.2.1. Low level XML support</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8602"><fo:page-number-citation ref-id="d0e8602"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8650">9.2.2. Getting started with JAXB</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8650"><fo:page-number-citation ref-id="d0e8650"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8738">9.2.3. POJOs</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8738"><fo:page-number-citation ref-id="d0e8738"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8776">9.2.4. Using custom JAXBContext</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8776"><fo:page-number-citation ref-id="d0e8776"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8808">9.2.5. MOXy</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8808"><fo:page-number-citation ref-id="d0e8808"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="multipart">9.3. Multipart</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="multipart"><fo:page-number-citation ref-id="multipart"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.multipart" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8863">9.3.1. Overview</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8863"><fo:page-number-citation ref-id="d0e8863"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8964">9.3.2. Client</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8964"><fo:page-number-citation ref-id="d0e8964"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9095">9.3.3. Server</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9095"><fo:page-number-citation ref-id="d0e9095"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="filters-and-interceptors">10. Filters and Interceptors</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="filters-and-interceptors"><fo:page-number-citation ref-id="filters-and-interceptors"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.filters-and-interceptors" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9330">10.1. Introduction</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9330"><fo:page-number-citation ref-id="d0e9330"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9335">10.2. Filters</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9335"><fo:page-number-citation ref-id="d0e9335"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.d0e9335" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9364">10.2.1. Server filters</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9364"><fo:page-number-citation ref-id="d0e9364"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9469">10.2.2. Client filters</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9469"><fo:page-number-citation ref-id="d0e9469"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9504">10.3. Interceptors</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9504"><fo:page-number-citation ref-id="d0e9504"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9613">10.4. Filter and interceptor execution order</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9613"><fo:page-number-citation ref-id="d0e9613"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9674">10.5. Name binding</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9674"><fo:page-number-citation ref-id="d0e9674"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9747">10.6. Dynamic binding</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9747"><fo:page-number-citation ref-id="d0e9747"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9815">10.7. Priorities</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9815"><fo:page-number-citation ref-id="d0e9815"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="async">11. Asynchronous Services and Clients</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="async"><fo:page-number-citation ref-id="async"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.async" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9894">11.1. Asynchronous Server API</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9894"><fo:page-number-citation ref-id="d0e9894"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.d0e9894" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10015">11.1.1. Asynchronous Server-side Callbacks</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10015"><fo:page-number-citation ref-id="d0e10015"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="chunked-output">11.1.2. Chunked Output</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="chunked-output"><fo:page-number-citation ref-id="chunked-output"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10145">11.2. Client API</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10145"><fo:page-number-citation ref-id="d0e10145"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.d0e10145" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10208">11.2.1. Asynchronous Client Callbacks</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10208"><fo:page-number-citation ref-id="d0e10208"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10284">11.2.2. Chunked input</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10284"><fo:page-number-citation ref-id="d0e10284"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="uris-and-links">12. URIs and Links</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="uris-and-links"><fo:page-number-citation ref-id="uris-and-links"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.uris-and-links" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10367">12.1. Building URIs</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10367"><fo:page-number-citation ref-id="d0e10367"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10441">12.2. Resolve and Relativize</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10441"><fo:page-number-citation ref-id="d0e10441"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10484">12.3. Link</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10484"><fo:page-number-citation ref-id="d0e10484"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="declarative-linking">13. Declarative Hyperlinking</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="declarative-linking"><fo:page-number-citation ref-id="declarative-linking"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.declarative-linking" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10540">13.1. Dependency</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10540"><fo:page-number-citation ref-id="d0e10540"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10563">13.2. Links in Representations</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10563"><fo:page-number-citation ref-id="d0e10563"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10599">13.3. List of Link Injection</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10599"><fo:page-number-citation ref-id="d0e10599"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10607">13.4. Links from Resources</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10607"><fo:page-number-citation ref-id="d0e10607"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10635">13.5. Binding Template Parameters</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10635"><fo:page-number-citation ref-id="d0e10635"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10707">13.6. Conditional Link Injection</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10707"><fo:page-number-citation ref-id="d0e10707"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10729">13.7. Link Headers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10729"><fo:page-number-citation ref-id="d0e10729"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10770">13.8. Prevent Recursive Injection</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10770"><fo:page-number-citation ref-id="d0e10770"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10790">13.9. Meta-annotation support</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10790"><fo:page-number-citation ref-id="d0e10790"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10845">13.10. Configure and register</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10845"><fo:page-number-citation ref-id="d0e10845"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="resource-builder">14. Programmatic API for Building Resources</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="resource-builder"><fo:page-number-citation ref-id="resource-builder"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.resource-builder" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10863">14.1. Introduction</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10863"><fo:page-number-citation ref-id="d0e10863"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10908">14.2. Programmatic Hello World example</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10908"><fo:page-number-citation ref-id="d0e10908"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.d0e10908" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10980">14.2.1. Deployment of programmatic resources</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10980"><fo:page-number-citation ref-id="d0e10980"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e11042">14.3. Additional examples</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e11042"><fo:page-number-citation ref-id="d0e11042"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e11101">14.4. Model processors</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e11101"><fo:page-number-citation ref-id="d0e11101"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sse">15. Server-Sent Events (SSE) Support</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sse"><fo:page-number-citation ref-id="sse"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.sse" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e11148">15.1. What are Server-Sent Events</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e11148"><fo:page-number-citation ref-id="d0e11148"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e11191">15.2. When to use Server-Sent Events</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e11191"><fo:page-number-citation ref-id="d0e11191"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="jaxrs-sse-api-overview">15.3. Server-Sent Events API</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="jaxrs-sse-api-overview"><fo:page-number-citation ref-id="jaxrs-sse-api-overview"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e11253">15.4. Implementing SSE support in a JAX-RS resource (with JAX-RS SSE API)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e11253"><fo:page-number-citation ref-id="d0e11253"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.d0e11253" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e11256">15.4.1. Simple SSE resource method</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e11256"><fo:page-number-citation ref-id="d0e11256"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e11432">15.4.2. Broadcasting with Jersey SSE</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e11432"><fo:page-number-citation ref-id="d0e11432"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sse-client-jaxrs">15.5. Consuming SSE events within Jersey clients</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sse-client-jaxrs"><fo:page-number-citation ref-id="sse-client-jaxrs"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.sse-client-jaxrs" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sse-event-source-reconnect">15.5.1. 
                <fo:inline font-family="monospace">SseEventSource</fo:inline>
                reconnect support
            </fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sse-event-source-reconnect"><fo:page-number-citation ref-id="sse-event-source-reconnect"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="overview-jersey-specific">15.6. Jersey-specific Server-Sent Events API</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="overview-jersey-specific"><fo:page-number-citation ref-id="overview-jersey-specific"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.overview-jersey-specific" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e11872">15.6.1. Implementing SSE support in a JAX-RS resource</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e11872"><fo:page-number-citation ref-id="d0e11872"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e12061">15.6.2. Consuming SSE events with Jersey clients</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e12061"><fo:page-number-citation ref-id="d0e12061"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="security">16. Security</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="security"><fo:page-number-citation ref-id="security"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.security" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e12326">16.1. Securing server</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e12326"><fo:page-number-citation ref-id="d0e12326"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.d0e12326" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e12329">16.1.1. SecurityContext</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e12329"><fo:page-number-citation ref-id="d0e12329"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e12435">16.1.2. Authorization - securing resources</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e12435"><fo:page-number-citation ref-id="d0e12435"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e12558">16.2. Client Security</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e12558"><fo:page-number-citation ref-id="d0e12558"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e12575">16.3. OAuth Support</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e12575"><fo:page-number-citation ref-id="d0e12575"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.d0e12575" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e12637">16.3.1. OAuth 1</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e12637"><fo:page-number-citation ref-id="d0e12637"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e12969">16.3.2. OAuth 2 Support</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e12969"><fo:page-number-citation ref-id="d0e12969"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="wadl">17. WADL Support</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="wadl"><fo:page-number-citation ref-id="wadl"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.wadl" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e13101">17.1. WADL introduction</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e13101"><fo:page-number-citation ref-id="d0e13101"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e13396">17.2. Configuration</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e13396"><fo:page-number-citation ref-id="d0e13396"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e13451">17.3. Extended WADL support</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e13451"><fo:page-number-citation ref-id="d0e13451"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="bean-validation">18. Bean Validation Support</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="bean-validation"><fo:page-number-citation ref-id="bean-validation"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.bean-validation" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e13495">18.1. Bean Validation Dependencies</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e13495"><fo:page-number-citation ref-id="d0e13495"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e13521">18.2. Enabling Bean Validation in Jersey</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e13521"><fo:page-number-citation ref-id="d0e13521"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e13555">18.3. Configuring Bean Validation Support</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e13555"><fo:page-number-citation ref-id="d0e13555"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e13663">18.4. Validating JAX-RS resources and methods</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e13663"><fo:page-number-citation ref-id="d0e13663"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.d0e13663" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e13692">18.4.1. Constraint Annotations</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e13692"><fo:page-number-citation ref-id="d0e13692"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e13778">18.4.2. Annotation constraints and Validators</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e13778"><fo:page-number-citation ref-id="d0e13778"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e13828">18.4.3. Entity Validation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e13828"><fo:page-number-citation ref-id="d0e13828"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e13909">18.4.4. Annotation Inheritance</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e13909"><fo:page-number-citation ref-id="d0e13909"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="bv.ValidateOnExecution">18.5. @ValidateOnExecution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="bv.ValidateOnExecution"><fo:page-number-citation ref-id="bv.ValidateOnExecution"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="bv.injecting">18.6. Injecting</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="bv.injecting"><fo:page-number-citation ref-id="bv.injecting"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14033">18.7. Error Reporting</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14033"><fo:page-number-citation ref-id="d0e14033"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.d0e14033" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="bv.ValidationError">18.7.1. ValidationError</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="bv.ValidationError"><fo:page-number-citation ref-id="bv.ValidationError"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14191">18.8. Example</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14191"><fo:page-number-citation ref-id="d0e14191"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="entity-filtering">19. Entity Data Filtering</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="entity-filtering"><fo:page-number-citation ref-id="entity-filtering"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.entity-filtering" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14230">19.1. Enabling and configuring Entity Filtering in your application</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14230"><fo:page-number-citation ref-id="d0e14230"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14343">19.2. Components used to describe Entity Filtering concepts</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14343"><fo:page-number-citation ref-id="d0e14343"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ef.annotations">19.3. Using custom annotations to filter entities</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ef.annotations"><fo:page-number-citation ref-id="ef.annotations"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.ef.annotations" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14498">19.3.1. Server-side Entity Filtering</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14498"><fo:page-number-citation ref-id="d0e14498"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14616">19.3.2. Client-side Entity Filtering</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14616"><fo:page-number-citation ref-id="d0e14616"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ef.security.annotations">19.4. Role-based Entity Filtering using (<fo:inline font-family="monospace">javax.annotation.security</fo:inline>) annotations</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ef.security.annotations"><fo:page-number-citation ref-id="ef.security.annotations"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ef.selectable.annotations">19.5. Entity Filtering based on dynamic and configurable query parameters</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ef.selectable.annotations"><fo:page-number-citation ref-id="ef.selectable.annotations"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ef.custom.annotations">19.6. Defining custom handling for entity-filtering annotations</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ef.custom.annotations"><fo:page-number-citation ref-id="ef.custom.annotations"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ef.custom.providers">19.7. Supporting Entity Data Filtering in custom entity providers or frameworks</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ef.custom.providers"><fo:page-number-citation ref-id="ef.custom.providers"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ef.modules">19.8. Modules with support for Entity Data Filtering</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ef.modules"><fo:page-number-citation ref-id="ef.modules"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14817">19.9. Examples</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14817"><fo:page-number-citation ref-id="d0e14817"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mvc">20. MVC Templates</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mvc"><fo:page-number-citation ref-id="mvc"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.mvc" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14859">20.1. Viewable</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14859"><fo:page-number-citation ref-id="d0e14859"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14904">20.2. @Template</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14904"><fo:page-number-citation ref-id="d0e14904"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.d0e14904" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14907">20.2.1. Annotating Resource methods</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14907"><fo:page-number-citation ref-id="d0e14907"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14963">20.2.2. Annotating Resource classes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14963"><fo:page-number-citation ref-id="d0e14963"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mvc.references">20.3. Absolute vs. Relative template reference</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mvc.references"><fo:page-number-citation ref-id="mvc.references"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.mvc.references" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e15059">20.3.1. Relative template reference</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e15059"><fo:page-number-citation ref-id="d0e15059"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e15103">20.3.2. Absolute template reference</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e15103"><fo:page-number-citation ref-id="d0e15103"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e15149">20.4. Handling errors with MVC</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e15149"><fo:page-number-citation ref-id="d0e15149"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.d0e15149" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e15203">20.4.1. MVC &amp; Bean Validation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e15203"><fo:page-number-citation ref-id="d0e15203"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mvc.registration">20.5. Registration and Configuration</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mvc.registration"><fo:page-number-citation ref-id="mvc.registration"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e15333">20.6. Supported templating engines</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e15333"><fo:page-number-citation ref-id="d0e15333"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.d0e15333" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e15338">20.6.1. Mustache</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e15338"><fo:page-number-citation ref-id="d0e15338"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e15440">20.6.2. Freemarker</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e15440"><fo:page-number-citation ref-id="d0e15440"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e15556">20.6.3. JSP</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e15556"><fo:page-number-citation ref-id="d0e15556"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mvc.spi">20.7. Writing Custom Templating Engines</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mvc.spi"><fo:page-number-citation ref-id="mvc.spi"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e15703">20.8. Other Examples</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e15703"><fo:page-number-citation ref-id="d0e15703"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="logging_chapter">21. Logging</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="logging_chapter"><fo:page-number-citation ref-id="logging_chapter"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.logging_chapter" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="logging">21.1. Logging traffic</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="logging"><fo:page-number-citation ref-id="logging"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.logging" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e15718">21.1.1. Introduction</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e15718"><fo:page-number-citation ref-id="d0e15718"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e15743">21.1.2. Configuration and registering</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e15743"><fo:page-number-citation ref-id="d0e15743"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="monitoring_tracing">22. Monitoring and Diagnostics</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="monitoring_tracing"><fo:page-number-citation ref-id="monitoring_tracing"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.monitoring_tracing" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="monitoring">22.1. Monitoring Jersey Applications</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="monitoring"><fo:page-number-citation ref-id="monitoring"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.monitoring" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e15955">22.1.1. Introduction</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e15955"><fo:page-number-citation ref-id="d0e15955"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e16006">22.1.2. Event Listeners</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e16006"><fo:page-number-citation ref-id="d0e16006"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="tracing">22.2. Tracing Support</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="tracing"><fo:page-number-citation ref-id="tracing"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.tracing" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="tracing.configuration">22.2.1. Configuration options</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="tracing.configuration"><fo:page-number-citation ref-id="tracing.configuration"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e16743">22.2.2. Tracing Log</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e16743"><fo:page-number-citation ref-id="d0e16743"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e16757">22.2.3. Configuring tracing support via HTTP request headers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e16757"><fo:page-number-citation ref-id="d0e16757"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e16800">22.2.4. Format of the HTTP response headers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e16800"><fo:page-number-citation ref-id="d0e16800"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e16957">22.2.5. Tracing Examples</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e16957"><fo:page-number-citation ref-id="d0e16957"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ioc">23. Custom Injection and Lifecycle Management</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ioc"><fo:page-number-citation ref-id="ioc"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.ioc" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e17032">23.1. Implementing Custom Injection Provider</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e17032"><fo:page-number-citation ref-id="d0e17032"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e17133">23.2. Defining Custom Injection Annotation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e17133"><fo:page-number-citation ref-id="d0e17133"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e17201">23.3. Custom Life Cycle Management</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e17201"><fo:page-number-citation ref-id="d0e17201"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="cdi.support">24. Jersey CDI Container Agnostic Support</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="cdi.support"><fo:page-number-citation ref-id="cdi.support"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.cdi.support" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="cdi.support.intro">24.1. Introduction</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="cdi.support.intro"><fo:page-number-citation ref-id="cdi.support.intro"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="cdi.support.existing.containers">24.2. Containers Known to Work With Jersey CDI Support</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="cdi.support.existing.containers"><fo:page-number-citation ref-id="cdi.support.existing.containers"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="cdi.support.request.scope.binding">24.3. Request Scope Binding</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="cdi.support.request.scope.binding"><fo:page-number-citation ref-id="cdi.support.request.scope.binding"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="cdi.support.weld.se">24.4. Jersey Weld SE Support</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="cdi.support.weld.se"><fo:page-number-citation ref-id="cdi.support.weld.se"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="spring">25. Spring DI</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="spring"><fo:page-number-citation ref-id="spring"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.spring" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e17409">25.1. Dependencies</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e17409"><fo:page-number-citation ref-id="d0e17409"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e17428">25.2. Registration and Configuration</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e17428"><fo:page-number-citation ref-id="d0e17428"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e17433">25.3. Example</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e17433"><fo:page-number-citation ref-id="d0e17433"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="test-framework">26. Jersey Test Framework</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="test-framework"><fo:page-number-citation ref-id="test-framework"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.test-framework" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e17463">26.1. Basics</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e17463"><fo:page-number-citation ref-id="d0e17463"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e17500">26.2. Supported Containers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e17500"><fo:page-number-citation ref-id="d0e17500"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="testng">26.3. Running TestNG Tests</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="testng"><fo:page-number-citation ref-id="testng"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e17693">26.4. Advanced features</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e17693"><fo:page-number-citation ref-id="d0e17693"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.d0e17693" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e17696">26.4.1. <fo:inline font-family="monospace">JerseyTest</fo:inline> Features</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e17696"><fo:page-number-citation ref-id="d0e17696"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e17720">26.4.2. External container</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e17720"><fo:page-number-citation ref-id="d0e17720"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e17731">26.4.3. Test Client configuration</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e17731"><fo:page-number-citation ref-id="d0e17731"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e17745">26.4.4. Accessing the logged test records programmatically</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e17745"><fo:page-number-citation ref-id="d0e17745"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="parallel">26.5. Parallel Testing with Jersey Test Framework</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="parallel"><fo:page-number-citation ref-id="parallel"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="how-to-build">27. Building and Testing Jersey</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="how-to-build"><fo:page-number-citation ref-id="how-to-build"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.how-to-build" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="checkout">27.1. Checking Out the Source</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="checkout"><fo:page-number-citation ref-id="checkout"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="building">27.2. Building the Source</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="building"><fo:page-number-citation ref-id="building"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="testing">27.3. Testing</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="testing"><fo:page-number-citation ref-id="testing"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="netbeans-build">27.4. Using NetBeans</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="netbeans-build"><fo:page-number-citation ref-id="netbeans-build"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="migration">28. Migration Guide</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="migration"><fo:page-number-citation ref-id="migration"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.migration" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.27">28.1. Migrating from Jersey 2.23 to 2.27</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.27"><fo:page-number-citation ref-id="mig-2.27"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.mig-2.27" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.27-breaking-changes">28.1.1. Breaking Changes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.27-breaking-changes"><fo:page-number-citation ref-id="mig-2.27-breaking-changes"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.27-injection-manager">28.1.2. Breaking Changes - Injection Manager</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.27-injection-manager"><fo:page-number-citation ref-id="mig-2.27-injection-manager"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.26-removed-deprecated">28.1.3. Removed deprecated APIs</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.26-removed-deprecated"><fo:page-number-citation ref-id="mig-2.26-removed-deprecated"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e18068">28.2. Migrating from Jersey 2.22.1 to 2.23</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e18068"><fo:page-number-citation ref-id="d0e18068"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.d0e18068" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.23-highlights">28.2.1. Release 2.23 Highlights</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.23-highlights"><fo:page-number-citation ref-id="mig-2.23-highlights"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.23-new-deprecated">28.2.2. Deprecated APIs</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.23-new-deprecated"><fo:page-number-citation ref-id="mig-2.23-new-deprecated"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.23-breaking-changes">28.3. Breaking Changes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.23-breaking-changes"><fo:page-number-citation ref-id="mig-2.23-breaking-changes"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.22.1">28.4. Migrating from Jersey 2.22 to 2.22.1</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.22.1"><fo:page-number-citation ref-id="mig-2.22.1"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.mig-2.22.1" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.22.1-breaking-changes">28.4.1. Breaking Changes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.22.1-breaking-changes"><fo:page-number-citation ref-id="mig-2.22.1-breaking-changes"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.22">28.5. Migrating from Jersey 2.21 to 2.22</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.22"><fo:page-number-citation ref-id="mig-2.22"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.mig-2.22" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.22-breaking-changes">28.5.1. Breaking Changes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.22-breaking-changes"><fo:page-number-citation ref-id="mig-2.22-breaking-changes"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.20">28.6. Migrating from Jersey 2.19 to 2.20</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.20"><fo:page-number-citation ref-id="mig-2.20"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.mig-2.20" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.20-breaking-changes">28.6.1. Breaking Changes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.20-breaking-changes"><fo:page-number-citation ref-id="mig-2.20-breaking-changes"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.19">28.7. Migrating from Jersey 2.18 to 2.19</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.19"><fo:page-number-citation ref-id="mig-2.19"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.mig-2.19" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.19-breaking-changes">28.7.1. Breaking Changes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.19-breaking-changes"><fo:page-number-citation ref-id="mig-2.19-breaking-changes"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.18">28.8. Migrating from Jersey 2.17 to 2.18</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.18"><fo:page-number-citation ref-id="mig-2.18"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.mig-2.18" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.18-highlights">28.8.1. Release 2.18 Highlights</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.18-highlights"><fo:page-number-citation ref-id="mig-2.18-highlights"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.18-removed-deprecated">28.8.2. Removed deprecated APIs</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.18-removed-deprecated"><fo:page-number-citation ref-id="mig-2.18-removed-deprecated"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.18-breaking-changes">28.8.3. Breaking Changes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.18-breaking-changes"><fo:page-number-citation ref-id="mig-2.18-breaking-changes"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.17">28.9. Migrating from Jersey 2.16 to 2.17</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.17"><fo:page-number-citation ref-id="mig-2.17"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.mig-2.17" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.17-highlights">28.9.1. Release 2.17 Highlights</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.17-highlights"><fo:page-number-citation ref-id="mig-2.17-highlights"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.16">28.10. Migrating from Jersey 2.15 to 2.16</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.16"><fo:page-number-citation ref-id="mig-2.16"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.mig-2.16" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.16-highlights">28.10.1. Release 2.16 Highlights</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.16-highlights"><fo:page-number-citation ref-id="mig-2.16-highlights"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.16-new-deprecated">28.10.2. Deprecated APIs</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.16-new-deprecated"><fo:page-number-citation ref-id="mig-2.16-new-deprecated"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.16-breaking-changes">28.10.3. Breaking Changes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.16-breaking-changes"><fo:page-number-citation ref-id="mig-2.16-breaking-changes"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.15">28.11. Migrating to 2.15</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.15"><fo:page-number-citation ref-id="mig-2.15"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.mig-2.15" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.15-highlights">28.11.1. Release 2.15 Highlights</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.15-highlights"><fo:page-number-citation ref-id="mig-2.15-highlights"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.15-breaking-changes">28.11.2. Breaking Changes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.15-breaking-changes"><fo:page-number-citation ref-id="mig-2.15-breaking-changes"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.12">28.12. Migrating from Jersey 2.11 to 2.12</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.12"><fo:page-number-citation ref-id="mig-2.12"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.mig-2.12" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.12-highlights">28.12.1. Release 2.12 Highlights</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.12-highlights"><fo:page-number-citation ref-id="mig-2.12-highlights"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.12-breaking-changes">28.12.2. Breaking Changes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.12-breaking-changes"><fo:page-number-citation ref-id="mig-2.12-breaking-changes"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.11">28.13. Migrating from Jersey 2.10 to 2.11</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.11"><fo:page-number-citation ref-id="mig-2.11"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.mig-2.11" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.11-highlights">28.13.1. Release 2.11 Highlights</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.11-highlights"><fo:page-number-citation ref-id="mig-2.11-highlights"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.10">28.14. Migrating from Jersey 2.9 to 2.10</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.10"><fo:page-number-citation ref-id="mig-2.10"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.mig-2.10" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.10-removed-deprecated">28.14.1. Removed deprecated APIs</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.10-removed-deprecated"><fo:page-number-citation ref-id="mig-2.10-removed-deprecated"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.9">28.15. Migrating from Jersey 2.8 to 2.9</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.9"><fo:page-number-citation ref-id="mig-2.9"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.mig-2.9" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.9-highlights">28.15.1. Release 2.9 Highlights</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.9-highlights"><fo:page-number-citation ref-id="mig-2.9-highlights"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.9-breaking-changes">28.15.2. Changes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.9-breaking-changes"><fo:page-number-citation ref-id="mig-2.9-breaking-changes"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.8">28.16. Migrating from Jersey 2.7 to 2.8</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.8"><fo:page-number-citation ref-id="mig-2.8"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.mig-2.8" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.8-breaking-changes">28.16.1. Changes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.8-breaking-changes"><fo:page-number-citation ref-id="mig-2.8-breaking-changes"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.7">28.17. Migrating from Jersey 2.6 to 2.7</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.7"><fo:page-number-citation ref-id="mig-2.7"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.mig-2.7" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.7-breaking-changes">28.17.1. Changes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.7-breaking-changes"><fo:page-number-citation ref-id="mig-2.7-breaking-changes"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.6">28.18. Migrating from Jersey 2.5.1 to 2.6</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.6"><fo:page-number-citation ref-id="mig-2.6"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.mig-2.6" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.6-repackaged">28.18.1. Guava and ASM have been embedded</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.6-repackaged"><fo:page-number-citation ref-id="mig-2.6-repackaged"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.6-new-deprecated">28.18.2. Deprecated APIs</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.6-new-deprecated"><fo:page-number-citation ref-id="mig-2.6-new-deprecated"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.6-removed-deprecated">28.18.3. Removed deprecated APIs</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.6-removed-deprecated"><fo:page-number-citation ref-id="mig-2.6-removed-deprecated"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.5.1">28.19. Migrating from Jersey 2.5 to 2.5.1</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.5.1"><fo:page-number-citation ref-id="mig-2.5.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.5">28.20. Migrating from Jersey 2.4.1 to 2.5</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.5"><fo:page-number-citation ref-id="mig-2.5"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.mig-2.5" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.5-client">28.20.1. Client-side API and SPI changes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.5-client"><fo:page-number-citation ref-id="mig-2.5-client"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.5-other">28.20.2. Other changes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.5-other"><fo:page-number-citation ref-id="mig-2.5-other"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.4.1">28.21. Migrating from Jersey 2.4 to 2.4.1</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.4.1"><fo:page-number-citation ref-id="mig-2.4.1"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.4">28.22. Migrating from Jersey 2.3 to 2.4</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.4"><fo:page-number-citation ref-id="mig-2.4"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-2.3">28.23. Migrating from Jersey 2.0, 2.1 or 2.2 to 2.3</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-2.3"><fo:page-number-citation ref-id="mig-2.3"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-1.x">28.24. Migrating from Jersey 1.x to 2.0</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-1.x"><fo:page-number-citation ref-id="mig-1.x"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.mig-1.x" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-server-api">28.24.1. Server API</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-server-api"><fo:page-number-citation ref-id="mig-server-api"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-client-api">28.24.2. Migrating Jersey Client API</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-client-api"><fo:page-number-citation ref-id="mig-client-api"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mig-1-x-json">28.24.3. JSON support changes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mig-1-x-json"><fo:page-number-citation ref-id="mig-1-x-json"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="appendix-properties">A. Configuration Properties</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="appendix-properties"><fo:page-number-citation ref-id="appendix-properties"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.d0e2.appendix-properties" margin-left="24pt"><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="appendix-properties-common">A.1. Common (client/server) configuration properties</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="appendix-properties-common"><fo:page-number-citation ref-id="appendix-properties-common"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="appendix-properties-server">A.2. Server configuration properties</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="appendix-properties-server"><fo:page-number-citation ref-id="appendix-properties-server"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="appendix-properties-servlet">A.3. Servlet configuration properties</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="appendix-properties-servlet"><fo:page-number-citation ref-id="appendix-properties-servlet"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="appendix-properties-client">A.4. Client configuration properties</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="appendix-properties-client"><fo:page-number-citation ref-id="appendix-properties-client"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="lot" language="en" format="i" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Jersey 2.28 User Guide</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Jersey 2.28 User Guide</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="lot...figure...d0e2"><fo:block><fo:block><fo:block space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em" space-after="0.5em" start-indent="0pt" font-size="17.28pt" font-weight="bold" font-family="sans-serif,Symbol,ZapfDingbats">List of Figures</fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="rx.client.motivation.problem">6.1. Travel Agency Orchestration Service</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="rx.client.motivation.problem"><fo:page-number-citation ref-id="rx.client.motivation.problem"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="rx.client.motivation.graph.sync">6.2. Time consumed to create a response for the client – synchronous way</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="rx.client.motivation.graph.sync"><fo:page-number-citation ref-id="rx.client.motivation.graph.sync"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="rx.client.motivation.graph.async">6.3. Time consumed to create a response for the client – asynchronous way</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="rx.client.motivation.graph.async"><fo:page-number-citation ref-id="rx.client.motivation.graph.async"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="lot" language="en" format="i" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Jersey 2.28 User Guide</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Jersey 2.28 User Guide</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="lot...table...d0e2"><fo:block><fo:block><fo:block space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em" space-after="0.5em" start-indent="0pt" font-size="17.28pt" font-weight="bold" font-family="sans-serif,Symbol,ZapfDingbats">List of Tables</fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="dependencies-table-org.glassfish.jersey.core">2.1. Jersey Core</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="dependencies-table-org.glassfish.jersey.core"><fo:page-number-citation ref-id="dependencies-table-org.glassfish.jersey.core"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="dependencies-table-org.glassfish.jersey.containers">2.2. Jersey Containers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="dependencies-table-org.glassfish.jersey.containers"><fo:page-number-citation ref-id="dependencies-table-org.glassfish.jersey.containers"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="dependencies-table-org.glassfish.jersey.connectors">2.3. Jersey Connectors</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="dependencies-table-org.glassfish.jersey.connectors"><fo:page-number-citation ref-id="dependencies-table-org.glassfish.jersey.connectors"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="dependencies-table-org.glassfish.jersey.media">2.4. Jersey Media</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="dependencies-table-org.glassfish.jersey.media"><fo:page-number-citation ref-id="dependencies-table-org.glassfish.jersey.media"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="dependencies-table-org.glassfish.jersey.ext">2.5. Jersey Extensions</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="dependencies-table-org.glassfish.jersey.ext"><fo:page-number-citation ref-id="dependencies-table-org.glassfish.jersey.ext"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="dependencies-table-org.glassfish.jersey.test-framework">2.6. Jersey Test Framework</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="dependencies-table-org.glassfish.jersey.test-framework"><fo:page-number-citation ref-id="dependencies-table-org.glassfish.jersey.test-framework"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="dependencies-table-org.glassfish.jersey.test-framework.providers">2.7. Jersey Test Framework Providers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="dependencies-table-org.glassfish.jersey.test-framework.providers"><fo:page-number-citation ref-id="dependencies-table-org.glassfish.jersey.test-framework.providers"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="dependencies-table-org.glassfish.jersey.containers.glassfish">2.8. Jersey Glassfish Bundles</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="dependencies-table-org.glassfish.jersey.containers.glassfish"><fo:page-number-citation ref-id="dependencies-table-org.glassfish.jersey.containers.glassfish"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="dependencies-table-org.glassfish.jersey.security">2.9. Security</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="dependencies-table-org.glassfish.jersey.security"><fo:page-number-citation ref-id="dependencies-table-org.glassfish.jersey.security"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="dependencies-table-org.glassfish.jersey.examples">2.10. Jersey Examples</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="dependencies-table-org.glassfish.jersey.examples"><fo:page-number-citation ref-id="dependencies-table-org.glassfish.jersey.examples"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2705">3.1. Resource scopes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2705"><fo:page-number-citation ref-id="d0e2705"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2813">3.2. Overview of injection types</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2813"><fo:page-number-citation ref-id="d0e2813"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="environment-table-pluggability">4.1. Servlet 3 Pluggability Overview</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="environment-table-pluggability"><fo:page-number-citation ref-id="environment-table-pluggability"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e4994">5.1. List of Jersey Connectors</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e4994"><fo:page-number-citation ref-id="d0e4994"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e7951">9.1. Default property values for MOXy MessageBodyReader&lt;T&gt; / MessageBodyWriter&lt;T&gt;</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e7951"><fo:page-number-citation ref-id="d0e7951"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e19055">28.1. List of changed configuration properties:</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e19055"><fo:page-number-citation ref-id="d0e19055"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e19980">28.2. Mapping of Jersey 1.x to JAX-RS 2.0 client classes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e19980"><fo:page-number-citation ref-id="d0e19980"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e20155">28.3. JSON approaches and usage in Jersey 1 vs Jersey 2</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e20155"><fo:page-number-citation ref-id="d0e20155"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e20431">A.1. List of common configuration properties</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e20431"><fo:page-number-citation ref-id="d0e20431"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e20602">A.2. List of server configuration properties</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e20602"><fo:page-number-citation ref-id="d0e20602"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e21284">A.3. List of servlet configuration properties</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e21284"><fo:page-number-citation ref-id="d0e21284"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e21395">A.4. List of client configuration properties</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e21395"><fo:page-number-citation ref-id="d0e21395"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="lot" language="en" format="i" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Jersey 2.28 User Guide</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Jersey 2.28 User Guide</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="lot...example...d0e2"><fo:block><fo:block><fo:block space-before.minimum="1em" space-before.optimum="1.5em" space-before.maximum="2em" space-after="0.5em" start-indent="0pt" font-size="17.28pt" font-weight="bold" font-family="sans-serif,Symbol,ZapfDingbats">List of Examples</fo:block></fo:block></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2072">3.1. Simple hello world root resource class</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2072"><fo:page-number-citation ref-id="d0e2072"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2111">3.2. Specifying URI path parameter</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2111"><fo:page-number-citation ref-id="d0e2111"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2154">3.3. PUT method</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2154"><fo:page-number-citation ref-id="d0e2154"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2179">3.4. Specifying output MIME type</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2179"><fo:page-number-citation ref-id="d0e2179"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2221">3.5. Using multiple output MIME types</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2221"><fo:page-number-citation ref-id="d0e2221"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2234">3.6. Server-side content negotiation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2234"><fo:page-number-citation ref-id="d0e2234"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2255">3.7. Specifying input MIME type</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2255"><fo:page-number-citation ref-id="d0e2255"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2285">3.8. Query parameters</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2285"><fo:page-number-citation ref-id="d0e2285"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2298">3.9. Custom Java type for consuming request parameters</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2298"><fo:page-number-citation ref-id="d0e2298"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2417">3.10. Processing POSTed HTML form</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2417"><fo:page-number-citation ref-id="d0e2417"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2427">3.11. Obtaining general map of URI path and/or query parameters</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2427"><fo:page-number-citation ref-id="d0e2427"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2437">3.12. Obtaining general map of header parameters</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2437"><fo:page-number-citation ref-id="d0e2437"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2452">3.13. Obtaining general map of form parameters</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2452"><fo:page-number-citation ref-id="d0e2452"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2481">3.14. Example of the bean which will be used as @BeanParam
            </fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2481"><fo:page-number-citation ref-id="d0e2481"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2489">3.15. Injection of MyBeanParam as a method parameter:</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2489"><fo:page-number-citation ref-id="d0e2489"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2536">3.16. Injection of more beans into one resource methods:</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2536"><fo:page-number-citation ref-id="d0e2536"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2561">3.17. Sub-resource methods</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2561"><fo:page-number-citation ref-id="d0e2561"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2594">3.18. Sub-resource locators</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2594"><fo:page-number-citation ref-id="d0e2594"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2622">3.19. Sub-resource locators with empty path</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2622"><fo:page-number-citation ref-id="d0e2622"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2637">3.20. Sub-resource locators returning sub-type</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2637"><fo:page-number-citation ref-id="d0e2637"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2650">3.21. Sub-resource locators created from classes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2650"><fo:page-number-citation ref-id="d0e2650"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2674">3.22. Sub-resource locators returning resource model</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2674"><fo:page-number-citation ref-id="d0e2674"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2768">3.23. Injection</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2768"><fo:page-number-citation ref-id="d0e2768"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2778">3.24. Wrong injection into a singleton scope</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2778"><fo:page-number-citation ref-id="d0e2778"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2805">3.25. Injection of proxies into singleton</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2805"><fo:page-number-citation ref-id="d0e2805"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2856">3.26. Example of possible injections</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2856"><fo:page-number-citation ref-id="d0e2856"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2926">4.1. Deployment agnostic application model</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2926"><fo:page-number-citation ref-id="d0e2926"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e2970">4.2. Reusing Jersey implementation in your custom application model</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e2970"><fo:page-number-citation ref-id="d0e2970"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e3175">4.3. Registering SPI implementations using ResourceConfig</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e3175"><fo:page-number-citation ref-id="d0e3175"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e3184">4.4. Registering SPI implementations using <fo:inline font-family="monospace">ResourceConfig</fo:inline> subclass</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e3184"><fo:page-number-citation ref-id="d0e3184"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e3228">4.5. Using Jersey with JDK HTTP Server</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e3228"><fo:page-number-citation ref-id="d0e3228"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e3267">4.6. Using Jersey with Grizzly HTTP Server</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e3267"><fo:page-number-citation ref-id="d0e3267"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e3300">4.7. Using Jersey with the Simple framework</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e3300"><fo:page-number-citation ref-id="d0e3300"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e3341">4.8. Using Jersey with Jetty HTTP Server</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e3341"><fo:page-number-citation ref-id="d0e3341"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e3360">4.9. Using Jersey with Netty HTTP Server</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e3360"><fo:page-number-citation ref-id="d0e3360"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e3409">4.10. Hooking up Jersey as a Servlet</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e3409"><fo:page-number-citation ref-id="d0e3409"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e3418">4.11. Hooking up Jersey as a Servlet Filter</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e3418"><fo:page-number-citation ref-id="d0e3418"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e3467">4.12. 
                            Configuring Jersey container Servlet or Filter to use custom <fo:inline font-family="monospace">Application</fo:inline> subclass
                        </fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e3467"><fo:page-number-citation ref-id="d0e3467"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e3499">4.13. Configuring Jersey container Servlet or Filter to use package scanning</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e3499"><fo:page-number-citation ref-id="d0e3499"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e3522">4.14. Configuring Jersey container Servlet or Filter to use a list of classes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e3522"><fo:page-number-citation ref-id="d0e3522"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e3550">4.15. Deployment of a JAX-RS application using <fo:inline font-family="monospace">@ApplicationPath</fo:inline> with Servlet 3.0</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e3550"><fo:page-number-citation ref-id="d0e3550"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e3588">4.16. Configuration of maven-war-plugin to ignore missing <fo:inline font-family="monospace">web.xml</fo:inline></fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e3588"><fo:page-number-citation ref-id="d0e3588"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e3618">4.17. Deployment of a JAX-RS application using <fo:inline font-family="monospace">web.xml</fo:inline> with Servlet 3.0
                        </fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e3618"><fo:page-number-citation ref-id="d0e3618"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e3682">4.18. 
                            <fo:inline font-family="monospace">web.xml</fo:inline> of a JAX-RS application without an <fo:inline font-family="monospace">Application</fo:inline> subclass
                        </fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e3682"><fo:page-number-citation ref-id="d0e3682"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e3746">4.19. </fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e3746"><fo:page-number-citation ref-id="d0e3746"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e4051">4.20. </fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e4051"><fo:page-number-citation ref-id="d0e4051"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="client.ex.formpost">5.1. POST request with form parameters</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="client.ex.formpost"><fo:page-number-citation ref-id="client.ex.formpost"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e4863">5.2. Using JAX-RS Client API</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e4863"><fo:page-number-citation ref-id="d0e4863"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e4869">5.3. Using JAX-RS Client API fluently</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e4869"><fo:page-number-citation ref-id="d0e4869"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e4912">5.4. Setting JAX-RS Client ExecutorService</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e4912"><fo:page-number-citation ref-id="d0e4912"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e5143">5.5. Sending restricted headers with <fo:inline font-family="monospace">HttpUrlConnector</fo:inline></fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e5143"><fo:page-number-citation ref-id="d0e5143"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e5259">5.6. Closing connections</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e5259"><fo:page-number-citation ref-id="d0e5259"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e5300">5.7. ServiceLocatorClientProvider example</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e5300"><fo:page-number-citation ref-id="d0e5300"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="rx.client.motivation.naive">6.1. Excerpt from a synchronous approach while implementing the orchestration layer</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="rx.client.motivation.naive"><fo:page-number-citation ref-id="rx.client.motivation.naive"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="rx.client.motivation.optimized">6.2. Excerpt from an asynchronous approach while implementing the orchestration layer</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="rx.client.motivation.optimized"><fo:page-number-citation ref-id="rx.client.motivation.optimized"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="rx.client.motivation.reactive">6.3. Excerpt from a reactive approach while implementing the orchestration layer</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="rx.client.motivation.reactive"><fo:page-number-citation ref-id="rx.client.motivation.reactive"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="rx.client.sync">6.4. Synchronous invocation of HTTP requests</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="rx.client.sync"><fo:page-number-citation ref-id="rx.client.sync"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="rx.client.async">6.5. Asynchronous invocation of HTTP requests</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="rx.client.async"><fo:page-number-citation ref-id="rx.client.async"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="rx.client.reactive">6.6. Reactive invocation of HTTP requests</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="rx.client.reactive"><fo:page-number-citation ref-id="rx.client.reactive"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="rx.client.rxjava.rx">6.7. Creating JAX-RS Client with RxJava reactive extension</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="rx.client.rxjava.rx"><fo:page-number-citation ref-id="rx.client.rxjava.rx"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="rx.client.rxjava.usage">6.8. Obtaining Observable&lt;Response&gt; from Jersey/RxJava Client</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="rx.client.rxjava.usage"><fo:page-number-citation ref-id="rx.client.rxjava.usage"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="rx.client.rxjava2.rx">6.9. Creating JAX-RS Client with RxJava2 reactive extension</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="rx.client.rxjava2.rx"><fo:page-number-citation ref-id="rx.client.rxjava2.rx"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="rx.client.rxjava2.usage">6.10. Obtaining Flowable&lt;Response&gt; from Jersey/RxJava Client</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="rx.client.rxjava2.usage"><fo:page-number-citation ref-id="rx.client.rxjava2.usage"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="rx.client.guava.rx">6.11. Creating Jersey/Guava Client</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="rx.client.guava.rx"><fo:page-number-citation ref-id="rx.client.guava.rx"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="rx.client.guava.usage">6.12. Obtaining ListenableFuture&lt;Response&gt; from Jersey/Guava Client</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="rx.client.guava.usage"><fo:page-number-citation ref-id="rx.client.guava.usage"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="rx.client.rxinvoker">6.13. Extending RxIvoker</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="rx.client.rxinvoker"><fo:page-number-citation ref-id="rx.client.rxinvoker"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="rx.client.extend.rxinvoker">6.14. Extending RxInvokerProvider</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="rx.client.extend.rxinvoker"><fo:page-number-citation ref-id="rx.client.extend.rxinvoker"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e6275">7.1. Using
                    <fo:inline font-family="monospace">File</fo:inline>
                    with a specific media type to produce a response
                </fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e6275"><fo:page-number-citation ref-id="d0e6275"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e6330">7.2. Returning 201 status code and adding
                    <fo:inline font-family="monospace">Location</fo:inline>
                    header in response to POST request
                </fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e6330"><fo:page-number-citation ref-id="d0e6330"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e6343">7.3. Adding an entity body to a custom response</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e6343"><fo:page-number-citation ref-id="d0e6343"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e6363">7.4. Throwing exceptions to control response</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e6363"><fo:page-number-citation ref-id="d0e6363"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e6376">7.5. Application specific exception implementation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e6376"><fo:page-number-citation ref-id="d0e6376"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e6398">7.6. Mapping generic exceptions to responses</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e6398"><fo:page-number-citation ref-id="d0e6398"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e6446">7.7. Conditional GET support</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e6446"><fo:page-number-citation ref-id="d0e6446"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e6523">8.1. Example resource class</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e6523"><fo:page-number-citation ref-id="d0e6523"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e6543">8.2. MyBean entity class</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e6543"><fo:page-number-citation ref-id="d0e6543"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e6567">8.3. MessageBodyWriter example</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e6567"><fo:page-number-citation ref-id="d0e6567"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e6623">8.4. Example of assignment of annotations to a response entity</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e6623"><fo:page-number-citation ref-id="d0e6623"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="client-get-call">8.5. Client code testing MyBeanMessageBodyWriter</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="client-get-call"><fo:page-number-citation ref-id="client-get-call"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e6822">8.6. Result of MyBeanMessageBodyWriter test</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e6822"><fo:page-number-citation ref-id="d0e6822"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mbw.ex.mbr">8.7. MessageBodyReader example</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mbw.ex.mbr"><fo:page-number-citation ref-id="mbw.ex.mbr"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e6976">8.8. Testing MyBeanMessageBodyReader</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e6976"><fo:page-number-citation ref-id="d0e6976"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e6984">8.9. Result of testing MyBeanMessageBodyReader</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e6984"><fo:page-number-citation ref-id="d0e6984"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mbw.ex.client.mbr.reg">8.10. MessageBodyReader registered on a JAX-RS client</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mbw.ex.client.mbr.reg"><fo:page-number-citation ref-id="mbw.ex.client.mbr.reg"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e7052">8.11. Result of client code execution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e7052"><fo:page-number-citation ref-id="d0e7052"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e7433">8.12. Usage of MessageBodyWorkers interface</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e7433"><fo:page-number-citation ref-id="d0e7433"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e7686">9.1. Simple JAXB bean implementation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e7686"><fo:page-number-citation ref-id="d0e7686"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e7692">9.2. JAXB bean used to generate JSON representation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e7692"><fo:page-number-citation ref-id="d0e7692"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e7712">9.3. Tweaking JSON format using JAXB</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e7712"><fo:page-number-citation ref-id="d0e7712"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e7749">9.4. JAXB bean creation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e7749"><fo:page-number-citation ref-id="d0e7749"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e7766">9.5. Constructing a <fo:inline font-family="monospace">JsonObject</fo:inline> (JSON-Processing)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e7766"><fo:page-number-citation ref-id="d0e7766"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e7775">9.6. Constructing a <fo:inline font-family="monospace">JSONObject</fo:inline> (Jettison)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e7775"><fo:page-number-citation ref-id="d0e7775"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e7902">9.7. MoxyJsonConfig - Setting properties.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e7902"><fo:page-number-citation ref-id="d0e7902"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e7916">9.8. Creating <fo:inline font-family="monospace">ContextResolver&lt;MoxyJsonConfig&gt;</fo:inline></fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e7916"><fo:page-number-citation ref-id="d0e7916"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e7935">9.9. Setting properties for MOXy providers into Configurable</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e7935"><fo:page-number-citation ref-id="d0e7935"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ex-moxy-client">9.10. Building client with MOXy JSON feature enabled.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ex-moxy-client"><fo:page-number-citation ref-id="ex-moxy-client"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ex-moxy-server">9.11. Creating JAX-RS application with MOXy JSON feature enabled.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ex-moxy-server"><fo:page-number-citation ref-id="ex-moxy-server"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8100">9.12. Building client with JSON-Processing JSON feature enabled.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8100"><fo:page-number-citation ref-id="d0e8100"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8105">9.13. Creating JAX-RS application with JSON-Processing JSON feature enabled.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8105"><fo:page-number-citation ref-id="d0e8105"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8187">9.14. <fo:inline font-family="monospace">ContextResolver&lt;ObjectMapper&gt;</fo:inline></fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8187"><fo:page-number-citation ref-id="d0e8187"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8202">9.15. Building client with Jackson JSON feature enabled.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8202"><fo:page-number-citation ref-id="d0e8202"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8208">9.16. Creating JAX-RS application with Jackson JSON feature enabled.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8208"><fo:page-number-citation ref-id="d0e8208"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8277">9.17. JAXB beans for JSON supported notations description, simple address bean</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8277"><fo:page-number-citation ref-id="d0e8277"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8283">9.18. JAXB beans for JSON supported notations description, contact bean</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8283"><fo:page-number-citation ref-id="d0e8283"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8291">9.19. JAXB beans for JSON supported notations description, initialization</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8291"><fo:page-number-citation ref-id="d0e8291"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="json.jaxb.jettison.mapped.ns.def">9.20. 
                                XML namespace to JSON mapping configuration for Jettison based <fo:inline font-family="monospace">mapped</fo:inline> notation
                            </fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="json.jaxb.jettison.mapped.ns.def"><fo:page-number-citation ref-id="json.jaxb.jettison.mapped.ns.def"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8337">9.21. JSON expression with XML namespaces mapped into JSON</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8337"><fo:page-number-citation ref-id="d0e8337"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="json.jaxb.jettison.mapped.array.def">9.22. 
                                JSON Array configuration for Jettison based <fo:inline font-family="monospace">mapped</fo:inline> notation
                            </fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="json.jaxb.jettison.mapped.array.def"><fo:page-number-citation ref-id="json.jaxb.jettison.mapped.array.def"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8360">9.23. JSON expression with JSON arrays explicitly configured via Jersey</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8360"><fo:page-number-citation ref-id="d0e8360"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8382">9.24. JSON expression produced using <fo:inline font-family="monospace">badgerfish</fo:inline> notation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8382"><fo:page-number-citation ref-id="d0e8382"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8408">9.25. <fo:inline font-family="monospace">ContextResolver&lt;ObjectMapper&gt;</fo:inline></fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8408"><fo:page-number-citation ref-id="d0e8408"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8415">9.26. Building client with Jettison JSON feature enabled.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8415"><fo:page-number-citation ref-id="d0e8415"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8421">9.27. Creating JAX-RS application with Jettison JSON feature enabled.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8421"><fo:page-number-citation ref-id="d0e8421"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8495">9.28. Simplest case of using <fo:inline font-family="monospace">@JSONP</fo:inline></fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8495"><fo:page-number-citation ref-id="d0e8495"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8506">9.29. JaxbBean for @JSONP example</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8506"><fo:page-number-citation ref-id="d0e8506"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8562">9.30. Example of <fo:inline font-family="monospace">@JSONP</fo:inline> with configured parameters.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8562"><fo:page-number-citation ref-id="d0e8562"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8622">9.31. Low level XML test - methods added to <fo:inline font-family="monospace">HelloWorldResource.java</fo:inline></fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8622"><fo:page-number-citation ref-id="d0e8622"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8666">9.32. Planet class</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8666"><fo:page-number-citation ref-id="d0e8666"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8671">9.33. Resource class</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8671"><fo:page-number-citation ref-id="d0e8671"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8718">9.34. Method for consuming Planet</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8718"><fo:page-number-citation ref-id="d0e8718"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8752">9.35. Resource class - JAXBElement</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8752"><fo:page-number-citation ref-id="d0e8752"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8771">9.36. Client side - JAXBElement</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8771"><fo:page-number-citation ref-id="d0e8771"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8790">9.37. PlanetJAXBContextProvider</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8790"><fo:page-number-citation ref-id="d0e8790"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8803">9.38. Using Provider with JAX-RS client</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8803"><fo:page-number-citation ref-id="d0e8803"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8834">9.39. Add <fo:inline font-family="monospace">jersey-media-moxy</fo:inline> dependency.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8834"><fo:page-number-citation ref-id="d0e8834"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8842">9.40. Register the <fo:inline font-family="monospace">MoxyXmlFeature</fo:inline> class.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8842"><fo:page-number-citation ref-id="d0e8842"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8850">9.41. Configure and register an <fo:inline font-family="monospace">MoxyXmlFeature</fo:inline> instance.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8850"><fo:page-number-citation ref-id="d0e8850"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8944">9.42. Building client with MultiPart feature enabled.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8944"><fo:page-number-citation ref-id="d0e8944"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8950">9.43. Creating JAX-RS application with MultiPart feature enabled.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8950"><fo:page-number-citation ref-id="d0e8950"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e8993">9.44. <fo:inline font-family="monospace">MultiPart</fo:inline> entity</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e8993"><fo:page-number-citation ref-id="d0e8993"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9007">9.45. <fo:inline font-family="monospace">MultiPart</fo:inline> entity in HTTP message.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9007"><fo:page-number-citation ref-id="d0e9007"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9037">9.46. <fo:inline font-family="monospace">FormDataMultiPart</fo:inline> entity</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9037"><fo:page-number-citation ref-id="d0e9037"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9054">9.47. <fo:inline font-family="monospace">FormDataMultiPart</fo:inline> entity in HTTP message.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9054"><fo:page-number-citation ref-id="d0e9054"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9075">9.48. Multipart - sending files.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9075"><fo:page-number-citation ref-id="d0e9075"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9143">9.49. Resource method using <fo:inline font-family="monospace">MultiPart</fo:inline> as input parameter / return value.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9143"><fo:page-number-citation ref-id="d0e9143"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9269">9.50. Use of <fo:inline font-family="monospace">@FormDataParam</fo:inline> annotation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9269"><fo:page-number-citation ref-id="d0e9269"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9370">10.1. Container response filter</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9370"><fo:page-number-citation ref-id="d0e9370"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9397">10.2. Container request filter</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9397"><fo:page-number-citation ref-id="d0e9397"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9439">10.3. Pre-matching request filter</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9439"><fo:page-number-citation ref-id="d0e9439"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9482">10.4. Client request filter</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9482"><fo:page-number-citation ref-id="d0e9482"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9521">10.5. GZIP writer interceptor</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9521"><fo:page-number-citation ref-id="d0e9521"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9570">10.6. GZIP reader interceptor</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9570"><fo:page-number-citation ref-id="d0e9570"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9695">10.7. <fo:inline font-family="monospace">@NameBinding</fo:inline> example</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9695"><fo:page-number-citation ref-id="d0e9695"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9754">10.8. Dynamic binding example</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9754"><fo:page-number-citation ref-id="d0e9754"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9868">10.9. Priorities example</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9868"><fo:page-number-citation ref-id="d0e9868"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9901">11.1. Simple async resource</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9901"><fo:page-number-citation ref-id="d0e9901"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e9988">11.2. Simple async method with timeout</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e9988"><fo:page-number-citation ref-id="d0e9988"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10034">11.3. CompletionCallback example</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10034"><fo:page-number-citation ref-id="d0e10034"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10110">11.4. ChunkedOutput example</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10110"><fo:page-number-citation ref-id="d0e10110"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10150">11.5. Simple client async invocation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10150"><fo:page-number-citation ref-id="d0e10150"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10191">11.6. Simple client fluent async invocation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10191"><fo:page-number-citation ref-id="d0e10191"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10219">11.7. Client async callback</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10219"><fo:page-number-citation ref-id="d0e10219"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10269">11.8. Client async callback for specific entity</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10269"><fo:page-number-citation ref-id="d0e10269"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10306">11.9. ChunkedInput example</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10306"><fo:page-number-citation ref-id="d0e10306"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10394">12.1. URI building</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10394"><fo:page-number-citation ref-id="d0e10394"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10435">12.2. Building URIs using query parameters</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10435"><fo:page-number-citation ref-id="d0e10435"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10853">13.1. Creating JAX-RS application with Declarative Linking feature enabled.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10853"><fo:page-number-citation ref-id="d0e10853"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10915">14.1. A standard resource class</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10915"><fo:page-number-citation ref-id="d0e10915"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e10923">14.2. A programmatic resource</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e10923"><fo:page-number-citation ref-id="d0e10923"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e11023">14.3. A programmatic resource</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e11023"><fo:page-number-citation ref-id="d0e11023"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e11047">14.4. A programmatic resource</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e11047"><fo:page-number-citation ref-id="d0e11047"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e11083">14.5. A programmatic resource</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e11083"><fo:page-number-citation ref-id="d0e11083"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e11117">14.6. A programmatic resource</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e11117"><fo:page-number-citation ref-id="d0e11117"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sse-dependency-jaxrs">15.1. Adding the SSE dependency</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sse-dependency-jaxrs"><fo:page-number-citation ref-id="sse-dependency-jaxrs"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="example-simple-sse-jaxrs">15.2. Simple SSE resource method</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="example-simple-sse-jaxrs"><fo:page-number-citation ref-id="example-simple-sse-jaxrs"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e11440">15.3. Broadcasting SSE messages (with JAX-RS 2.1 API)</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e11440"><fo:page-number-citation ref-id="d0e11440"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sse-event-source-example">15.4. Consuming SSE events with SseEventSource</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sse-event-source-example"><fo:page-number-citation ref-id="sse-event-source-example"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sse-event-source-subscribe-methods">15.5. SseEventSource subscribe() methods</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sse-event-source-subscribe-methods"><fo:page-number-citation ref-id="sse-event-source-subscribe-methods"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sse.dependency">15.6. Add <fo:inline font-family="monospace">jersey-media-sse</fo:inline> dependency.
                </fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sse.dependency"><fo:page-number-citation ref-id="sse.dependency"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="example-simple-sse">15.7. Simple SSE resource method</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="example-simple-sse"><fo:page-number-citation ref-id="example-simple-sse"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e12005">15.8. Broadcasting SSE messages</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e12005"><fo:page-number-citation ref-id="d0e12005"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sse.ex.client.eventListener">15.9. Registering <fo:inline font-family="monospace">EventListener</fo:inline> with <fo:inline font-family="monospace">EventSource</fo:inline>
                        </fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sse.ex.client.eventListener"><fo:page-number-citation ref-id="sse.ex.client.eventListener"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e12283">15.10. Overriding <fo:inline font-family="monospace">EventSource.onEvent(InboundEvent)</fo:inline> method
                        </fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e12283"><fo:page-number-citation ref-id="d0e12283"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e12354">16.1. Using <fo:inline font-family="monospace">SecurityContext</fo:inline> for a Resource Selection</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e12354"><fo:page-number-citation ref-id="d0e12354"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e12371">16.2. Injecting <fo:inline font-family="monospace">SecurityContext</fo:inline> into a singleton resource</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e12371"><fo:page-number-citation ref-id="d0e12371"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e12454">16.3. Securing resources using <fo:inline font-family="monospace">web.xml</fo:inline>
                        </fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e12454"><fo:page-number-citation ref-id="d0e12454"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e12492">16.4. Registering RolesAllowedDynamicFeature using ResourceConfig</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e12492"><fo:page-number-citation ref-id="d0e12492"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e12507">16.5. Registering RolesAllowedDynamicFeature by extending ResourceConfig</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e12507"><fo:page-number-citation ref-id="d0e12507"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e12518">16.6. Applying <fo:inline font-family="monospace">javax.annotation.security</fo:inline> to JAX-RS resource methods.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e12518"><fo:page-number-citation ref-id="d0e12518"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e12805">16.7. Build the authorization flow utility</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e12805"><fo:page-number-citation ref-id="d0e12805"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e12830">16.8. Perform the OAuth Authorization Flow</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e12830"><fo:page-number-citation ref-id="d0e12830"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e12874">16.9. Authenticated requests</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e12874"><fo:page-number-citation ref-id="d0e12874"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e12897">16.10. Build feature from Access Token</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e12897"><fo:page-number-citation ref-id="d0e12897"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e12931">16.11. Specifying Access Token on a Request.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e12931"><fo:page-number-citation ref-id="d0e12931"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e12954">16.12. Creating Public/Private RSA-SHA1 keys</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e12954"><fo:page-number-citation ref-id="d0e12954"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e13053">16.13. Building OAuth 2 Authorization Flow.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e13053"><fo:page-number-citation ref-id="d0e13053"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e13123">17.1. A simple WADL example - JAX-RS resource definition</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e13123"><fo:page-number-citation ref-id="d0e13123"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e13160">17.2. A simple WADL example - WADL content</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e13160"><fo:page-number-citation ref-id="d0e13160"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e13290">17.3. OPTIONS method returning WADL</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e13290"><fo:page-number-citation ref-id="d0e13290"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e13313">17.4. More complex WADL example - JAX-RS resource definition</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e13313"><fo:page-number-citation ref-id="d0e13313"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e13325">17.5. More complex WADL example - WADL content</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e13325"><fo:page-number-citation ref-id="d0e13325"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="bv.example.jersey.properties">18.1. Configuring Jersey specific properties for Bean Validation.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="bv.example.jersey.properties"><fo:page-number-citation ref-id="bv.example.jersey.properties"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="bv.example.ValidationConfig">18.2. Using <fo:inline font-family="monospace">ValidationConfig</fo:inline> to configure <fo:inline font-family="monospace">Validator</fo:inline>.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="bv.example.ValidationConfig"><fo:page-number-citation ref-id="bv.example.ValidationConfig"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="bv.example.constraints">18.3. Constraint annotations on input parameters</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="bv.example.constraints"><fo:page-number-citation ref-id="bv.example.constraints"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="bv.example.constraints.fields">18.4. Constraint annotations on fields</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="bv.example.constraints.fields"><fo:page-number-citation ref-id="bv.example.constraints.fields"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="bv.example.constraints.class">18.5. Constraint annotations on class</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="bv.example.constraints.class"><fo:page-number-citation ref-id="bv.example.constraints.class"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="bv.example.constraints.definition">18.6. Definition of a constraint annotation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="bv.example.constraints.definition"><fo:page-number-citation ref-id="bv.example.constraints.definition"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="bv.example.validator.definition">18.7. Validator implementation.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="bv.example.validator.definition"><fo:page-number-citation ref-id="bv.example.validator.definition"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="bv.example.constraints.entity">18.8. Entity validation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="bv.example.constraints.entity"><fo:page-number-citation ref-id="bv.example.constraints.entity"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="bv.example.constraints.entity2">18.9. Entity validation 2</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="bv.example.constraints.entity2"><fo:page-number-citation ref-id="bv.example.constraints.entity2"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="bv.example.constraints.entity.response">18.10. Response entity validation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="bv.example.constraints.entity.response"><fo:page-number-citation ref-id="bv.example.constraints.entity.response"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="bv.example.validateonexecution">18.11. Validate getter on execution</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="bv.example.validateonexecution"><fo:page-number-citation ref-id="bv.example.validateonexecution"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="bv.examples.injecting">18.12. Injecting UriInfo into a ConstraintValidator</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="bv.examples.injecting"><fo:page-number-citation ref-id="bv.examples.injecting"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="bv.examples.injecting.factory">18.13. Support for injecting Jersey's resources/providers via ConstraintValidatorFactory.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="bv.examples.injecting.factory"><fo:page-number-citation ref-id="bv.examples.injecting.factory"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14151">18.14. <fo:inline font-family="monospace">ValidationError</fo:inline> to <fo:inline font-family="monospace">text/plain</fo:inline></fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14151"><fo:page-number-citation ref-id="d0e14151"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14161">18.15. <fo:inline font-family="monospace">ValidationError</fo:inline> to <fo:inline font-family="monospace">text/html</fo:inline></fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14161"><fo:page-number-citation ref-id="d0e14161"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14171">18.16. <fo:inline font-family="monospace">ValidationError</fo:inline> to <fo:inline font-family="monospace">application/xml</fo:inline></fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14171"><fo:page-number-citation ref-id="d0e14171"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14181">18.17. <fo:inline font-family="monospace">ValidationError</fo:inline> to <fo:inline font-family="monospace">application/json</fo:inline></fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14181"><fo:page-number-citation ref-id="d0e14181"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ef.example.server.registration">19.1. Registering and configuring entity-filtering feature on server.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ef.example.server.registration"><fo:page-number-citation ref-id="ef.example.server.registration"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ef.example.server.security.registration">19.2. Registering and configuring entity-filtering feature with security annotations on server.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ef.example.server.security.registration"><fo:page-number-citation ref-id="ef.example.server.security.registration"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ef.example.server.selectable.registration">19.3. Registering and configuring entity-filtering feature based on dynamic and configurable query parameters.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ef.example.server.selectable.registration"><fo:page-number-citation ref-id="ef.example.server.selectable.registration"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ef.example.client.registration">19.4. Registering and configuring entity-filtering feature on client.</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ef.example.client.registration"><fo:page-number-citation ref-id="ef.example.client.registration"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14365">19.5. Project</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14365"><fo:page-number-citation ref-id="d0e14365"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14371">19.6. User</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14371"><fo:page-number-citation ref-id="d0e14371"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14377">19.7. Task</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14377"><fo:page-number-citation ref-id="d0e14377"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14388">19.8. ProjectsResource</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14388"><fo:page-number-citation ref-id="d0e14388"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ef.annotations.sample.annotation">19.9. ProjectDetailedView</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ef.annotations.sample.annotation"><fo:page-number-citation ref-id="ef.annotations.sample.annotation"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14444">19.10. Annotated Project</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14444"><fo:page-number-citation ref-id="d0e14444"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14450">19.11. Annotated User</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14450"><fo:page-number-citation ref-id="d0e14450"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14456">19.12. Annotated Task</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14456"><fo:page-number-citation ref-id="d0e14456"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14509">19.13. ProjectsResource - Response entity-filtering annotations</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14509"><fo:page-number-citation ref-id="d0e14509"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14515">19.14. ProjectsResource - Entity-filtering annotations on methods</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14515"><fo:page-number-citation ref-id="d0e14515"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14626">19.15. Client - Request entity-filtering annotations</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14626"><fo:page-number-citation ref-id="d0e14626"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14632">19.16. Client - Request entity-filtering annotations</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14632"><fo:page-number-citation ref-id="d0e14632"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14707">19.17. Sever - Query Parameter driven entity-filtering</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14707"><fo:page-number-citation ref-id="d0e14707"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e14721">19.18. </fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e14721"><fo:page-number-citation ref-id="d0e14721"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ef.custom.annotations.annotation">19.19. Entity-filtering annotation with custom meaning</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ef.custom.annotations.annotation"><fo:page-number-citation ref-id="ef.custom.annotations.annotation"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="ef.modules.custom">19.20. Entity Data Filtering support in MOXy JSON binding provider</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="ef.modules.custom"><fo:page-number-citation ref-id="ef.modules.custom"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mvc.example.viewable.simple">20.1. Using <fo:inline font-family="monospace">Viewable</fo:inline> in a resource class</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mvc.example.viewable.simple"><fo:page-number-citation ref-id="mvc.example.viewable.simple"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mvc.example.template.simple">20.2. Using <fo:inline font-family="monospace">@Template</fo:inline> on a resource method</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mvc.example.template.simple"><fo:page-number-citation ref-id="mvc.example.template.simple"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mvc.example.implicit.class">20.3. Using <fo:inline font-family="monospace">@Template</fo:inline> on a resource class</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mvc.example.implicit.class"><fo:page-number-citation ref-id="mvc.example.implicit.class"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mvc.example.viewable.absolutePath">20.4. Using absolute path to template in <fo:inline font-family="monospace">Viewable</fo:inline></fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mvc.example.viewable.absolutePath"><fo:page-number-citation ref-id="mvc.example.viewable.absolutePath"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mvc.example.error.simple">20.5. Using <fo:inline font-family="monospace">@ErrorTemplate</fo:inline> on a resource method</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mvc.example.error.simple"><fo:page-number-citation ref-id="mvc.example.error.simple"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mvc.example.error.bv">20.6. Using <fo:inline font-family="monospace">@ErrorTemplate</fo:inline> with Bean Validation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mvc.example.error.bv"><fo:page-number-citation ref-id="mvc.example.error.bv"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mvc.example.error.bv.jsp">20.7. Iterating through <fo:inline font-family="monospace">ValidationError</fo:inline> in JSP</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mvc.example.error.bv.jsp"><fo:page-number-citation ref-id="mvc.example.error.bv.jsp"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e15271">20.8. Registering <fo:inline font-family="monospace">MvcFeature</fo:inline></fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e15271"><fo:page-number-citation ref-id="d0e15271"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e15279">20.9. Registering <fo:inline font-family="monospace">FreemarkerMvcFeature</fo:inline></fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e15279"><fo:page-number-citation ref-id="d0e15279"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mvc.ex.rc.properties">20.10. Setting <fo:inline font-family="monospace">MvcFeature.TEMPLATE_BASE_PATH</fo:inline> value in <fo:inline font-family="monospace">ResourceConfig</fo:inline></fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mvc.ex.rc.properties"><fo:page-number-citation ref-id="mvc.ex.rc.properties"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="mvc.ex.web.xml.properties">20.11. Setting <fo:inline font-family="monospace">FreemarkerMvcProperties.TEMPLATE_BASE_PATH</fo:inline> value in <fo:inline font-family="monospace">web.xml</fo:inline></fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="mvc.ex.web.xml.properties"><fo:page-number-citation ref-id="mvc.ex.web.xml.properties"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e15634">20.12. Including JSP page into JSP page</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e15634"><fo:page-number-citation ref-id="d0e15634"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e15673">20.13. Custom TemplateProcessor</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e15673"><fo:page-number-citation ref-id="d0e15673"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e15681">20.14. Registering custom TemplateProcessor</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e15681"><fo:page-number-citation ref-id="d0e15681"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e15899">21.1. Logging on the client side</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e15899"><fo:page-number-citation ref-id="d0e15899"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e15916">21.2. Register <fo:inline font-family="monospace">LoggingFeature</fo:inline> via constructor
                    </fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e15916"><fo:page-number-citation ref-id="d0e15916"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e15933">21.3. Register <fo:inline font-family="monospace">LoggingFeature</fo:inline> class
                    </fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e15933"><fo:page-number-citation ref-id="d0e15933"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e16034">22.1. Application event listener</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e16034"><fo:page-number-citation ref-id="d0e16034"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e16040">22.2. Request event listener</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e16040"><fo:page-number-citation ref-id="d0e16040"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e16046">22.3. Event listener test resource</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e16046"><fo:page-number-citation ref-id="d0e16046"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e16251">22.4. Injecting MonitoringStatistics</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e16251"><fo:page-number-citation ref-id="d0e16251"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e16968">22.5. Summary level messages</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e16968"><fo:page-number-citation ref-id="d0e16968"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e16985">22.6. On demand request, snippet of MVC JSP forwarding</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e16985"><fo:page-number-citation ref-id="d0e16985"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e17360">24.1. Bootstrapping Jersey application with Weld support on Grizzly</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e17360"><fo:page-number-citation ref-id="d0e17360"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e19897">28.1. Jersey 1 reloader implementation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e19897"><fo:page-number-citation ref-id="d0e19897"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e19903">28.2. Jersey 1 reloader registration</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e19903"><fo:page-number-citation ref-id="d0e19903"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e19943">28.3. Jersey 2 reloader implementation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e19943"><fo:page-number-citation ref-id="d0e19943"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e19949">28.4. Jersey 2 reloader registration</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e19949"><fo:page-number-citation ref-id="d0e19949"/></fo:basic-link></fo:inline></fo:block><fo:block text-align-last="justify" text-align="start" end-indent="24pt" last-line-end-indent="-24pt"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="d0e20235">28.5. Initializing JAXB-based support with MOXy</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="d0e20235"><fo:page-number-citation ref-id="d0e20235"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="front" language="en" format="i" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Preface</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Preface</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="preface"><fo:block><fo:block><fo:block margin-left="0pt" font-size="24.8832pt" font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Preface</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            This is user guide for Jersey 2.28. We are trying to keep it up to date as we add new features.
            When reading the user guide, please consult also our
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/index.html)"><fo:inline>Jersey API documentation</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/index.html)">https://jersey.github.io/apidocs/2.28/jersey/index.html</fo:basic-link>]</fo:inline> as an additional source
            of information about Jersey features and API.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            If you would like to contribute to the guide or have questions on things not covered in our docs, please
            contact us at<fo:basic-link external-destination="url(mailto:users@jersey.java.net)"><fo:inline>users@jersey.java.net</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(mailto:users@jersey.java.net)">mailto:users@jersey.java.net</fo:basic-link>]</fo:inline>. Similarly,
            in case you spot any errors in the Jersey documentation, please report them by filing a new issue in our
            <fo:basic-link external-destination="url(http://java.net/jira/browse/JERSEY)"><fo:inline>Jersey JIRA Issue Tracker</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://java.net/jira/browse/JERSEY)">http://java.net/jira/browse/JERSEY</fo:basic-link>]</fo:inline>
            under
            <fo:inline font-family="monospace">docs</fo:inline>
            component. Please make sure to specify the version of the Jersey User Guide where the error has been spotted
            by selecting the proper value for the
            <fo:inline font-family="monospace">Affected Version</fo:inline>
            field.
        </fo:block><fo:block id="d0e28"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Text formatting conventions</fo:marker><fo:block font-size="20.735999999999997pt">Text formatting conventions</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                First mention of any Jersey and JAX-RS API component in a section links to the API documentation of the
                referenced component. Any sub-sequent mentions of the component in the same chapter are rendered using a
                <fo:inline font-family="monospace">monospaced</fo:inline>
                font.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:inline font-style="italic">Emphasised font</fo:inline>
                is used to a call attention to a newly introduce concept, when it first
                occurs in the text.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                In some of the code listings, certain lines are too long to be displayed on one line for the available
                page width. In such case, the lines that exceed the available page width are broken up into multiple lines
                using a
                <fo:inline font-family="monospace">'\'</fo:inline>
                at the end of each line to indicate that a break has been introduced to
                fit the line in the page. For example:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e46">
This is an overly long line that \
might not fit the available page \
width and had to be broken into \
multiple lines.

This line fits the page width.
                </fo:block>

                Should read as:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e49">
This is an overly long line that might not fit the available page width and had to be broken into multiple lines.

This line fits the page width.
                </fo:block>
            </fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="1" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Getting Started</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Getting Started</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="getting-started"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 1. Getting Started</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        This chapter provides a quick introduction on how to get started building RESTful services using Jersey.
        The example described here uses the lightweight Grizzly HTTP server. At the end of this chapter you will
        see how to implement equivalent functionality as a JavaEE web application you can deploy on any servlet
        container supporting Servlet 2.5 and higher.
    </fo:block><fo:block id="new-from-archetype"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Creating a New Project from Maven Archetype</fo:marker><fo:block font-size="20.735999999999997pt">1.1. Creating a New Project from Maven Archetype</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Jersey project is built using <fo:basic-link external-destination="url(http://maven.apache.org/)"><fo:inline>Apache Maven</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://maven.apache.org/)">http://maven.apache.org/</fo:basic-link>]</fo:inline> software project build and management tool. All modules produced as
            part of Jersey project build are pushed to the <fo:basic-link external-destination="url(http://search.maven.org/)"><fo:inline>Central Maven Repository</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://search.maven.org/)">http://search.maven.org/</fo:basic-link>]</fo:inline>. Therefore it is very convenient to work
            with Jersey for any Maven-based project as all the released (non-SNAPSHOT) Jersey dependencies are readily
            available without a need to configure a special maven repository to consume the Jersey modules.

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e69"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    In case you want to depend on the latest SNAPSHOT versions of Jersey modules, the following repository
                    configuration needs to be added to your Maven project pom:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e72">&lt;repository&gt;
    &lt;id&gt;snapshot-repository.java.net&lt;/id&gt;
    &lt;name&gt;Java.net Snapshot Repository for Maven&lt;/name&gt;
    &lt;url&gt;https://maven.java.net/content/repositories/snapshots/&lt;/url&gt;
    &lt;layout&gt;default&lt;/layout&gt;
&lt;/repository&gt;</fo:block>
                </fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Since starting from a Maven project is the most convenient way for working with Jersey, let's now have a look
            at this approach. We will now create a new Jersey project that runs on top of a <fo:basic-link external-destination="url(http://grizzly.java.net/)"><fo:inline>Grizzly</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://grizzly.java.net/)">http://grizzly.java.net/</fo:basic-link>]</fo:inline> container. We will
            use a Jersey-provided maven archetype. To create the project, execute the following Maven command in the directory
            where the new project should reside:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e81">mvn archetype:generate -DarchetypeArtifactId=jersey-quickstart-grizzly2 \
-DarchetypeGroupId=org.glassfish.jersey.archetypes -DinteractiveMode=false \
-DgroupId=com.example -DartifactId=simple-service -Dpackage=com.example \
-DarchetypeVersion=2.28</fo:block>

            Feel free to adjust the <fo:inline font-family="monospace">groupId</fo:inline>, <fo:inline font-family="monospace">package</fo:inline> and/or <fo:inline font-family="monospace">artifactId</fo:inline>
            of your new project. Alternatively, you can change it by updating the new project pom.xml once it gets generated.
        </fo:block></fo:block><fo:block id="new-project-structure"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Exploring the Newly Created Project</fo:marker><fo:block font-size="20.735999999999997pt">1.2. Exploring the Newly Created Project</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Once the project generation from a Jersey maven archetype is successfully finished, you should see the new
            <fo:inline font-family="monospace">simple-service</fo:inline> project directory created in your current location. The directory contains
            a standard Maven project structure:

            <fo:table space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e101" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>
                    Project build and management configuration is described in the <fo:inline font-family="monospace">pom.xml</fo:inline> located
                    in the project root directory.
                </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Project sources are located under <fo:inline font-family="monospace">src/main/java</fo:inline>.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Project test sources are located under <fo:inline font-family="monospace">src/test/java</fo:inline>.</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

            There are 2 classes in the project source directory in the <fo:inline font-family="monospace">com.example</fo:inline> package.
            The <fo:inline font-family="monospace">Main</fo:inline> class is responsible for bootstrapping the Grizzly container as well as configuring
            and deploying the project's JAX-RS application to the container. Another class in the same package
            is <fo:inline font-family="monospace">MyResource</fo:inline> class, that contains implementation of a simple JAX-RS resource.
            It looks like this:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e127">  1 package com.example;
  2 
  3 import javax.ws.rs.GET;
  4 import javax.ws.rs.Path;
  5 import javax.ws.rs.Produces;
  6 import javax.ws.rs.core.MediaType;
  7 
  8 /**
  9  * Root resource (exposed at "myresource" path)
 10  */
 11 @Path("myresource")
 12 public class MyResource {
 13 
 14     /**
 15      * Method handling HTTP GET requests. The returned object will be sent
 16      * to the client as "text/plain" media type.
 17      *
 18      * @return String that will be returned as a text/plain response.
 19      */
 20     @GET
 21     @Produces(MediaType.TEXT_PLAIN)
 22     public String getIt() {
 23         return "Got it!";
 24     }
 25 }</fo:block>

            A JAX-RS resource is an annotated POJO that provides so-called <fo:inline font-style="italic">resource methods</fo:inline> that
            are able to handle HTTP requests for URI paths that the resource is bound to. See
            <fo:basic-link internal-destination="jaxrs-resources"><fo:inline>Chapter 3, <fo:inline font-style="italic">JAX-RS Application, Resources and Sub-Resources</fo:inline></fo:inline></fo:basic-link> for a complete guide to JAX-RS resources. In our case, the resource
            exposes a single resource method that is able to handle HTTP <fo:inline font-family="monospace">GET</fo:inline> requests, is bound to
            <fo:inline font-family="monospace">/myresource</fo:inline> URI path and can produce responses with response message content represented
            in <fo:inline font-family="monospace">"text/plain"</fo:inline> media type. In this version, the resource returns the same
            <fo:inline font-family="monospace">"Got it!"</fo:inline> response to all client requests.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The last piece of code that has been generated in this skeleton project is a <fo:inline font-family="monospace">MyResourceTest</fo:inline>
            unit test class that is located in the same <fo:inline font-family="monospace">com.example</fo:inline> package as the
            <fo:inline font-family="monospace">MyResource</fo:inline> class, however, this unit test class is placed into the maven project test source
            directory <fo:inline font-family="monospace">src/test/java</fo:inline> (certain code comments and JUnit imports have been excluded for brevity):

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e161">  1 package com.example;
  2 
  3 import javax.ws.rs.client.Client;
  4 import javax.ws.rs.client.ClientBuilder;
  5 import javax.ws.rs.client.WebTarget;
  6 
  7 import org.glassfish.grizzly.http.server.HttpServer;
  8 
  9 ...
 10 
 11 public class MyResourceTest {
 12 
 13     private HttpServer server;
 14     private WebTarget target;
 15 
 16     @Before
 17     public void setUp() throws Exception {
 18         server = Main.startServer();
 19 
 20         Client c = ClientBuilder.newClient();
 21         target = c.target(Main.BASE_URI);
 22     }
 23 
 24     @After
 25     public void tearDown() throws Exception {
 26         server.stop();
 27     }
 28 
 29     /**
 30      * Test to see that the message "Got it!" is sent in the response.
 31      */
 32     @Test
 33     public void testGetIt() {
 34         String responseMsg = target.path("myresource").request().get(String.class);
 35         assertEquals("Got it!", responseMsg);
 36     }
 37 }</fo:block>

            In this unit test, a Grizzly container is first started and server application is deployed in the
            test <fo:inline font-family="monospace">setUp()</fo:inline> method by a static call to <fo:inline font-family="monospace">Main.startServer()</fo:inline>.
            Next, a JAX-RS client components are created in the same test set-up method. First a new JAX-RS client
            instance <fo:inline font-family="monospace">c</fo:inline> is built and then a JAX-RS web target component pointing to the context root of our
            application deployed at <fo:inline font-family="monospace">http://localhost:8080/myapp/</fo:inline> (a value of
            <fo:inline font-family="monospace">Main.BASE_URI</fo:inline> constant) is stored into a <fo:inline font-family="monospace">target</fo:inline> field of the unit test class.
            This field is then used in the actual unit test method (<fo:inline font-family="monospace">testGetIt()</fo:inline>).
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In the <fo:inline font-family="monospace">testGetIt()</fo:inline> method a fluent JAX-RS Client API is used to connect to and send
            a HTTP <fo:inline font-family="monospace">GET</fo:inline> request to the <fo:inline font-family="monospace">MyResource</fo:inline> JAX-RS resource class listening on
            <fo:inline font-family="monospace">/myresource</fo:inline> URI. As part of the same fluent JAX-RS API method invocation chain, a response is
            read as a Java <fo:inline font-family="monospace">String</fo:inline> type. On the second line in the test method, the response content string
            returned from the server is compared with the expected phrase in the test assertion. To learn more about using
            JAX-RS Client API, please see the <fo:basic-link internal-destination="client"><fo:inline>Chapter 5, <fo:inline font-style="italic">Client API</fo:inline></fo:inline></fo:basic-link> chapter.
        </fo:block></fo:block><fo:block id="running-project"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Running the Project</fo:marker><fo:block font-size="20.735999999999997pt">1.3. Running the Project</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Now that we have seen the content of the project, let's try to test-run it. To do this, we need to invoke following
            command on the command line:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e209">mvn clean test</fo:block>

            This will compile the project and run the project unit tests. We should see a similar output that informs about a
            successful build once the build is finished:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e212">Results :

Tests run: 1, Failures: 0, Errors: 0, Skipped: 0

[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 34.527s
[INFO] Finished at: Sun May 26 19:26:24 CEST 2013
[INFO] Final Memory: 17M/490M
[INFO] ------------------------------------------------------------------------</fo:block>

            Now that we have verified that the project compiles and that the unit test passes, we can execute the application
            in a standalone mode. To do this, run the following maven command:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e215">mvn exec:java</fo:block>

            The application starts and you should soon see the following notification in your console:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e218">May 26, 2013 8:08:45 PM org.glassfish.grizzly.http.server.NetworkListener start
INFO: Started listener bound to [localhost:8080]
May 26, 2013 8:08:45 PM org.glassfish.grizzly.http.server.HttpServer start
INFO: [HttpServer] Started.
Jersey app started with WADL available at http://localhost:8080/myapp/application.wadl
Hit enter to stop it...</fo:block>

            This informs you that the application has been started and it's WADL descriptor is available at
            <fo:inline font-family="monospace">http://localhost:8080/myapp/application.wadl</fo:inline> URL. You can retrieve the WADL content by
            executing a <fo:inline font-family="monospace">curl http://localhost:8080/myapp/application.wadl</fo:inline> command in your console
            or by typing the WADL URL into your favorite browser. You should get back an XML document in describing
            your deployed RESTful application in a WADL format. To learn more about working with WADL, check the
            <fo:basic-link internal-destination="wadl"><fo:inline>Chapter 17, <fo:inline font-style="italic">WADL Support</fo:inline></fo:inline></fo:basic-link> chapter.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The last thing we should try before concluding this section is to see if we can communicate with our
            resource deployed at <fo:inline font-family="monospace">/myresource</fo:inline> path. We can again either type the resource URL
            in the browser or we can use <fo:inline font-family="monospace">curl</fo:inline>:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e237">$ curl http://localhost:8080/myapp/myresource
Got it!</fo:block>

            As we can see, the <fo:inline font-family="monospace">curl</fo:inline> command returned with the <fo:inline font-family="monospace">Got it!</fo:inline> message that
            was sent by our resource. We can also ask <fo:inline font-family="monospace">curl</fo:inline> to provide more information about the response,
            for example we can let it display all response headers by using the <fo:inline font-family="monospace">-i</fo:inline> switch:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e252">curl -i http://localhost:8080/myapp/myresource
HTTP/1.1 200 OK
Content-Type: text/plain
Date: Sun, 26 May 2013 18:27:19 GMT
Content-Length: 7

Got it!</fo:block>

            Here we see the whole content of the response message that our Jersey/JAX-RS application returned, including all
            the HTTP headers. Notice the <fo:inline font-family="monospace">Content-Type: text/plain</fo:inline> header that was derived from the
            value of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html)"><fo:inline>@Produces</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html</fo:basic-link>]</fo:inline> annotation attached to the <fo:inline font-family="monospace">MyResource</fo:inline> class.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In case you want to see even more details about the communication between our <fo:inline font-family="monospace">curl</fo:inline> client
            and our resource running on Jersey in a Grizzly I/O container, feel free to try other various options and switches
            that <fo:inline font-family="monospace">curl</fo:inline> provides. For example, this last command will make <fo:inline font-family="monospace">curl</fo:inline> output
            a lot of additional information about the whole communication:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e275">$ curl -v http://localhost:8080/myapp/myresource
* About to connect() to localhost port 8080 (#0)
*   Trying ::1...
* Connection refused
*   Trying 127.0.0.1...
* connected
* Connected to localhost (127.0.0.1) port 8080 (#0)
&gt; GET /myapp/myresource HTTP/1.1
&gt; User-Agent: curl/7.25.0 (x86_64-apple-darwin11.3.0) libcurl/7.25.0 OpenSSL/1.0.1e zlib/1.2.7 libidn/1.22
&gt; Host: localhost:8080
&gt; Accept: */*
&gt;
&lt; HTTP/1.1 200 OK
&lt; Content-Type: text/plain
&lt; Date: Sun, 26 May 2013 18:29:18 GMT
&lt; Content-Length: 7
&lt;
* Connection #0 to host localhost left intact
Got it!* Closing connection #0</fo:block>
        </fo:block></fo:block><fo:block id="new-webapp"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Creating a JavaEE Web Application</fo:marker><fo:block font-size="20.735999999999997pt">1.4. Creating a JavaEE Web Application</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            To create a Web Application that can be packaged as WAR and deployed in a Servlet container follow a similar process
            to the one described in <fo:basic-link internal-destination="new-from-archetype"><fo:inline>Section 1.1, “Creating a New Project from Maven Archetype”</fo:inline></fo:basic-link>.
            In addition to the Grizzly-based archetype, Jersey provides also a Maven archetype for creating web application
            skeletons. To create the new web application skeleton project, execute the following Maven command in the directory
            where the new project should reside:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e285">mvn archetype:generate -DarchetypeArtifactId=jersey-quickstart-webapp \
                -DarchetypeGroupId=org.glassfish.jersey.archetypes -DinteractiveMode=false \
                -DgroupId=com.example -DartifactId=simple-service-webapp -Dpackage=com.example \
                -DarchetypeVersion=2.28</fo:block>

            As with the Grizzly based project, feel free to adjust the <fo:inline font-family="monospace">groupId</fo:inline>, <fo:inline font-family="monospace">package</fo:inline>
            and/or <fo:inline font-family="monospace">artifactId</fo:inline> of your new web application project. Alternatively, you can change it by updating
            the new project <fo:inline font-family="monospace">pom.xml</fo:inline> once it gets generated.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Once the project generation from a Jersey maven archetype is successfully finished, you should see the new
            <fo:inline font-family="monospace">simple-service-webapp</fo:inline> project directory created in your current location. The directory contains
            a standard Maven project structure, similar to the <fo:inline font-family="monospace">simple-service</fo:inline> project content we have seen
            earlier, except it is extended with an additional web application specific content:

            <fo:table space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e308" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>
                    Project build and management configuration is described in the <fo:inline font-family="monospace">pom.xml</fo:inline> located
                    in the project root directory.
                </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Project sources are located under <fo:inline font-family="monospace">src/main/java</fo:inline>.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Project resources are located under <fo:inline font-family="monospace">src/main/resources</fo:inline>.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Project web application files are located under <fo:inline font-family="monospace">src/main/webapp</fo:inline>.</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

            The project contains the same <fo:inline font-family="monospace">MyResouce</fo:inline> JAX-RS resource class. It does not contain any unit tests
            as well as it does not contain a <fo:inline font-family="monospace">Main</fo:inline> class that was used to setup Grizzly container in the
            previous project. Instead, it contains the standard Java EE web application <fo:inline font-family="monospace">web.xml</fo:inline> deployment
            descriptor under <fo:inline font-family="monospace">src/main/webapp/WEB-INF</fo:inline>.
            The last component in the project is an <fo:inline font-family="monospace">index.jsp</fo:inline> page that serves as a client for the
            <fo:inline font-family="monospace">MyResource</fo:inline> resource class that is packaged and deployed with the application.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            To compile and package the application into a WAR, invoke the following maven command in your console:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e350">mvn clean package</fo:block>

            A successful build output will produce an output similar to the one below:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e353">Results :

Tests run: 0, Failures: 0, Errors: 0, Skipped: 0

[INFO]
[INFO] --- maven-war-plugin:2.1.1:war (default-war) @ simple-service-webapp ---
[INFO] Packaging webapp
[INFO] Assembling webapp [simple-service-webapp] in [.../simple-service-webapp/target/simple-service-webapp]
[INFO] Processing war project
[INFO] Copying webapp resources [.../simple-service-webapp/src/main/webapp]
[INFO] Webapp assembled in [75 msecs]
[INFO] Building war: .../simple-service-webapp/target/simple-service-webapp.war
[INFO] WEB-INF/web.xml already added, skipping
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 9.067s
[INFO] Finished at: Sun May 26 21:07:44 CEST 2013
[INFO] Final Memory: 17M/490M
[INFO] ------------------------------------------------------------------------</fo:block>

            Now you are ready to take the packaged WAR (located under <fo:inline font-family="monospace">./target/simple-service-webapp.war</fo:inline>)
            and deploy it to a Servlet container of your choice.
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e359"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Important</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    To deploy a Jersey application, you will need a Servlet container that supports Servlet 2.5 or later.
                    For full set of advanced features (such as JAX-RS 2.0 Async Support) you will need a Servlet 3.0 or later
                    compliant container.
                </fo:block></fo:block></fo:block>
        </fo:block></fo:block><fo:block id="heroku-webapp"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Creating a Web Application that can be deployed on Heroku</fo:marker><fo:block font-size="20.735999999999997pt">1.5. Creating a Web Application that can be deployed on Heroku</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            To create a Web Application that can be either packaged as WAR and deployed in a Servlet container or that can be
            pushed and deployed on <fo:basic-link external-destination="url(https://www.heroku.com)"><fo:inline>Heroku</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://www.heroku.com)">https://www.heroku.com</fo:basic-link>]</fo:inline> the process is very similar to the one described in <fo:basic-link internal-destination="new-webapp"><fo:inline>Section 1.4, “Creating a JavaEE Web Application”</fo:inline></fo:basic-link>.
            To create the new web application skeleton project, execute the following Maven command in the directory
            where the new project should reside:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e373">mvn archetype:generate -DarchetypeArtifactId=jersey-heroku-webapp \
                -DarchetypeGroupId=org.glassfish.jersey.archetypes -DinteractiveMode=false \
                -DgroupId=com.example -DartifactId=simple-heroku-webapp -Dpackage=com.example \
                -DarchetypeVersion=2.28</fo:block>

            Adjust the <fo:inline font-family="monospace">groupId</fo:inline>, <fo:inline font-family="monospace">package</fo:inline> and/or <fo:inline font-family="monospace">artifactId</fo:inline> of your new web
            application project to your needs or, alternatively, you can change it by updating the new project <fo:inline font-family="monospace">pom.xml</fo:inline> once it
            gets generated.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Once the project generation from a Jersey maven archetype is successfully finished, you should see the new
            <fo:inline font-family="monospace">simple-heroku-webapp</fo:inline> project directory created in your current location. The directory contains
            a standard Maven project structure:

            <fo:table space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e393" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>
                    Project build and management configuration is described in the <fo:inline font-family="monospace">pom.xml</fo:inline> located
                    in the project root directory.
                </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Project sources are located under <fo:inline font-family="monospace">src/main/java</fo:inline>.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Project resources are located under <fo:inline font-family="monospace">src/main/resources</fo:inline>.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Project web application files are located under <fo:inline font-family="monospace">src/main/webapp</fo:inline>.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Project test-sources (based on <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html)"><fo:inline>JerseyTest</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html</fo:basic-link>]</fo:inline>) are located under <fo:inline font-family="monospace">src/test/java</fo:inline>.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Heroku system properties (OpenJDK version) are defined in <fo:inline font-family="monospace">system.properties</fo:inline>.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Lists of the process types in an application for Heroku is in <fo:inline font-family="monospace">Procfile</fo:inline>.</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

            The project contains one JAX-RS resource class, <fo:inline font-family="monospace">MyResouce</fo:inline>, and one resource method which returns
            simple text message. To make sure the resource is properly tested there is also a end-to-end test-case
            in <fo:inline font-family="monospace">MyResourceTest</fo:inline> (the test is based on <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html)"><fo:inline>JerseyTest</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html</fo:basic-link>]</fo:inline> from our <fo:basic-link internal-destination="test-framework"><fo:inline>Chapter 26, <fo:inline font-style="italic">Jersey Test Framework</fo:inline></fo:inline></fo:basic-link>).
            Similarly to <fo:inline font-family="monospace">simple-service-webapp</fo:inline>, the project contains the standard Java EE web application
            <fo:inline font-family="monospace">web.xml</fo:inline> deployment descriptor under <fo:inline font-family="monospace">src/main/webapp/WEB-INF</fo:inline> since the goal is to
            deploy the application in a Servlet container (the application will run in Jetty on Heroku).
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            To compile and package the application into a WAR, invoke the following maven command in your console:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e455">mvn clean package</fo:block>

            A successful build output will produce an output similar to the one below:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e458">    Results :

    Tests run: 1, Failures: 0, Errors: 0, Skipped: 0

    [INFO]
    [INFO] --- maven-war-plugin:2.2:war (default-war) @ simple-heroku-webapp ---
    [INFO] Packaging webapp
    [INFO] Assembling webapp [simple-heroku-webapp] in [.../simple-heroku-webapp/target/simple-heroku-webapp]
    [INFO] Processing war project
    [INFO] Copying webapp resources [.../simple-heroku-webapp/src/main/webapp]
    [INFO] Webapp assembled in [57 msecs]
    [INFO] Building war: .../simple-heroku-webapp/target/simple-heroku-webapp.war
    [INFO] WEB-INF/web.xml already added, skipping
    [INFO]
    [INFO] --- maven-dependency-plugin:2.8:copy-dependencies (copy-dependencies) @ simple-heroku-webapp ---
    [INFO] Copying hk2-locator-2.2.0-b21.jar to .../simple-heroku-webapp/target/dependency/hk2-locator-2.2.0-b21.jar
    [INFO] Copying jetty-security-9.0.6.v20130930.jar to .../simple-heroku-webapp/target/dependency/jetty-security-9.0.6.v20130930.jar
    [INFO] Copying asm-all-repackaged-2.2.0-b21.jar to .../simple-heroku-webapp/target/dependency/asm-all-repackaged-2.2.0-b21.jar
    [INFO] Copying jersey-common-2.5.jar to .../simple-heroku-webapp/target/dependency/jersey-common-2.5.jar
    [INFO] Copying validation-api-1.1.0.Final.jar to .../simple-heroku-webapp/target/dependency/validation-api-1.1.0.Final.jar
    [INFO] Copying jetty-webapp-9.0.6.v20130930.jar to .../simple-heroku-webapp/target/dependency/jetty-webapp-9.0.6.v20130930.jar
    [INFO] Copying jersey-container-servlet-2.5.jar to .../simple-heroku-webapp/target/dependency/jersey-container-servlet-2.5.jar
    [INFO] Copying cglib-2.2.0-b21.jar to .../simple-heroku-webapp/target/dependency/cglib-2.2.0-b21.jar
    [INFO] Copying osgi-resource-locator-1.0.1.jar to .../simple-heroku-webapp/target/dependency/osgi-resource-locator-1.0.1.jar
    [INFO] Copying hk2-utils-2.2.0-b21.jar to .../simple-heroku-webapp/target/dependency/hk2-utils-2.2.0-b21.jar
    [INFO] Copying hk2-api-2.2.0-b21.jar to .../simple-heroku-webapp/target/dependency/hk2-api-2.2.0-b21.jar
    [INFO] Copying jetty-io-9.0.6.v20130930.jar to .../simple-heroku-webapp/target/dependency/jetty-io-9.0.6.v20130930.jar
    [INFO] Copying jetty-server-9.0.6.v20130930.jar to .../simple-heroku-webapp/target/dependency/jetty-server-9.0.6.v20130930.jar
    [INFO] Copying jetty-util-9.0.6.v20130930.jar to .../simple-heroku-webapp/target/dependency/jetty-util-9.0.6.v20130930.jar
    [INFO] Copying jersey-client-2.5.jar to .../simple-heroku-webapp/target/dependency/jersey-client-2.5.jar
    [INFO] Copying jetty-http-9.0.6.v20130930.jar to .../simple-heroku-webapp/target/dependency/jetty-http-9.0.6.v20130930.jar
    [INFO] Copying guava-14.0.1.jar to .../simple-heroku-webapp/target/dependency/guava-14.0.1.jar
    [INFO] Copying jetty-xml-9.0.6.v20130930.jar to .../simple-heroku-webapp/target/dependency/jetty-xml-9.0.6.v20130930.jar
    [INFO] Copying jersey-server-2.5.jar to .../simple-heroku-webapp/target/dependency/jersey-server-2.5.jar
    [INFO] Copying jersey-container-servlet-core-2.5.jar to .../simple-heroku-webapp/target/dependency/jersey-container-servlet-core-2.5.jar
    [INFO] Copying javax.ws.rs-api-2.0.jar to .../simple-heroku-webapp/target/dependency/javax.ws.rs-api-2.0.jar
    [INFO] Copying jetty-servlet-9.0.6.v20130930.jar to .../simple-heroku-webapp/target/dependency/jetty-servlet-9.0.6.v20130930.jar
    [INFO] Copying javax.inject-2.2.0-b21.jar to .../simple-heroku-webapp/target/dependency/javax.inject-2.2.0-b21.jar
    [INFO] Copying javax.servlet-3.0.0.v201112011016.jar to .../simple-heroku-webapp/target/dependency/javax.servlet-3.0.0.v201112011016.jar
    [INFO] Copying javax.annotation-api-1.2.jar to .../simple-heroku-webapp/target/dependency/javax.annotation-api-1.2.jar
    [INFO] ------------------------------------------------------------------------
    [INFO] BUILD SUCCESS
    [INFO] ------------------------------------------------------------------------
    [INFO] Total time: 4.401s
    [INFO] Finished at: Mon Dec 09 20:19:06 CET 2013
    [INFO] Final Memory: 20M/246M
    [INFO] ------------------------------------------------------------------------</fo:block>

            Now that you know everything went as expected you are ready to:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e461"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e462"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                    make some changes in your project,
                </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e465"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                    take the packaged WAR (located under <fo:inline font-family="monospace">./target/simple-service-webapp.war</fo:inline>) and deploy it to a
                    Servlet container of your choice, or
                </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e471"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                    <fo:basic-link internal-destination="deploy-it-on-heroku"><fo:inline>Section 1.5.1, “Deploy it on Heroku”</fo:inline></fo:basic-link>
                </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e477"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Tip</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    If you want to make some changes to your application you can run the application locally by simply running
                    <fo:inline font-family="monospace">mvn clean package jetty:run</fo:inline> (which starts the embedded Jetty server) or by
                    <fo:inline font-family="monospace">java -cp target/classes:target/dependency/* com.example.heroku.Main</fo:inline> (this is how Jetty is
                    started on Heroku).
                </fo:block></fo:block></fo:block>
        </fo:block><fo:block id="deploy-it-on-heroku"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Deploy it on Heroku</fo:marker><fo:block font-size="17.28pt">1.5.1. Deploy it on Heroku</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                We won't go into details how to create an account on <fo:basic-link external-destination="url(https://www.heroku.com)"><fo:inline>Heroku</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://www.heroku.com)">https://www.heroku.com</fo:basic-link>]</fo:inline> and setup the <fo:inline font-family="monospace">Heroku</fo:inline> tools
                on your machine. You can find a lot of information in this article: <fo:basic-link external-destination="url(https://devcenter.heroku.com/articles/getting-started-with-java)"><fo:inline>Getting Started with Java on Heroku</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://devcenter.heroku.com/articles/getting-started-with-java)">https://devcenter.heroku.com/articles/getting-started-with-java</fo:basic-link>]</fo:inline>.
                Instead, we'll take a look at the steps needed after your environment is ready.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The first step is to create a Git repository from your project:
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e503">    $ git init
    Initialized empty Git repository in /.../simple-heroku-webapp/.git/</fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Then, create a <fo:basic-link external-destination="url(https://www.heroku.com)"><fo:inline>Heroku</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://www.heroku.com)">https://www.heroku.com</fo:basic-link>]</fo:inline> instance and add a remote reference to your Git repository:
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e511">    $ heroku create
    Creating simple-heroku-webapp... done, stack is cedar
    http://simple-heroku-webapp.herokuapp.com/ | git@heroku.com:simple-heroku-webapp.git
    Git remote heroku added</fo:block>

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e514"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        The name of the instance is changed in the output to <fo:inline font-family="monospace">simple-heroku-webapp</fo:inline>. Your will be
                        named more like <fo:inline font-family="monospace">tranquil-basin-4744</fo:inline>.
                    </fo:block></fo:block></fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Add and commit files to your Git repository:
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e526">    $ git add src/ pom.xml Procfile system.properties</fo:block>
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e529">    $ git commit -a -m "initial commit"
    [master (root-commit) e2b58e3] initial commit
     7 files changed, 221 insertions(+)
     create mode 100644 Procfile
     create mode 100644 pom.xml
     create mode 100644 src/main/java/com/example/MyResource.java
     create mode 100644 src/main/java/com/example/heroku/Main.java
     create mode 100644 src/main/webapp/WEB-INF/web.xml
     create mode 100644 src/test/java/com/example/MyResourceTest.java
     create mode 100644 system.properties</fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Push changes to Heroku:
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e534">    $ git push heroku master
    Counting objects: 21, done.
    Delta compression using up to 8 threads.
    Compressing objects: 100% (11/11), done.
    Writing objects: 100% (21/21), 3.73 KiB | 0 bytes/s, done.
    Total 21 (delta 0), reused 0 (delta 0)

    -----&gt; Java app detected
    -----&gt; Installing OpenJDK 1.7... done
    -----&gt; Installing Maven 3.0.3... done
    -----&gt; Installing settings.xml... done
    -----&gt; executing /app/tmp/cache/.maven/bin/mvn -B -Duser.home=/tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd -Dmaven.repo.local=/app/tmp/cache/.m2/repository -s /app/tmp/cache/.m2/settings.xml -DskipTests=true clean install
           [INFO] Scanning for projects...
           [INFO]
           [INFO] ------------------------------------------------------------------------
           [INFO] Building simple-heroku-webapp 1.0-SNAPSHOT
           [INFO] ------------------------------------------------------------------------
           [INFO]
           [INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @ simple-heroku-webapp ---
           [INFO]
           [INFO] --- maven-resources-plugin:2.4.3:resources (default-resources) @ simple-heroku-webapp ---
           [INFO] Using 'UTF-8' encoding to copy filtered resources.
           [INFO] skip non existing resourceDirectory /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/src/main/resources
           [INFO]
           [INFO] --- maven-compiler-plugin:2.5.1:compile (default-compile) @ simple-heroku-webapp ---
           [INFO] Compiling 2 source files to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/classes
           [INFO]
           [INFO] --- maven-resources-plugin:2.4.3:testResources (default-testResources) @ simple-heroku-webapp ---
           [INFO] Using 'UTF-8' encoding to copy filtered resources.
           [INFO] skip non existing resourceDirectory /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/src/test/resources
           [INFO]
           [INFO] --- maven-compiler-plugin:2.5.1:testCompile (default-testCompile) @ simple-heroku-webapp ---
           [INFO] Compiling 1 source file to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/test-classes
           [INFO]
           [INFO] --- maven-surefire-plugin:2.7.2:test (default-test) @ simple-heroku-webapp ---
           [INFO] Tests are skipped.
           [INFO]
           [INFO] --- maven-war-plugin:2.1.1:war (default-war) @ simple-heroku-webapp ---
           [INFO] Packaging webapp
           [INFO] Assembling webapp [simple-heroku-webapp] in [/tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/simple-heroku-webapp]
           [INFO] Processing war project
           [INFO] Copying webapp resources [/tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/src/main/webapp]
           [INFO] Webapp assembled in [88 msecs]
           [INFO] Building war: /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/simple-heroku-webapp.war
           [INFO] WEB-INF/web.xml already added, skipping
           [INFO]
           [INFO] --- maven-dependency-plugin:2.1:copy-dependencies (copy-dependencies) @ simple-heroku-webapp ---
           [INFO] Copying guava-14.0.1.jar to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/dependency/guava-14.0.1.jar
           [INFO] Copying javax.annotation-api-1.2.jar to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/dependency/javax.annotation-api-1.2.jar
           [INFO] Copying validation-api-1.1.0.Final.jar to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/dependency/validation-api-1.1.0.Final.jar
           [INFO] Copying javax.ws.rs-api-2.0.jar to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/dependency/javax.ws.rs-api-2.0.jar
           [INFO] Copying jetty-http-9.0.6.v20130930.jar to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/dependency/jetty-http-9.0.6.v20130930.jar
           [INFO] Copying jetty-io-9.0.6.v20130930.jar to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/dependency/jetty-io-9.0.6.v20130930.jar
           [INFO] Copying jetty-security-9.0.6.v20130930.jar to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/dependency/jetty-security-9.0.6.v20130930.jar
           [INFO] Copying jetty-server-9.0.6.v20130930.jar to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/dependency/jetty-server-9.0.6.v20130930.jar
           [INFO] Copying jetty-servlet-9.0.6.v20130930.jar to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/dependency/jetty-servlet-9.0.6.v20130930.jar
           [INFO] Copying jetty-util-9.0.6.v20130930.jar to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/dependency/jetty-util-9.0.6.v20130930.jar
           [INFO] Copying jetty-webapp-9.0.6.v20130930.jar to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/dependency/jetty-webapp-9.0.6.v20130930.jar
           [INFO] Copying jetty-xml-9.0.6.v20130930.jar to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/dependency/jetty-xml-9.0.6.v20130930.jar
           [INFO] Copying javax.servlet-3.0.0.v201112011016.jar to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/dependency/javax.servlet-3.0.0.v201112011016.jar
           [INFO] Copying hk2-api-2.2.0-b21.jar to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/dependency/hk2-api-2.2.0-b21.jar
           [INFO] Copying hk2-locator-2.2.0-b21.jar to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/dependency/hk2-locator-2.2.0-b21.jar
           [INFO] Copying hk2-utils-2.2.0-b21.jar to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/dependency/hk2-utils-2.2.0-b21.jar
           [INFO] Copying osgi-resource-locator-1.0.1.jar to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/dependency/osgi-resource-locator-1.0.1.jar
           [INFO] Copying asm-all-repackaged-2.2.0-b21.jar to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/dependency/asm-all-repackaged-2.2.0-b21.jar
           [INFO] Copying cglib-2.2.0-b21.jar to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/dependency/cglib-2.2.0-b21.jar
           [INFO] Copying javax.inject-2.2.0-b21.jar to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/dependency/javax.inject-2.2.0-b21.jar
           [INFO] Copying jersey-container-servlet-2.5.jar to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/dependency/jersey-container-servlet-2.5.jar
           [INFO] Copying jersey-container-servlet-core-2.5.jar to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/dependency/jersey-container-servlet-core-2.5.jar
           [INFO] Copying jersey-client-2.5.jar to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/dependency/jersey-client-2.5.jar
           [INFO] Copying jersey-common-2.5.jar to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/dependency/jersey-common-2.5.jar
           [INFO] Copying jersey-server-2.5.jar to /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/dependency/jersey-server-2.5.jar
           [INFO]
           [INFO] --- maven-install-plugin:2.3.1:install (default-install) @ simple-heroku-webapp ---
           [INFO] Installing /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/target/simple-heroku-webapp.war to /app/tmp/cache/.m2/repository/com/example/simple-heroku-webapp/1.0-SNAPSHOT/simple-heroku-webapp-1.0-SNAPSHOT.war
           [INFO] Installing /tmp/build_992cc747-26d6-4800-bdb1-add47b9583cd/pom.xml to /app/tmp/cache/.m2/repository/com/example/simple-heroku-webapp/1.0-SNAPSHOT/simple-heroku-webapp-1.0-SNAPSHOT.pom
           [INFO] ------------------------------------------------------------------------
           [INFO] BUILD SUCCESS
           [INFO] ------------------------------------------------------------------------
           [INFO] Total time: 45.861s
           [INFO] Finished at: Mon Dec 09 19:51:34 UTC 2013
           [INFO] Final Memory: 17M/514M
           [INFO] ------------------------------------------------------------------------
    -----&gt; Discovering process types
           Procfile declares types -&gt; web

    -----&gt; Compiled slug size: 75.9MB
    -----&gt; Launching... done, v6
           http://simple-heroku-webapp.herokuapp.com deployed to Heroku

    To git@heroku.com:simple-heroku-webapp.git
     * [new branch]      master -&gt; master</fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Now you can access your application at, for example: <fo:basic-link external-destination="url(http://simple-heroku-webapp.herokuapp.com/myresource)"><fo:inline>http://simple-heroku-webapp.herokuapp.com/myresource</fo:inline></fo:basic-link>
            </fo:block></fo:block></fo:block><fo:block id="exploring-jersey-examples"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Exploring Other Jersey Examples</fo:marker><fo:block font-size="20.735999999999997pt">1.6. Exploring Other Jersey Examples</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In the sections above, we have covered an approach how to get dirty with Jersey quickly. Please consult the other
            sections of the Jersey User Guide to learn more about Jersey and JAX-RS.
            Even though we try our best to cover as much as possible in the User Guide, there is always a chance that you would
            not be able to get a full answer to the problem you are solving. In that case, consider diving in our examples that
            provide additional tips and hints to the features you may want to use in your projects.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Jersey codebase contains a number of useful examples on how to use various JAX-RS and Jersey features.
            Feel free to browse through the code of individual
            <fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples)"><fo:inline>Jersey Examples</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples)">https://github.com/jersey/jersey/tree/2.28/examples</fo:basic-link>]</fo:inline> in the Jersey source repository.
            For off-line browsing, you can also download a bundle with all the examples from
            <fo:basic-link external-destination="url(https://maven.java.net/content/repositories/releases/org/glassfish/jersey/bundles/jersey-examples/2.28/)"><fo:inline>here</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://maven.java.net/content/repositories/releases/org/glassfish/jersey/bundles/jersey-examples/2.28/)">https://maven.java.net/content/repositories/releases/org/glassfish/jersey/bundles/jersey-examples/2.28/</fo:basic-link>]</fo:inline>.
        </fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Modules and dependencies</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Modules and dependencies</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="modules-and-dependencies"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 2. Modules and dependencies</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e559"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Java SE Compatibility</fo:marker><fo:block font-size="20.735999999999997pt">2.1. Java SE Compatibility</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:inline font-style="italic">2.x branch: </fo:inline>
            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e567"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e568"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Until version 2.6, Jersey was compiled with Java SE 6. This has changed in Jersey 2.7.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e571"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Up to version 2.25.x almost all Jersey components are compiled with Java SE 7 target.
                    It means, that you will need at least Java
                    SE 7 to be able to compile and run your application that is using latest Jersey.
                    Only <fo:inline font-family="monospace">core-common</fo:inline> and <fo:inline font-family="monospace">core-client</fo:inline> modules are still compiled with Java class
                    version runnable with Java SE 6.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e580"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Since Jersey 2.26, all modules are build using Java SE 8 and there is no support for running it
                    on older Java SE distributions.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
        </fo:block></fo:block><fo:block id="d0e584"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Introduction to Jersey dependencies</fo:marker><fo:block font-size="20.735999999999997pt">2.2. Introduction to Jersey dependencies</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Jersey is built, assembled and installed using <fo:basic-link external-destination="url(http://maven.apache.org/)"><fo:inline>Apache Maven</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://maven.apache.org/)">http://maven.apache.org/</fo:basic-link>]</fo:inline>.
            Non-snapshot Jersey releases are deployed to the
            <fo:basic-link external-destination="url(http://search.maven.org/)"><fo:inline>Central Maven Repository</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://search.maven.org/)">http://search.maven.org/</fo:basic-link>]</fo:inline>. Jersey is also being deployed to
            <fo:basic-link external-destination="url(http://maven.java.net/)"><fo:inline>Java.Net Maven repositories</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://maven.java.net/)">http://maven.java.net/</fo:basic-link>]</fo:inline>, which contain also Jersey SNAPSHOT
            versions. In case you would want to test the latest development builds check out the
            <fo:basic-link external-destination="url(https://maven.java.net/content/repositories/snapshots/org/glassfish/jersey)"><fo:inline>
                Java.Net Snapshots Maven repository</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://maven.java.net/content/repositories/snapshots/org/glassfish/jersey)">https://maven.java.net/content/repositories/snapshots/org/glassfish/jersey</fo:basic-link>]</fo:inline>.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            An application that uses Jersey and depends on Jersey modules is in turn required to also include in the application
            dependencies the set of 3rd party modules that Jersey modules depend on. Jersey is designed as a pluggable component
            architecture and different applications can therefore require different sets of Jersey modules. This also means that
            the set of external Jersey dependencies required to be included in the application dependencies may vary in each
            application based on the Jersey modules that are being used by the application.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Developers using Maven or a Maven-aware build system in their projects are likely to find it easier to include and
            manage dependencies of their applications compared to developers using ant or other build systems that are not
            compatible with Maven. This document will explain to both maven and non-maven developers how to depend on
            Jersey modules in their application. Ant developers are likely to find the
            <fo:basic-link external-destination="url(http://maven.apache.org/ant-tasks/index.html)"><fo:inline>Ant Tasks for Maven</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://maven.apache.org/ant-tasks/index.html)">http://maven.apache.org/ant-tasks/index.html</fo:basic-link>]</fo:inline> very useful.
        </fo:block></fo:block><fo:block id="dependencies"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Common Jersey Use Cases</fo:marker><fo:block font-size="20.735999999999997pt">2.3. Common Jersey Use Cases</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="servlet-app-glassfish"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Servlet based application on Glassfish</fo:marker><fo:block font-size="17.28pt">2.3.1. Servlet based application on Glassfish</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If you are using Glassfish application server, you don't need to package
                anything with your application, everything is already included. You just need to declare
                (provided) dependency on JAX-RS API to be able to compile your application.
            </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e616">&lt;dependency&gt;
    &lt;groupId&gt;jakarta.ws.rs&lt;/groupId&gt;
    &lt;artifactId&gt;jakarta.ws.rs-api&lt;/artifactId&gt;
    &lt;version&gt;2.1.5&lt;/version&gt;
    &lt;scope&gt;provided&lt;/scope&gt;
&lt;/dependency&gt;</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If you are using any Jersey specific feature, you will need to depend on Jersey directly.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e620">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.containers&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-container-servlet&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
    &lt;scope&gt;provided&lt;/scope&gt;
&lt;/dependency&gt;
&lt;!-- if you are using Jersey client specific features without the server side --&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.core&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-client&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
    &lt;scope&gt;provided&lt;/scope&gt;
&lt;/dependency&gt;
            </fo:block></fo:block><fo:block id="servlet-app-general"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Servlet based server-side application</fo:marker><fo:block font-size="17.28pt">2.3.2. Servlet based server-side application</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Following dependencies apply to application server (servlet containers) without any
                integrated JAX-RS implementation. Then application needs to include JAX-RS API and Jersey
                implementation in deployed application.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e627">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.containers&lt;/groupId&gt;
    &lt;!-- if your container implements Servlet API older than 3.0, use "jersey-container-servlet-core"  --&gt;
    &lt;artifactId&gt;jersey-container-servlet&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;
&lt;!-- Required only when you are using JAX-RS Client --&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.core&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-client&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block></fo:block><fo:block id="client-jdk"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Client application on JDK</fo:marker><fo:block font-size="17.28pt">2.3.3. Client application on JDK</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Applications running on plain JDK using only client part of JAX-RS specification need
                to depend only on client. There are various additional modules which can be added, like
                for example grizzly or apache or jetty connector (see dependencies snipped below). Jersey client
                runs by default with plain JDK (using HttpUrlConnection). See <fo:basic-link internal-destination="client"><fo:inline>Chapter 5, <fo:inline font-style="italic">Client API</fo:inline></fo:inline></fo:basic-link>.
                for more details.
            </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e636">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.core&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-client&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Currently available connectors:</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e640">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.connectors&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-grizzly-connector&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.connectors&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-apache-connector&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.connectors&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-jetty-connector&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block></fo:block><fo:block id="server-jdk"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Server-side application on supported containers</fo:marker><fo:block font-size="17.28pt">2.3.4. Server-side application on supported containers</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Apart for a standard JAX-RS Servlet-based deployment that works with any Servlet container that
                supports Servlet 2.5 and higher,
                Jersey provides support for programmatic deployment to the following containers: Grizzly 2 (HTTP and Servlet),
                JDK Http server, Simple Http server and Jetty Http server. This chapter presents only required maven dependencies,
                more information can be found in <fo:basic-link internal-destination="deployment"><fo:inline>Chapter 4, <fo:inline font-style="italic">Application Deployment and Runtime Environments</fo:inline></fo:inline></fo:basic-link>.
            </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e649">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.containers&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-container-grizzly2-http&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.containers&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-container-grizzly2-servlet&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.containers&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-container-jdk-http&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.containers&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-container-simple-http&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.containers&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-container-jetty-http&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.containers&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-container-jetty-servlet&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block></fo:block></fo:block><fo:block id="modules"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">List of modules</fo:marker><fo:block font-size="20.735999999999997pt">2.4. List of modules</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The following chapters provide an overview of all Jersey modules
        and their dependencies with links to the respective binaries (follow a link
        on a module name to get complete set of downloadable dependencies).
    </fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" start-indent="0pt"><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="dependencies-table-org.glassfish.jersey.core"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 2.1. Jersey Core</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-start-style="solid" border-end-style="solid" border-top-style="solid" border-bottom-style="solid" border-start-width="0.5pt" border-end-width="0.5pt" border-top-width="0.5pt" border-bottom-width="0.5pt" border-start-color="black" border-end-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="22%"/><fo:table-column column-number="2" column-width="78%"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row keep-with-next.within-column="always"><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="center" number-columns-spanned="2"><fo:block font-weight="bold">Jersey Core</fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/jersey-client/dependencies.html)"><fo:inline>
    jersey-client
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/jersey-client/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/jersey-client/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey core client implementation</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/jersey-common/dependencies.html)"><fo:inline>
    jersey-common
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/jersey-common/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/jersey-common/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey core common packages</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/jersey-server/dependencies.html)"><fo:inline>
    jersey-server
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/jersey-server/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/jersey-server/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>Jersey core server implementation</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" start-indent="0pt"><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="dependencies-table-org.glassfish.jersey.containers"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 2.2. Jersey Containers</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-start-style="solid" border-end-style="solid" border-top-style="solid" border-bottom-style="solid" border-start-width="0.5pt" border-end-width="0.5pt" border-top-width="0.5pt" border-bottom-width="0.5pt" border-start-color="black" border-end-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="22%"/><fo:table-column column-number="2" column-width="78%"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row keep-with-next.within-column="always"><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="center" number-columns-spanned="2"><fo:block font-weight="bold">Jersey Containers</fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-grizzly2-http/dependencies.html)"><fo:inline>
    jersey-container-grizzly2-http
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-grizzly2-http/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-grizzly2-http/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Grizzly 2 Http Container.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-grizzly2-servlet/dependencies.html)"><fo:inline>
    jersey-container-grizzly2-servlet
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-grizzly2-servlet/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-grizzly2-servlet/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Grizzly 2 Servlet Container.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-jdk-http/dependencies.html)"><fo:inline>
    jersey-container-jdk-http
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-jdk-http/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-jdk-http/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>JDK Http Container</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-jetty-http/dependencies.html)"><fo:inline>
    jersey-container-jetty-http
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-jetty-http/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-jetty-http/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jetty Http Container</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-jetty-servlet/dependencies.html)"><fo:inline>
    jersey-container-jetty-servlet
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-jetty-servlet/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-jetty-servlet/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jetty Servlet Container</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-netty-http/dependencies.html)"><fo:inline>
    jersey-container-netty-http
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-netty-http/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-netty-http/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Netty Http Container.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-servlet/dependencies.html)"><fo:inline>
    jersey-container-servlet
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-servlet/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-servlet/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey core Servlet 3.x implementation</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-servlet-core/dependencies.html)"><fo:inline>
    jersey-container-servlet-core
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-servlet-core/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-servlet-core/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey core Servlet 2.x implementation</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-simple-http/dependencies.html)"><fo:inline>
    jersey-container-simple-http
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-simple-http/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-container-simple-http/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Simple Http Container</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-gf-ejb/dependencies.html)"><fo:inline>
    jersey-gf-ejb
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-gf-ejb/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-gf-ejb/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>Jersey EJB for GlassFish integration</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" start-indent="0pt"><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="dependencies-table-org.glassfish.jersey.connectors"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 2.3. Jersey Connectors</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-start-style="solid" border-end-style="solid" border-top-style="solid" border-bottom-style="solid" border-start-width="0.5pt" border-end-width="0.5pt" border-top-width="0.5pt" border-bottom-width="0.5pt" border-start-color="black" border-end-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="22%"/><fo:table-column column-number="2" column-width="78%"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row keep-with-next.within-column="always"><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="center" number-columns-spanned="2"><fo:block font-weight="bold">Jersey Connectors</fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-apache-connector/dependencies.html)"><fo:inline>
    jersey-apache-connector
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-apache-connector/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-apache-connector/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Client Transport via Apache</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-grizzly-connector/dependencies.html)"><fo:inline>
    jersey-grizzly-connector
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-grizzly-connector/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-grizzly-connector/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Client Transport via Grizzly</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-jdk-connector/dependencies.html)"><fo:inline>
    jersey-jdk-connector
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-jdk-connector/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-jdk-connector/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Client Transport via JDK connector</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-jetty-connector/dependencies.html)"><fo:inline>
    jersey-jetty-connector
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-jetty-connector/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-jetty-connector/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Client Transport via Jetty</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-netty-connector/dependencies.html)"><fo:inline>
    jersey-netty-connector
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-netty-connector/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-netty-connector/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>Jersey Client Transport via Netty</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" start-indent="0pt"><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="dependencies-table-org.glassfish.jersey.media"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 2.4. Jersey Media</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-start-style="solid" border-end-style="solid" border-top-style="solid" border-bottom-style="solid" border-start-width="0.5pt" border-end-width="0.5pt" border-top-width="0.5pt" border-bottom-width="0.5pt" border-start-color="black" border-end-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="22%"/><fo:table-column column-number="2" column-width="78%"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row keep-with-next.within-column="always"><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="center" number-columns-spanned="2"><fo:block font-weight="bold">Jersey Media</fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-jaxb/dependencies.html)"><fo:inline>
    jersey-media-jaxb
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-jaxb/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-jaxb/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>JAX-RS features based upon JAX-B.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-binding/dependencies.html)"><fo:inline>
    jersey-media-json-binding
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-binding/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-binding/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey JSON-B support module.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-jackson/dependencies.html)"><fo:inline>
    jersey-media-json-jackson
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-jackson/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-jackson/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey JSON Jackson (2.x) entity providers support module.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-jackson1/dependencies.html)"><fo:inline>
    jersey-media-json-jackson1
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-jackson1/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-jackson1/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey JSON Jackson (1.x) entity providers support module.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-jettison/dependencies.html)"><fo:inline>
    jersey-media-json-jettison
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-jettison/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-jettison/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey JSON Jettison entity providers support module.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-processing/dependencies.html)"><fo:inline>
    jersey-media-json-processing
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-processing/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-processing/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey JSON-P (JSR 353) entity providers support proxy module.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-kryo/dependencies.html)"><fo:inline>
    jersey-media-kryo
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-kryo/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-kryo/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey/JAX-RS Message Body Writer and Reader using Kryo serialization framework</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-moxy/dependencies.html)"><fo:inline>
    jersey-media-moxy
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-moxy/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-moxy/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey JSON entity providers support module based on EclipseLink MOXy.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-multipart/dependencies.html)"><fo:inline>
    jersey-media-multipart
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-multipart/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-multipart/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Multipart entity providers support module.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-sse/dependencies.html)"><fo:inline>
    jersey-media-sse
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-sse/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-sse/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>Jersey Server Sent Events entity providers support module.</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" start-indent="0pt"><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="dependencies-table-org.glassfish.jersey.ext"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 2.5. Jersey Extensions</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-start-style="solid" border-end-style="solid" border-top-style="solid" border-bottom-style="solid" border-start-width="0.5pt" border-end-width="0.5pt" border-top-width="0.5pt" border-bottom-width="0.5pt" border-start-color="black" border-end-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="22%"/><fo:table-column column-number="2" column-width="78%"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row keep-with-next.within-column="always"><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="center" number-columns-spanned="2"><fo:block font-weight="bold">Jersey Extensions</fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-bean-validation/dependencies.html)"><fo:inline>
    jersey-bean-validation
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-bean-validation/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-bean-validation/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey extension module providing support for Bean Validation (JSR-349) API.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-cdi1x/dependencies.html)"><fo:inline>
    jersey-cdi1x
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-cdi1x/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-cdi1x/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey CDI 1.1 integration</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-cdi1x-ban-custom-hk2-binding/dependencies.html)"><fo:inline>
    jersey-cdi1x-ban-custom-hk2-binding
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-cdi1x-ban-custom-hk2-binding/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-cdi1x-ban-custom-hk2-binding/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey CDI integration - this module disables custom HK2 bindings</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-cdi1x-servlet/dependencies.html)"><fo:inline>
    jersey-cdi1x-servlet
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-cdi1x-servlet/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-cdi1x-servlet/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey CDI 1.x Servlet Support</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-cdi1x-transaction/dependencies.html)"><fo:inline>
    jersey-cdi1x-transaction
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-cdi1x-transaction/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-cdi1x-transaction/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey CDI 1.x Transactional Support</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-cdi1x-validation/dependencies.html)"><fo:inline>
    jersey-cdi1x-validation
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-cdi1x-validation/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-cdi1x-validation/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey CDI 1.x Bean Validation Support</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-declarative-linking/dependencies.html)"><fo:inline>
    jersey-declarative-linking
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-declarative-linking/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-declarative-linking/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey support for declarative hyperlinking.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-entity-filtering/dependencies.html)"><fo:inline>
    jersey-entity-filtering
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-entity-filtering/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-entity-filtering/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey extension module providing support for Entity Data Filtering.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-metainf-services/dependencies.html)"><fo:inline>
    jersey-metainf-services
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-metainf-services/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-metainf-services/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey extension module enabling automatic registration of JAX-RS providers (MBW/MBR/EM) via META-INF/services mechanism.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc/dependencies.html)"><fo:inline>
    jersey-mvc
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey extension module providing support for MVC.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc-bean-validation/dependencies.html)"><fo:inline>
    jersey-mvc-bean-validation
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc-bean-validation/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc-bean-validation/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey extension module providing support for Bean Validation in MVC.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc-freemarker/dependencies.html)"><fo:inline>
    jersey-mvc-freemarker
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc-freemarker/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc-freemarker/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey extension module providing support for Freemarker templates.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc-jsp/dependencies.html)"><fo:inline>
    jersey-mvc-jsp
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc-jsp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc-jsp/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey extension module providing support for JSP templates.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc-mustache/dependencies.html)"><fo:inline>
    jersey-mvc-mustache
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc-mustache/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc-mustache/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey extension module providing support for Mustache templates.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-proxy-client/dependencies.html)"><fo:inline>
    jersey-proxy-client
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-proxy-client/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-proxy-client/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey extension module providing support for (proxy-based) high-level client API.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-rx-client-guava/dependencies.html)"><fo:inline>
    jersey-rx-client-guava
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-rx-client-guava/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-rx-client-guava/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Reactive Client - Guava (ListenableFuture) provider.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-rx-client-rxjava/dependencies.html)"><fo:inline>
    jersey-rx-client-rxjava
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-rx-client-rxjava/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-rx-client-rxjava/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Reactive Client - RxJava (Observable) provider.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-rx-client-rxjava2/dependencies.html)"><fo:inline>
    jersey-rx-client-rxjava2
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-rx-client-rxjava2/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-rx-client-rxjava2/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Reactive Client - RxJava2 (Flowable) provider.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-servlet-portability/dependencies.html)"><fo:inline>
    jersey-servlet-portability
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-servlet-portability/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-servlet-portability/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Library that enables writing web applications that run with both Jersey 1.x and Jersey 2.x servlet containers.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-spring4/dependencies.html)"><fo:inline>
    jersey-spring4
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-spring4/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-spring4/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey extension module providing support for Spring 4 integration.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-wadl-doclet/dependencies.html)"><fo:inline>
    jersey-wadl-doclet
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-wadl-doclet/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-wadl-doclet/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>A doclet that generates a resourcedoc xml file: this file contains the javadoc documentation
        of resource classes, so that this can be used for extending generated wadl with useful
        documentation.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-weld2-se/dependencies.html)"><fo:inline>
    jersey-weld2-se
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-weld2-se/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-weld2-se/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>WELD 2.x SE support</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" start-indent="0pt"><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="dependencies-table-org.glassfish.jersey.test-framework"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 2.6. Jersey Test Framework</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-start-style="solid" border-end-style="solid" border-top-style="solid" border-bottom-style="solid" border-start-width="0.5pt" border-end-width="0.5pt" border-top-width="0.5pt" border-bottom-width="0.5pt" border-start-color="black" border-end-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="22%"/><fo:table-column column-number="2" column-width="78%"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row keep-with-next.within-column="always"><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="center" number-columns-spanned="2"><fo:block font-weight="bold">Jersey Test Framework</fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/container-runner-maven-plugin/dependencies.html)"><fo:inline>
    container-runner-maven-plugin
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/container-runner-maven-plugin/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/container-runner-maven-plugin/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>The container runner maven plugin provides means to start and stop a container (currently, Weblogic, Tomcat and Glassfish4
        are supported). To deploy an application to this container or to repetitively redeploy and test an application in the container.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/custom-enforcer-rules/dependencies.html)"><fo:inline>
    custom-enforcer-rules
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/custom-enforcer-rules/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/custom-enforcer-rules/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey test framework Maven projects</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-test-framework-core/dependencies.html)"><fo:inline>
    jersey-test-framework-core
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-test-framework-core/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-test-framework-core/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Test Framework Core</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-bundle/dependencies.html)"><fo:inline>
    jersey-test-framework-provider-bundle
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-bundle/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-bundle/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Test Framework Providers Bundle</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-external/dependencies.html)"><fo:inline>
    jersey-test-framework-provider-external
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-external/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-external/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Test Framework - External container</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-grizzly2/dependencies.html)"><fo:inline>
    jersey-test-framework-provider-grizzly2
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-grizzly2/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-grizzly2/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Test Framework - Grizzly2 container</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-inmemory/dependencies.html)"><fo:inline>
    jersey-test-framework-provider-inmemory
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-inmemory/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-inmemory/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Test Framework - InMemory container</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-jdk-http/dependencies.html)"><fo:inline>
    jersey-test-framework-provider-jdk-http
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-jdk-http/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-jdk-http/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Test Framework - JDK HTTP container</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-jetty/dependencies.html)"><fo:inline>
    jersey-test-framework-provider-jetty
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-jetty/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-jetty/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Test Framework - Jetty HTTP container</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-netty/dependencies.html)"><fo:inline>
    jersey-test-framework-provider-netty
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-netty/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-netty/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Test Framework - Netty container</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-simple/dependencies.html)"><fo:inline>
    jersey-test-framework-provider-simple
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-simple/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-simple/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Test Framework - Simple HTTP container</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-test-framework-util/dependencies.html)"><fo:inline>
    jersey-test-framework-util
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-test-framework-util/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-test-framework-util/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Test Framework Utils</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/memleak-test-common/dependencies.html)"><fo:inline>
    memleak-test-common
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/memleak-test-common/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/memleak-test-common/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>Jersey test framework umbrella project</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" start-indent="0pt"><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="dependencies-table-org.glassfish.jersey.test-framework.providers"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 2.7. Jersey Test Framework Providers</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-start-style="solid" border-end-style="solid" border-top-style="solid" border-bottom-style="solid" border-start-width="0.5pt" border-end-width="0.5pt" border-top-width="0.5pt" border-bottom-width="0.5pt" border-start-color="black" border-end-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="22%"/><fo:table-column column-number="2" column-width="78%"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row keep-with-next.within-column="always"><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="center" number-columns-spanned="2"><fo:block font-weight="bold">Jersey Test Framework Providers</fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-bundle/dependencies.html)"><fo:inline>
    jersey-test-framework-provider-bundle
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-bundle/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-bundle/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Test Framework Providers Bundle</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-external/dependencies.html)"><fo:inline>
    jersey-test-framework-provider-external
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-external/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-external/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Test Framework - External container</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-grizzly2/dependencies.html)"><fo:inline>
    jersey-test-framework-provider-grizzly2
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-grizzly2/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-grizzly2/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Test Framework - Grizzly2 container</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-inmemory/dependencies.html)"><fo:inline>
    jersey-test-framework-provider-inmemory
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-inmemory/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-inmemory/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Test Framework - InMemory container</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-jdk-http/dependencies.html)"><fo:inline>
    jersey-test-framework-provider-jdk-http
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-jdk-http/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-jdk-http/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Test Framework - JDK HTTP container</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-jetty/dependencies.html)"><fo:inline>
    jersey-test-framework-provider-jetty
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-jetty/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-jetty/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Test Framework - Jetty HTTP container</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-netty/dependencies.html)"><fo:inline>
    jersey-test-framework-provider-netty
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-netty/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-netty/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Test Framework - Netty container</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-simple/dependencies.html)"><fo:inline>
    jersey-test-framework-provider-simple
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-simple/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-test-framework-provider-simple/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>Jersey Test Framework - Simple HTTP container</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" start-indent="0pt"><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="dependencies-table-org.glassfish.jersey.containers.glassfish"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 2.8. Jersey Glassfish Bundles</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-start-style="solid" border-end-style="solid" border-top-style="solid" border-bottom-style="solid" border-start-width="0.5pt" border-end-width="0.5pt" border-top-width="0.5pt" border-bottom-width="0.5pt" border-start-color="black" border-end-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="22%"/><fo:table-column column-number="2" column-width="78%"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row keep-with-next.within-column="always"><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="center" number-columns-spanned="2"><fo:block font-weight="bold">Jersey Glassfish Bundles</fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-gf-ejb/dependencies.html)"><fo:inline>
    jersey-gf-ejb
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-gf-ejb/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-gf-ejb/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>Jersey EJB for GlassFish integration</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" start-indent="0pt"><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="dependencies-table-org.glassfish.jersey.security"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 2.9. Security</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-start-style="solid" border-end-style="solid" border-top-style="solid" border-bottom-style="solid" border-start-width="0.5pt" border-end-width="0.5pt" border-top-width="0.5pt" border-bottom-width="0.5pt" border-start-color="black" border-end-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="22%"/><fo:table-column column-number="2" column-width="78%"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row keep-with-next.within-column="always"><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="center" number-columns-spanned="2"><fo:block font-weight="bold">Security</fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/oauth1-client/dependencies.html)"><fo:inline>
    oauth1-client
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/oauth1-client/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/oauth1-client/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Module that adds an OAuth 1 support to Jersey client.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/oauth1-server/dependencies.html)"><fo:inline>
    oauth1-server
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/oauth1-server/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/oauth1-server/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Module that adds an OAuth 1 support to Jersey server</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/oauth1-signature/dependencies.html)"><fo:inline>
    oauth1-signature
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/oauth1-signature/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/oauth1-signature/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>OAuth1 signature module</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/oauth2-client/dependencies.html)"><fo:inline>
    oauth2-client
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/oauth2-client/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/oauth2-client/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>Module that adds an OAuth 2 support to Jersey client</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" start-indent="0pt"><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="dependencies-table-org.glassfish.jersey.examples"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 2.10. Jersey Examples</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-start-style="solid" border-end-style="solid" border-top-style="solid" border-bottom-style="solid" border-start-width="0.5pt" border-end-width="0.5pt" border-top-width="0.5pt" border-bottom-width="0.5pt" border-start-color="black" border-end-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="22%"/><fo:table-column column-number="2" column-width="78%"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row keep-with-next.within-column="always"><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="center" number-columns-spanned="2"><fo:block font-weight="bold">Jersey Examples</fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/osgi-helloworld-webapp/additional-bundle/dependencies.html)"><fo:inline>
    additional-bundle
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/osgi-helloworld-webapp/additional-bundle/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/osgi-helloworld-webapp/additional-bundle/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>OSGi Helloworld Webapp - additional bundle</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/osgi-helloworld-webapp/alternate-version-bundle/dependencies.html)"><fo:inline>
    alternate-version-bundle
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/osgi-helloworld-webapp/alternate-version-bundle/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/osgi-helloworld-webapp/alternate-version-bundle/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>OSGi Helloworld Webapp - alternate version bundle</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/assemblies/dependencies.html)"><fo:inline>
    assemblies
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/assemblies/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/assemblies/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey examples shared assembly types.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/bean-validation-webapp/dependencies.html)"><fo:inline>
    bean-validation-webapp
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/bean-validation-webapp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/bean-validation-webapp/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Bean Validation (JSR-349) example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/bookmark/dependencies.html)"><fo:inline>
    bookmark
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/bookmark/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/bookmark/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Bookmark example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/bookmark-em/dependencies.html)"><fo:inline>
    bookmark-em
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/bookmark-em/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/bookmark-em/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Bookmark example using EntityManager.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/bookstore-webapp/dependencies.html)"><fo:inline>
    bookstore-webapp
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/bookstore-webapp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/bookstore-webapp/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey MVC Bookstore example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/osgi-http-service/bundle/dependencies.html)"><fo:inline>
    bundle
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/osgi-http-service/bundle/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/osgi-http-service/bundle/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>OSGi HttpService example bundle</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/cdi-webapp/dependencies.html)"><fo:inline>
    cdi-webapp
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/cdi-webapp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/cdi-webapp/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey CDI example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/clipboard/dependencies.html)"><fo:inline>
    clipboard
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/clipboard/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/clipboard/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey clipboard example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/clipboard-programmatic/dependencies.html)"><fo:inline>
    clipboard-programmatic
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/clipboard-programmatic/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/clipboard-programmatic/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey programmatic resource API clipboard example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/declarative-linking/dependencies.html)"><fo:inline>
    declarative-linking
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/declarative-linking/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/declarative-linking/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Declarative Hyperlinking - Jersey Sample</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/entity-filtering/dependencies.html)"><fo:inline>
    entity-filtering
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/entity-filtering/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/entity-filtering/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Entity Data Filtering Example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/entity-filtering-security/dependencies.html)"><fo:inline>
    entity-filtering-security
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/entity-filtering-security/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/entity-filtering-security/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Entity Data Filtering Security Example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/entity-filtering-selectable/dependencies.html)"><fo:inline>
    entity-filtering-selectable
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/entity-filtering-selectable/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/entity-filtering-selectable/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Entity Data Filtering Selectable Example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/exception-mapping/dependencies.html)"><fo:inline>
    exception-mapping
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/exception-mapping/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/exception-mapping/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey example showing exception mappers in action.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/extended-wadl-webapp/dependencies.html)"><fo:inline>
    extended-wadl-webapp
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/extended-wadl-webapp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/extended-wadl-webapp/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Extended WADL example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/feed-combiner-java8-webapp/dependencies.html)"><fo:inline>
    feed-combiner-java8-webapp
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/feed-combiner-java8-webapp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/feed-combiner-java8-webapp/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Web Application (Servlet) examples parent POM.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/flight-management-webapp/dependencies.html)"><fo:inline>
    flight-management-webapp
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/flight-management-webapp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/flight-management-webapp/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Flight Management Demo Web Application Example</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/freemarker-webapp/dependencies.html)"><fo:inline>
    freemarker-webapp
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/freemarker-webapp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/freemarker-webapp/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Freemarker example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/osgi-helloworld-webapp/functional-test/dependencies.html)"><fo:inline>
    functional-test
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/osgi-helloworld-webapp/functional-test/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/osgi-helloworld-webapp/functional-test/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey examples</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/osgi-http-service/functional-test/dependencies.html)"><fo:inline>
    functional-test
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/osgi-http-service/functional-test/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/osgi-http-service/functional-test/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>OSGi HttpService example</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/groovy/dependencies.html)"><fo:inline>
    groovy
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/groovy/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/groovy/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Groovy Jersey</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/helloworld/dependencies.html)"><fo:inline>
    helloworld
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/helloworld/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/helloworld/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey annotated resource class "Hello world" example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/helloworld-benchmark/dependencies.html)"><fo:inline>
    helloworld-benchmark
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/helloworld-benchmark/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/helloworld-benchmark/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey "Hello World" benchmark example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/helloworld-cdi2-se/dependencies.html)"><fo:inline>
    helloworld-cdi2-se
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/helloworld-cdi2-se/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/helloworld-cdi2-se/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey "Hello world" example with CDI 2 SE.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/helloworld-netty/dependencies.html)"><fo:inline>
    helloworld-netty
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/helloworld-netty/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/helloworld-netty/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey "Hello world" example on Netty container.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/helloworld-programmatic/dependencies.html)"><fo:inline>
    helloworld-programmatic
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/helloworld-programmatic/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/helloworld-programmatic/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey programmatic resource API "Hello world" example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/helloworld-pure-jax-rs/dependencies.html)"><fo:inline>
    helloworld-pure-jax-rs
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/helloworld-pure-jax-rs/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/helloworld-pure-jax-rs/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Example using only the standard JAX-RS API's and the lightweight HTTP server bundled in JDK.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/helloworld-spring-annotations/dependencies.html)"><fo:inline>
    helloworld-spring-annotations
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/helloworld-spring-annotations/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/helloworld-spring-annotations/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Spring 4 Integration Jersey Example</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/helloworld-spring-webapp/dependencies.html)"><fo:inline>
    helloworld-spring-webapp
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/helloworld-spring-webapp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/helloworld-spring-webapp/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Spring 4 Integration Jersey Example</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/helloworld-webapp/dependencies.html)"><fo:inline>
    helloworld-webapp
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/helloworld-webapp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/helloworld-webapp/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey annotated resource class "Hello world" example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/helloworld-weld/dependencies.html)"><fo:inline>
    helloworld-weld
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/helloworld-weld/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/helloworld-weld/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey annotated resource class "Hello world" example with Weld support.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/http-patch/dependencies.html)"><fo:inline>
    http-patch
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/http-patch/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/http-patch/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey example for implementing generic PATCH support via JAX-RS reader interceptor.
        Taken from Gerard Davison's blog entry:
        http://kingsfleet.blogspot.co.uk/2014/02/transparent-patch-support-in-jax-rs-20.html</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/http-trace/dependencies.html)"><fo:inline>
    http-trace
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/http-trace/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/http-trace/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey HTTP TRACE support example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/https-clientserver-grizzly/dependencies.html)"><fo:inline>
    https-clientserver-grizzly
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/https-clientserver-grizzly/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/https-clientserver-grizzly/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey HTTPS Client/Server example on Grizzly.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/https-server-glassfish/dependencies.html)"><fo:inline>
    https-server-glassfish
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/https-server-glassfish/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/https-server-glassfish/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey HTTPS server on GlassFish example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/java8-webapp/dependencies.html)"><fo:inline>
    java8-webapp
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/java8-webapp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/java8-webapp/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Java 8 Types WebApp Example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jaxb/dependencies.html)"><fo:inline>
    jaxb
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jaxb/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jaxb/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey JAXB example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jaxrs-types-injection/dependencies.html)"><fo:inline>
    jaxrs-types-injection
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jaxrs-types-injection/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jaxrs-types-injection/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey JAX-RS types injection example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/jersey-ejb/dependencies.html)"><fo:inline>
    jersey-ejb
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/jersey-ejb/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/jersey-ejb/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Web Application (Servlet) examples parent POM.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/json-binding-webapp/dependencies.html)"><fo:inline>
    json-binding-webapp
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/json-binding-webapp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/json-binding-webapp/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey JSON Binding example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/json-jackson/dependencies.html)"><fo:inline>
    json-jackson
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/json-jackson/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/json-jackson/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey JSON with Jackson example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/json-jackson1/dependencies.html)"><fo:inline>
    json-jackson1
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/json-jackson1/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/json-jackson1/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey JSON with Jackson 1.x example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/json-jettison/dependencies.html)"><fo:inline>
    json-jettison
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/json-jettison/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/json-jettison/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey JSON with Jettison JAXB example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/json-moxy/dependencies.html)"><fo:inline>
    json-moxy
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/json-moxy/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/json-moxy/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey JSON with MOXy example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/json-processing-webapp/dependencies.html)"><fo:inline>
    json-processing-webapp
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/json-processing-webapp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/json-processing-webapp/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey JSON-P (JSR 353) example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/json-with-padding/dependencies.html)"><fo:inline>
    json-with-padding
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/json-with-padding/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/json-with-padding/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey JSON with Padding example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/osgi-helloworld-webapp/lib-bundle/dependencies.html)"><fo:inline>
    lib-bundle
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/osgi-helloworld-webapp/lib-bundle/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/osgi-helloworld-webapp/lib-bundle/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>OSGi Helloworld Webapp - lib bundle</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/managed-beans-webapp/dependencies.html)"><fo:inline>
    managed-beans-webapp
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/managed-beans-webapp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/managed-beans-webapp/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Managed Beans Web Application Example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/managed-client/dependencies.html)"><fo:inline>
    managed-client
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/managed-client/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/managed-client/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey managed client example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/managed-client-simple-webapp/dependencies.html)"><fo:inline>
    managed-client-simple-webapp
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/managed-client-simple-webapp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/managed-client-simple-webapp/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Web Application (Servlet) examples parent POM.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/managed-client-webapp/dependencies.html)"><fo:inline>
    managed-client-webapp
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/managed-client-webapp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/managed-client-webapp/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey managed client web application example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/monitoring-webapp/dependencies.html)"><fo:inline>
    monitoring-webapp
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/monitoring-webapp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/monitoring-webapp/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Web Application (Servlet) examples parent POM.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/multipart-webapp/dependencies.html)"><fo:inline>
    multipart-webapp
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/multipart-webapp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/multipart-webapp/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Multipart example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/oauth-client-twitter/dependencies.html)"><fo:inline>
    oauth-client-twitter
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/oauth-client-twitter/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/oauth-client-twitter/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Twitter client using OAuth 1 support for Jersey that retrieves Tweets from the home timeline of a
        registered Twitter account.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/oauth2-client-google-webapp/dependencies.html)"><fo:inline>
    oauth2-client-google-webapp
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/oauth2-client-google-webapp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/oauth2-client-google-webapp/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Google API data retrieving example using OAuth2 for authentication and authorization</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/open-tracing/dependencies.html)"><fo:inline>
    open-tracing
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/open-tracing/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/open-tracing/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey OpenTracing example</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/osgi-helloworld-webapp/dependencies.html)"><fo:inline>
    osgi-helloworld-webapp
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/osgi-helloworld-webapp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/osgi-helloworld-webapp/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey examples</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/osgi-http-service/dependencies.html)"><fo:inline>
    osgi-http-service
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/osgi-http-service/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/osgi-http-service/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>OSGi HttpService example</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/reload/dependencies.html)"><fo:inline>
    reload
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/reload/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/reload/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey resource configuration reload example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/rx-client-webapp/dependencies.html)"><fo:inline>
    rx-client-webapp
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/rx-client-webapp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/rx-client-webapp/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Reactive Client WebApp Example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/server-async/dependencies.html)"><fo:inline>
    server-async
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/server-async/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/server-async/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey JAX-RS asynchronous server-side example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/server-async-managed/dependencies.html)"><fo:inline>
    server-async-managed
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/server-async-managed/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/server-async-managed/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey JAX-RS asynchronous server-side example with custom Jersey executor providers.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/server-async-standalone/dependencies.html)"><fo:inline>
    server-async-standalone
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/server-async-standalone/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/server-async-standalone/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Standalone Jersey JAX-RS asynchronous server-side processing example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/server-async-standalone/server-async-standalone-client/dependencies.html)"><fo:inline>
    server-async-standalone-client
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/server-async-standalone/server-async-standalone-client/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/server-async-standalone/server-async-standalone-client/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Standalone Jersey JAX-RS asynchronous server-side processing example client.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/server-async-standalone/server-async-standalone-webapp/dependencies.html)"><fo:inline>
    server-async-standalone-webapp
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/server-async-standalone/server-async-standalone-webapp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/server-async-standalone/server-async-standalone-webapp/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Standalone Jersey JAX-RS asynchronous server-side processing example web application.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/server-sent-events-jaxrs/dependencies.html)"><fo:inline>
    server-sent-events-jaxrs
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/server-sent-events-jaxrs/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/server-sent-events-jaxrs/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey JAX-RS 2.1 Server-Sent Events example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/server-sent-events-jersey/dependencies.html)"><fo:inline>
    server-sent-events-jersey
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/server-sent-events-jersey/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/server-sent-events-jersey/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Server-Sent Events example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/servlet3-webapp/dependencies.html)"><fo:inline>
    servlet3-webapp
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/servlet3-webapp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/servlet3-webapp/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Servlet 3 example with missing servlet-class in the web.xml file</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/shortener-webapp/dependencies.html)"><fo:inline>
    shortener-webapp
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/shortener-webapp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/shortener-webapp/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Shortener Webapp (MVC + Bean Validation).</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/simple-console/dependencies.html)"><fo:inline>
    simple-console
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/simple-console/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/simple-console/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Simple Console example</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/sparklines/dependencies.html)"><fo:inline>
    sparklines
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/sparklines/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/sparklines/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey examples</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/sse-item-store-jaxrs-webapp/dependencies.html)"><fo:inline>
    sse-item-store-jaxrs-webapp
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/sse-item-store-jaxrs-webapp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/sse-item-store-jaxrs-webapp/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey JAX-RS 2.1 SSE API-based item store example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/sse-item-store-jersey-webapp/dependencies.html)"><fo:inline>
    sse-item-store-jersey-webapp
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/sse-item-store-jersey-webapp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/sse-item-store-jersey-webapp/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey SSE API-based item store example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/sse-twitter-aggregator/dependencies.html)"><fo:inline>
    sse-twitter-aggregator
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/sse-twitter-aggregator/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/sse-twitter-aggregator/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey SSE Twitter Message Aggregator Example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/system-properties-example/dependencies.html)"><fo:inline>
    system-properties-example
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/system-properties-example/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/system-properties-example/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey system properties example.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/tone-generator/dependencies.html)"><fo:inline>
    tone-generator
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/tone-generator/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/tone-generator/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey examples</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/osgi-helloworld-webapp/war-bundle/dependencies.html)"><fo:inline>
    war-bundle
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/osgi-helloworld-webapp/war-bundle/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/osgi-helloworld-webapp/war-bundle/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>OSGi Helloworld Webapp WAR bundle</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/dependencies.html)"><fo:inline>
    webapp-example-parent
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/webapp-example-parent/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Jersey Web Application (Servlet) examples parent POM.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/xml-moxy/dependencies.html)"><fo:inline>
    xml-moxy
</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/xml-moxy/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/xml-moxy/dependencies.html</fo:basic-link>]</fo:inline>
</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>Jersey XML MOXy example.</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>JAX-RS Application, Resources and Sub-Resources</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>JAX-RS Application, Resources and Sub-Resources</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="jaxrs-resources"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 3. JAX-RS Application, Resources and Sub-Resources</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">This chapter presents an overview of the core JAX-RS concepts - resources and sub-resources.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JAX-RS 2.1.5 JavaDoc can be found online <fo:basic-link external-destination="url(http://jax-rs-spec.java.net/nonav/2.1.5/apidocs/index.html)"><fo:inline>here</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://jax-rs-spec.java.net/nonav/2.1.5/apidocs/index.html)">http://jax-rs-spec.java.net/nonav/2.1.5/apidocs/index.html</fo:basic-link>]</fo:inline>.
    </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The JAX-RS 2.1.5 specification draft can be found online <fo:basic-link external-destination="url(http://jcp.org/en/jsr/summary?id=339)"><fo:inline>here</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://jcp.org/en/jsr/summary?id=339)">http://jcp.org/en/jsr/summary?id=339</fo:basic-link>]</fo:inline>.
    </fo:block><fo:block id="d0e2039"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Root Resource Classes</fo:marker><fo:block font-size="20.735999999999997pt">3.1. Root Resource Classes</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:inline font-style="italic">Root resource classes</fo:inline>
            are POJOs (Plain Old Java Objects) that are annotated with <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)"><fo:inline>@Path</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html</fo:basic-link>]</fo:inline>
            have at least one method annotated with <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)"><fo:inline>@Path</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html</fo:basic-link>]</fo:inline> or a resource method designator annotation such as <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/GET.html)"><fo:inline>@GET</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/GET.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/GET.html</fo:basic-link>]</fo:inline>,
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/PUT.html)"><fo:inline>@PUT</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/PUT.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/PUT.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/POST.html)"><fo:inline>@POST</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/POST.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/POST.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/DELETE.html)"><fo:inline>@DELETE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/DELETE.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/DELETE.html</fo:basic-link>]</fo:inline>. Resource methods are methods of a resource class annotated with a resource
            method designator. This section shows how to use Jersey to annotate Java objects to create RESTful web services.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The following code example is a very simple example of a root
            resource class using JAX-RS annotations. The example code shown here is
            from one of the samples that ships with Jersey, the zip file of which can
            be found in the maven repository
            <fo:basic-link external-destination="url(https://maven.java.net/content/repositories/releases/org/glassfish/jersey/examples/helloworld/2.28/)"><fo:inline>here</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://maven.java.net/content/repositories/releases/org/glassfish/jersey/examples/helloworld/2.28/)">https://maven.java.net/content/repositories/releases/org/glassfish/jersey/examples/helloworld/2.28/</fo:basic-link>]</fo:inline>.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2072"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3.1. Simple hello world root resource class</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2075">  1 package org.glassfish.jersey.examples.helloworld;
  2 
  3 import javax.ws.rs.GET;
  4 import javax.ws.rs.Path;
  5 import javax.ws.rs.Produces;
  6 
  7 @Path("helloworld")
  8 public class HelloWorldResource {
  9     public static final String CLICHED_MESSAGE = "Hello World!";
 10 
 11 @GET
 12 @Produces("text/plain")
 13     public String getHello() {
 14         return CLICHED_MESSAGE;
 15     }
 16 }</fo:block></fo:block></fo:block>
            Let's look at some of the JAX-RS annotations used in this example.
        </fo:block><fo:block id="d0e2078"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">@Path</fo:marker><fo:block font-size="17.28pt">3.1.1. @Path</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)"><fo:inline>@Path</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html</fo:basic-link>]</fo:inline> annotation's value is a relative URI path. In the example above, the Java class will be hosted at the URI path
                <fo:inline font-family="monospace">/helloworld</fo:inline>. This is an extremely simple use of the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)"><fo:inline>@Path</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html</fo:basic-link>]</fo:inline> annotation. What makes JAX-RS so useful is that you can embed variables in the URIs.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:inline font-style="italic">URI path templates</fo:inline>
                are URIs with variables embedded within the URI syntax. These variables are substituted at runtime in order for a resource to respond to a request based on the substituted URI. Variables are denoted by curly braces. For example, look at the following <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)"><fo:inline>@Path</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html</fo:basic-link>]</fo:inline> annotation:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2100">@Path("/users/{username}")</fo:block>

                In this type of example, a user will be prompted to enter their name, and then a Jersey web service configured to respond to requests to this URI path template will respond. For example, if the user entered their username as "Galileo", the web service will respond to the following URL:
                <fo:inline font-family="monospace">http://example.com/users/Galileo</fo:inline>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To obtain the value of the username variable the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/PathParam.html)"><fo:inline>@PathParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/PathParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/PathParam.html</fo:basic-link>]</fo:inline> may be used on method parameter of a request method, for example:
                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2111"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3.2. Specifying URI path parameter</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2114">  1 @Path("/users/{username}")
  2 public class UserResource {
  3 
  4     @GET
  5     @Produces("text/xml")
  6     public String getUser(@PathParam("username") String userName) {
  7         ...
  8     }
  9 }</fo:block></fo:block></fo:block>
                If it is required that a user name must only consist of
                lower and upper case numeric characters then it is possible to declare a
                particular regular expression, which overrides the default regular
                expression, "[^/]+", for example:
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2117">@Path("users/{username: [a-zA-Z][a-zA-Z_0-9]*}")</fo:block>
                In this type of example the username variable will only match user names that begin with one upper or lower case letter and zero or more alpha numeric characters and the underscore character. If a user name does not match that a 404 (Not Found) response will occur.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">A <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)"><fo:inline>@Path</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html</fo:basic-link>]</fo:inline> value may or may not begin with a '/', it makes no difference. Likewise, by default, a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)"><fo:inline>@Path</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html</fo:basic-link>]</fo:inline> value may or may not end in a '/', it makes no difference, and thus request URLs that end or do not end in a '/' will both
                be matched.
            </fo:block></fo:block><fo:block id="d0e2128"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">@GET, @PUT, @POST, @DELETE, ... (HTTP Methods)</fo:marker><fo:block font-size="17.28pt">3.1.2. @GET, @PUT, @POST, @DELETE, ... (HTTP Methods)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/GET.html)"><fo:inline>@GET</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/GET.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/GET.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/PUT.html)"><fo:inline>@PUT</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/PUT.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/PUT.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/POST.html)"><fo:inline>@POST</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/POST.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/POST.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/DELETE.html)"><fo:inline>@DELETE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/DELETE.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/DELETE.html</fo:basic-link>]</fo:inline> and <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/HEAD.html)"><fo:inline>@HEAD</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/HEAD.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/HEAD.html</fo:basic-link>]</fo:inline>
                are
                <fo:inline font-style="italic">resource method designator</fo:inline>
                annotations defined
                by JAX-RS and which correspond to the similarly named HTTP methods. In
                the example above, the annotated Java method will process HTTP GET
                requests. The behavior of a resource is determined by which of the HTTP
                methods the resource is responding to.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The following example is an extract from the storage service
                sample that shows the use of the PUT method to create or update a
                storage container:
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2154"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3.3. PUT method</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2157">  1 @PUT
  2 public Response putContainer() {
  3     System.out.println("PUT CONTAINER " + container);
  4 
  5     URI uri = uriInfo.getAbsolutePath();
  6     Container c = new Container(container, uri.toString());
  7 
  8     Response r;
  9     if (!MemoryStore.MS.hasContainer(c)) {
 10         r = Response.created(uri).build();
 11     } else {
 12         r = Response.noContent().build();
 13     }
 14 
 15     MemoryStore.MS.createContainer(c);
 16     return r;
 17 }</fo:block></fo:block></fo:block>
                By default the JAX-RS runtime will automatically support the methods HEAD and OPTIONS, if not explicitly
                implemented. For HEAD the runtime will invoke the implemented GET method (if present) and ignore the
                response entity (if set). A response returned for the OPTIONS method depends on the requested media type
                defined in the 'Accept' header. The OPTIONS method can return a response with a set of supported
                resource methods in the 'Allow' header or return
                a <fo:basic-link external-destination="url(http://wadl.java.net/)"><fo:inline>WADL</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://wadl.java.net/)">http://wadl.java.net/</fo:basic-link>]</fo:inline> document.
                See <fo:basic-link internal-destination="wadl"><fo:inline>wadl section</fo:inline></fo:basic-link> for more information.
            </fo:block></fo:block><fo:block id="d0e2166"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">@Produces</fo:marker><fo:block font-size="17.28pt">3.1.3. @Produces</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html)"><fo:inline>@Produces</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html</fo:basic-link>]</fo:inline> annotation is used to specify the MIME media types of representations a resource can
                produce and send back to the client. In this example, the Java method will produce representations identified
                by the MIME media type "text/plain". <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html)"><fo:inline>@Produces</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html</fo:basic-link>]</fo:inline> can be applied at both the class and method levels.
                Here's an example:
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2179"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3.4. Specifying output MIME type</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2182">  1 @Path("/myResource")
  2 @Produces("text/plain")
  3 public class SomeResource {
  4     @GET
  5     public String doGetAsPlainText() {
  6         ...
  7     }
  8 
  9     @GET
 10     @Produces("text/html")
 11     public String doGetAsHtml() {
 12         ...
 13     }
 14 }</fo:block></fo:block></fo:block>
                The
                <fo:inline font-family="monospace">doGetAsPlainText</fo:inline>
                method defaults to the MIME type of the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html)"><fo:inline>@Produces</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html</fo:basic-link>]</fo:inline> annotation at the class level. The
                <fo:inline font-family="monospace">doGetAsHtml</fo:inline>
                method's <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html)"><fo:inline>@Produces</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html</fo:basic-link>]</fo:inline> annotation overrides the class-level <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html)"><fo:inline>@Produces</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html</fo:basic-link>]</fo:inline> setting, and specifies that the
                method can produce HTML rather than plain text.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If a resource class is capable of producing more that one MIME
                media type then the resource method chosen will correspond to the most
                acceptable media type as declared by the client. More specifically the
                Accept header of the HTTP request declares what is most acceptable. For
                example if the Accept header is "<fo:inline font-family="monospace">Accept: text/plain</fo:inline>" then the
                <fo:inline font-family="monospace">doGetAsPlainText</fo:inline>
                method will be invoked.
                Alternatively if the Accept header is "
                <fo:inline font-family="monospace">Accept: text/plain;q=0.9, text/html</fo:inline>", which declares that the client can accept media types of
                "text/plain" and "text/html" but prefers the latter, then the
                <fo:inline font-family="monospace">doGetAsHtml</fo:inline>
                method will be invoked.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">More than one media type may be declared in the same <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html)"><fo:inline>@Produces</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html</fo:basic-link>]</fo:inline> declaration, for example:
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2221"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3.5. Using multiple output MIME types</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2224">  1 @GET
  2 @Produces({"application/xml", "application/json"})
  3 public String doGetAsXmlOrJson() {
  4     ...
  5 }</fo:block></fo:block></fo:block>
                The
                <fo:inline font-family="monospace">doGetAsXmlOrJson</fo:inline>
                method will get
                invoked if either of the media types "application/xml" and
                "application/json" are acceptable. If both are equally acceptable then
                the former will be chosen because it occurs first.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Optionally, server can also specify the quality factor for individual media types. These are
                considered if several are equally acceptable by the client. For example:</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2234"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3.6. Server-side content negotiation</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2237">  1 @GET
  2 @Produces({"application/xml; qs=0.9", "application/json"})
  3 public String doGetAsXmlOrJson() {
  4     ...
  5 }</fo:block></fo:block></fo:block>
                In the above sample, if client accepts both "application/xml" and "application/json" (equally),
                then a server always sends "application/json", since "application/xml" has a lower quality factor.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The examples above refers explicitly to MIME media types for
                clarity. It is possible to refer to constant values, which may reduce
                typographical errors, see the constant field values of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/MediaType.html)"><fo:inline>MediaType</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/MediaType.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/MediaType.html</fo:basic-link>]</fo:inline>.
            </fo:block></fo:block><fo:block id="d0e2245"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">@Consumes</fo:marker><fo:block font-size="17.28pt">3.1.4. @Consumes</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Consumes.html)"><fo:inline>@Consumes</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Consumes.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Consumes.html</fo:basic-link>]</fo:inline> annotation is used to specify the MIME media types of representations
                that can be consumed by a resource. The above example can be modified to set the cliched
                message as follows:
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2255"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3.7. Specifying input MIME type</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2258">  1 @POST
  2 @Consumes("text/plain")
  3 public void postClichedMessage(String message) {
  4     // Store the message
  5 }</fo:block></fo:block></fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">In this example, the Java method will consume representations
                identified by the MIME media type "text/plain". Notice that the resource
                method returns void. This means no representation is returned and
                response with a status code of 204 (No Content) will be returned to the client.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Consumes.html)"><fo:inline>@Consumes</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Consumes.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Consumes.html</fo:basic-link>]</fo:inline> can be applied at both the class and the method levels and more than one media type
                may be declared in the same <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Consumes.html)"><fo:inline>@Consumes</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Consumes.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Consumes.html</fo:basic-link>]</fo:inline> declaration.
            </fo:block></fo:block></fo:block><fo:block id="d0e2270"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Parameter Annotations (@*Param)</fo:marker><fo:block font-size="20.735999999999997pt">3.2. Parameter Annotations (@*Param)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Parameters of a resource method may be annotated with parameter-based annotations to extract information
            from a request. One of the previous examples presented the use of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/PathParam.html)"><fo:inline>@PathParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/PathParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/PathParam.html</fo:basic-link>]</fo:inline> to extract a path
            parameter from the path component of the request URL that matched the path declared in <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)"><fo:inline>@Path</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html</fo:basic-link>]</fo:inline>.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/QueryParam.html)"><fo:inline>@QueryParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/QueryParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/QueryParam.html</fo:basic-link>]</fo:inline> is used to extract query parameters from the Query component of the request URL.
            The following example is an extract from the sparklines sample:
        </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2285"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3.8. Query parameters</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2288">  1 @Path("smooth")
  2 @GET
  3 public Response smooth(
  4     @DefaultValue("2") @QueryParam("step") int step,
  5     @DefaultValue("true") @QueryParam("min-m") boolean hasMin,
  6     @DefaultValue("true") @QueryParam("max-m") boolean hasMax,
  7     @DefaultValue("true") @QueryParam("last-m") boolean hasLast,
  8     @DefaultValue("blue") @QueryParam("min-color") ColorParam minColor,
  9     @DefaultValue("green") @QueryParam("max-color") ColorParam maxColor,
 10     @DefaultValue("red") @QueryParam("last-color") ColorParam lastColor) {
 11     ...
 12 }</fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If a query parameter "step" exists in the query component of the
            request URI then the "step" value will be extracted and parsed as a
            32 bit signed integer and assigned to the step method parameter. If "step"
            does not exist then a default value of 2, as declared in the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/DefaultValue.html)"><fo:inline>@DefaultValue</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/DefaultValue.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/DefaultValue.html</fo:basic-link>]</fo:inline>
            annotation, will be assigned to the step method parameter. If the "step"
            value cannot be parsed as a 32 bit signed integer then a HTTP 404 (Not
            Found) response is returned. User defined Java types such as
            <fo:inline font-family="monospace">ColorParam</fo:inline>
            may be used, which as implemented as
            follows:
        </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2298"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3.9. Custom Java type for consuming request parameters</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2301">  1 public class ColorParam extends Color {
  2 
  3     public ColorParam(String s) {
  4         super(getRGB(s));
  5     }
  6 
  7     private static int getRGB(String s) {
  8         if (s.charAt(0) == '#') {
  9             try {
 10                 Color c = Color.decode("0x" + s.substring(1));
 11                 return c.getRGB();
 12             } catch (NumberFormatException e) {
 13                 throw new WebApplicationException(400);
 14             }
 15         } else {
 16             try {
 17                 Field f = Color.class.getField(s);
 18                 return ((Color)f.get(null)).getRGB();
 19             } catch (Exception e) {
 20                 throw new WebApplicationException(400);
 21             }
 22         }
 23     }
 24 }</fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">In general the Java type of the method parameter may:</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.2em" id="d0e2305"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e2306"><fo:list-item-label end-indent="label-end()"><fo:block>1.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Be a primitive type;</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e2309"><fo:list-item-label end-indent="label-end()"><fo:block>2.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Have a constructor that accepts a single
                    <fo:inline font-family="monospace">String</fo:inline>
                    argument;
                </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e2315"><fo:list-item-label end-indent="label-end()"><fo:block>3.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Have a static method named
                    <fo:inline font-family="monospace">valueOf</fo:inline>
                    or
                    <fo:inline font-family="monospace">fromString</fo:inline>
                    that accepts a single
                    <fo:inline font-family="monospace">String</fo:inline>
                    argument (see, for example,
                    <fo:inline font-family="monospace">Integer.valueOf(String)</fo:inline>
                    and <fo:inline font-family="monospace">java.util.UUID.fromString(String)</fo:inline>);
                </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e2333"><fo:list-item-label end-indent="label-end()"><fo:block>4.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Have a registered implementation of <fo:inline font-family="monospace">javax.ws.rs.ext.ParamConverterProvider</fo:inline> JAX-RS
                    extension SPI that returns a <fo:inline font-family="monospace">javax.ws.rs.ext.ParamConverter</fo:inline> instance capable of
                    a "from string" conversion for the type.
                     or
                </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e2342"><fo:list-item-label end-indent="label-end()"><fo:block>5.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Be <fo:inline font-family="monospace">List&lt;T&gt;</fo:inline>,
                    <fo:inline font-family="monospace">Set&lt;T&gt;</fo:inline>
                    or
                    <fo:inline font-family="monospace">SortedSet&lt;T&gt;</fo:inline>, where
                    <fo:inline font-family="monospace">T</fo:inline>
                    satisfies 2 or 3 above. The resulting collection is read-only.
                </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Sometimes parameters may contain more than one value for the same
            name. If this is the case then types in 5) may be used to obtain all
            values.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/DefaultValue.html)"><fo:inline>@DefaultValue</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/DefaultValue.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/DefaultValue.html</fo:basic-link>]</fo:inline> is not used in conjunction with <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/QueryParam.html)"><fo:inline>@QueryParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/QueryParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/QueryParam.html</fo:basic-link>]</fo:inline>
            and the query parameter is not present in the request then value will be
            an empty collection for<fo:inline font-family="monospace">List</fo:inline>, <fo:inline font-family="monospace">Set</fo:inline> or <fo:inline font-family="monospace">SortedSet</fo:inline>,
            <fo:inline font-family="monospace">null</fo:inline> for other object types, and the Java-defined default for primitive types.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/PathParam.html)"><fo:inline>@PathParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/PathParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/PathParam.html</fo:basic-link>]</fo:inline> and the other parameter-based annotations, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/MatrixParam.html)"><fo:inline>@MatrixParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/MatrixParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/MatrixParam.html</fo:basic-link>]</fo:inline>,
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/HeaderParam.html)"><fo:inline>@HeaderParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/HeaderParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/HeaderParam.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/CookieParam.html)"><fo:inline>@CookieParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/CookieParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/CookieParam.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/FormParam.html)"><fo:inline>@FormParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/FormParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/FormParam.html</fo:basic-link>]</fo:inline> obey the same rules as <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/QueryParam.html)"><fo:inline>@QueryParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/QueryParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/QueryParam.html</fo:basic-link>]</fo:inline>.
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/MatrixParam.html)"><fo:inline>@MatrixParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/MatrixParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/MatrixParam.html</fo:basic-link>]</fo:inline> extracts information from URL path segments. <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/HeaderParam.html)"><fo:inline>@HeaderParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/HeaderParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/HeaderParam.html</fo:basic-link>]</fo:inline> extracts information
            from the HTTP headers. <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/CookieParam.html)"><fo:inline>@CookieParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/CookieParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/CookieParam.html</fo:basic-link>]</fo:inline> extracts information from the cookies declared in cookie related HTTP
            headers.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/FormParam.html)"><fo:inline>@FormParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/FormParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/FormParam.html</fo:basic-link>]</fo:inline> is slightly special because it extracts information from a request representation that
            is of the MIME media type
            <fo:inline font-family="monospace">"application/x-www-form-urlencoded"</fo:inline>
            and conforms to the encoding
            specified by HTML forms, as described here. This parameter is very useful for extracting information that is
            POSTed by HTML forms, for example the following extracts the form parameter named "name" from the POSTed form
            data:
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2417"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3.10. Processing POSTed HTML form</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2420">  1 @POST
  2 @Consumes("application/x-www-form-urlencoded")
  3 public void post(@FormParam("name") String name) {
  4     // Store the message
  5 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If it is necessary to obtain a general map of parameter name to
            values then, for query and path parameters it is possible to do the
            following:
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2427"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3.11. Obtaining general map of URI path and/or query parameters</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2430">  1 @GET
  2 public String get(@Context UriInfo ui) {
  3     MultivaluedMap&lt;String, String&gt; queryParams = ui.getQueryParameters();
  4     MultivaluedMap&lt;String, String&gt; pathParams = ui.getPathParameters();
  5 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">For header and cookie parameters the following:</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2437"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3.12. Obtaining general map of header parameters</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2440">  1 @GET
  2 public String get(@Context HttpHeaders hh) {
  3     MultivaluedMap&lt;String, String&gt; headerParams = hh.getRequestHeaders();
  4     Map&lt;String, Cookie&gt; pathParams = hh.getCookies();
  5 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">In general <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html)"><fo:inline>@Context</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html</fo:basic-link>]</fo:inline> can be used to obtain contextual Java types related to the request or response.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Because form parameters (unlike others) are part of the message entity, it is possible to do the following:</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2452"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3.13. Obtaining general map of form parameters</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2455">  1 @POST
  2 @Consumes("application/x-www-form-urlencoded")
  3 public void post(MultivaluedMap&lt;String, String&gt; formParams) {
  4     // Store the message
  5 }</fo:block></fo:block></fo:block>

            I.e. you don't need to use the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html)"><fo:inline>@Context</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html</fo:basic-link>]</fo:inline> annotation.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Another kind of injection is the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/BeanParam.html)"><fo:inline>@BeanParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/BeanParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/BeanParam.html</fo:basic-link>]</fo:inline> which allows to inject the parameters described above into a
            single bean. A bean annotated with <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/BeanParam.html)"><fo:inline>@BeanParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/BeanParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/BeanParam.html</fo:basic-link>]</fo:inline> containing any fields and appropriate
            <fo:inline font-family="monospace">*param</fo:inline>
            annotation(like <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/PathParam.html)"><fo:inline>@PathParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/PathParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/PathParam.html</fo:basic-link>]</fo:inline>) will be initialized with corresponding request values in expected way as if these
            fields were in the resource class. Then instead of injecting request values like path param into a constructor parameters
            or class fields the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/BeanParam.html)"><fo:inline>@BeanParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/BeanParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/BeanParam.html</fo:basic-link>]</fo:inline> can be used to inject such a bean into a resource or resource method. The
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/BeanParam.html)"><fo:inline>@BeanParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/BeanParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/BeanParam.html</fo:basic-link>]</fo:inline> is used this way to aggregate more request parameters into a single bean.
        </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2481"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3.14. Example of the bean which will be used as <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/BeanParam.html)"><fo:inline>@BeanParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/BeanParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/BeanParam.html</fo:basic-link>]</fo:inline>
            </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2487">  1 public class MyBeanParam {
  2     @PathParam("p")
  3     private String pathParam;
  4 
  5     @MatrixParam("m")
  6     @Encoded
  7     @DefaultValue("default")
  8     private String matrixParam;
  9 
 10     @HeaderParam("header")
 11     private String headerParam;
 12 
 13     private String queryParam;
 14 
 15     public MyBeanParam(@QueryParam("q") String queryParam) {
 16         this.queryParam = queryParam;
 17     }
 18 
 19     public String getPathParam() {
 20         return pathParam;
 21     }
 22     ...
 23 }</fo:block></fo:block></fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2489"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3.15. Injection of MyBeanParam as a method parameter:</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2492">  1 @POST
  2 public void post(@BeanParam MyBeanParam beanParam, String entity) {
  3     final String pathParam = beanParam.getPathParam(); // contains injected path parameter "p"
  4     ...
  5 }</fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The example shows aggregation of injections <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/PathParam.html)"><fo:inline>@PathParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/PathParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/PathParam.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/QueryParam.html)"><fo:inline>@QueryParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/QueryParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/QueryParam.html</fo:basic-link>]</fo:inline> <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/MatrixParam.html)"><fo:inline>@MatrixParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/MatrixParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/MatrixParam.html</fo:basic-link>]</fo:inline>
            and <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/HeaderParam.html)"><fo:inline>@HeaderParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/HeaderParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/HeaderParam.html</fo:basic-link>]</fo:inline> into one single bean. The rules for injections inside the bean are the same as described above
            for these injections. The <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/DefaultValue.html)"><fo:inline>@DefaultValue</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/DefaultValue.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/DefaultValue.html</fo:basic-link>]</fo:inline> is used to define the default value for matrix parameter matrixParam.
            Also the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Encoded.html)"><fo:inline>@Encoded</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Encoded.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Encoded.html</fo:basic-link>]</fo:inline> annotation has the same behaviour as if it were used for injection in the resource method
            directly. Injecting the bean parameter into @Singleton resource class fields is not allowed (injections into method
            parameter must be used instead).
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/BeanParam.html)"><fo:inline>@BeanParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/BeanParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/BeanParam.html</fo:basic-link>]</fo:inline> can contain all parameters injections
            (<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/PathParam.html)"><fo:inline>@PathParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/PathParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/PathParam.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/QueryParam.html)"><fo:inline>@QueryParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/QueryParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/QueryParam.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/MatrixParam.html)"><fo:inline>@MatrixParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/MatrixParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/MatrixParam.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/HeaderParam.html)"><fo:inline>@HeaderParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/HeaderParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/HeaderParam.html</fo:basic-link>]</fo:inline>,
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/CookieParam.html)"><fo:inline>@CookieParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/CookieParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/CookieParam.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/FormParam.html)"><fo:inline>@FormParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/FormParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/FormParam.html</fo:basic-link>]</fo:inline>). More
            beans can be injected into one resource or method parameters even if they inject the same request values. For example
            the following is possible:
        </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2536"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3.16. Injection of more beans into one resource methods:</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2539">  1 @POST
  2 public void post(@BeanParam MyBeanParam beanParam, @BeanParam AnotherBean anotherBean, @PathParam("p") pathParam,
  3 String entity) {
  4     // beanParam.getPathParam() == pathParam
  5     ...
  6 }</fo:block></fo:block></fo:block></fo:block><fo:block id="d0e2541"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Sub-resources</fo:marker><fo:block font-size="20.735999999999997pt">3.3. Sub-resources</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)"><fo:inline>@Path</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html</fo:basic-link>]</fo:inline> may be used on classes and such classes are referred to as root resource classes. <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)"><fo:inline>@Path</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html</fo:basic-link>]</fo:inline>
            may also be used on methods of root resource classes. This enables common functionality for a number of resources
            to be grouped together and potentially reused.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The first way <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)"><fo:inline>@Path</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html</fo:basic-link>]</fo:inline> may be used is on resource methods and such methods are referred to as
            <fo:inline font-style="italic">sub-resource methods</fo:inline>. The following example shows the method signatures for a root
            resource class from the jmaki-backend sample:
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2561"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3.17. Sub-resource methods</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2564">  1 @Singleton
  2 @Path("/printers")
  3 public class PrintersResource {
  4 
  5     @GET
  6     @Produces({"application/json", "application/xml"})
  7     public WebResourceList getMyResources() { ... }
  8 
  9     @GET @Path("/list")
 10     @Produces({"application/json", "application/xml"})
 11     public WebResourceList getListOfPrinters() { ... }
 12 
 13     @GET @Path("/jMakiTable")
 14     @Produces("application/json")
 15     public PrinterTableModel getTable() { ... }
 16 
 17     @GET @Path("/jMakiTree")
 18     @Produces("application/json")
 19     public TreeModel getTree() { ... }
 20 
 21     @GET @Path("/ids/{printerid}")
 22     @Produces({"application/json", "application/xml"})
 23     public Printer getPrinter(@PathParam("printerid") String printerId) { ... }
 24 
 25     @PUT @Path("/ids/{printerid}")
 26     @Consumes({"application/json", "application/xml"})
 27     public void putPrinter(@PathParam("printerid") String printerId, Printer printer) { ... }
 28 
 29     @DELETE @Path("/ids/{printerid}")
 30     public void deletePrinter(@PathParam("printerid") String printerId) { ... }
 31 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If the path of the request URL is "printers" then the resource methods not annotated with <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)"><fo:inline>@Path</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html</fo:basic-link>]</fo:inline>
            will be selected. If the request path of the request URL is "printers/list" then first the root resource class
            will be matched and then the sub-resource methods that match "list" will be selected, which in this case
            is the sub-resource method<fo:inline font-family="monospace">getListOfPrinters</fo:inline>. So, in this example hierarchical matching
            on the path of the request URL is performed.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The second way <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)"><fo:inline>@Path</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html</fo:basic-link>]</fo:inline> may be used is on methods
            <fo:inline font-weight="bold">not</fo:inline>
            annotated
            with resource method designators such as <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/GET.html)"><fo:inline>@GET</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/GET.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/GET.html</fo:basic-link>]</fo:inline> or <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/POST.html)"><fo:inline>@POST</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/POST.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/POST.html</fo:basic-link>]</fo:inline>. Such methods are referred to as
            <fo:inline font-style="italic">sub-resource locators</fo:inline>. The following example shows the method signatures for
            a root resource class and a resource class from the optimistic-concurrency sample:
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2594"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3.18. Sub-resource locators</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2597">  1 @Path("/item")
  2 public class ItemResource {
  3     @Context UriInfo uriInfo;
  4 
  5     @Path("content")
  6     public ItemContentResource getItemContentResource() {
  7         return new ItemContentResource();
  8     }
  9 
 10     @GET
 11     @Produces("application/xml")
 12         public Item get() { ... }
 13     }
 14 }
 15 
 16 public class ItemContentResource {
 17 
 18     @GET
 19     public Response get() { ... }
 20 
 21     @PUT
 22     @Path("{version}")
 23     public void put(@PathParam("version") int version,
 24                     @Context HttpHeaders headers,
 25                     byte[] in) {
 26         ...
 27     }
 28 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The root resource class
            <fo:inline font-family="monospace">ItemResource</fo:inline>
            contains the
            sub-resource locator method
            <fo:inline font-family="monospace">getItemContentResource</fo:inline>
            that
            returns a new resource class. If the path of the request URL is
            "item/content" then first of all the root resource will be matched, then
            the sub-resource locator will be matched and invoked, which returns an
            instance of the
            <fo:inline font-family="monospace">ItemContentResource</fo:inline>
            resource class.
            Sub-resource locators enable reuse of resource classes. A method can be annotated with the
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)"><fo:inline>@Path</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html</fo:basic-link>]</fo:inline> annotation with empty path (<fo:inline font-family="monospace">@Path("/")</fo:inline> or <fo:inline font-family="monospace">@Path("")</fo:inline>) which
            means that the sub resource locator is matched for the path of the enclosing resource (without sub-resource path).
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2622"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3.19. Sub-resource locators with empty path</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2625">  1 @Path("/item")
  2 public class ItemResource {
  3 
  4     @Path("/")
  5     public ItemContentResource getItemContentResource() {
  6         return new ItemContentResource();
  7     }
  8 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">In the example above the sub-resource locator method <fo:inline font-family="monospace">getItemContentResource</fo:inline>
            is matched for example for request path "/item/locator" or even for only "/item".
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">In addition the processing of resource classes returned by
            sub-resource locators is performed at runtime thus it is possible to
            support polymorphism. A sub-resource locator may return different
            sub-types depending on the request (for example a sub-resource locator
            could return different sub-types dependent on the role of the principle
            that is authenticated). So for example the following sub resource locator is valid:
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2637"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3.20. Sub-resource locators returning sub-type</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2640">  1 @Path("/item")
  2 public class ItemResource {
  3 
  4     @Path("/")
  5     public Object getItemContentResource() {
  6         return new AnyResource();
  7     }
  8 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Note that the runtime will not manage the life-cycle or perform any
            field injection onto instances returned from sub-resource locator methods.
            This is because the runtime does not know what the life-cycle of the
            instance is. If it is required that the runtime manages the sub-resources
            as standard resources the <fo:inline font-family="monospace">Class</fo:inline> should be returned
            as shown in the following example:
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2650"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3.21. Sub-resource locators created from classes</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2653">  1 import javax.inject.Singleton;
  2 
  3 @Path("/item")
  4 public class ItemResource {
  5     @Path("content")
  6     public Class&lt;ItemContentSingletonResource&gt; getItemContentResource() {
  7         return ItemContentSingletonResource.class;
  8     }
  9 }
 10 
 11 @Singleton
 12 public class ItemContentSingletonResource {
 13     // this class is managed in the singleton life cycle
 14 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">JAX-RS resources are managed in per-request scope by default which means that
            new resource is created for each request.
            In this example the <fo:inline font-family="monospace">javax.inject.Singleton</fo:inline> annotation says
            that the resource will be managed as singleton and not in request scope.
            The sub-resource locator method returns a class which means that the runtime
            will managed the resource instance and its life-cycle. If the method would return instance instead,
            the <fo:inline font-family="monospace">Singleton</fo:inline> annotation would have no effect and the returned instance
            would be used.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The sub resource locator can also return a <fo:inline font-style="italic">programmatic resource model</fo:inline>. See <fo:basic-link internal-destination="resource-builder"><fo:inline>resource builder section</fo:inline></fo:basic-link> for information of how the programmatic resource
            model is constructed. The following example shows very simple resource returned from the sub-resource locator method.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2674"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3.22. Sub-resource locators returning resource model</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2677">  1 import org.glassfish.jersey.server.model.Resource;
  2 
  3 @Path("/item")
  4 public class ItemResource {
  5 
  6     @Path("content")
  7     public Resource getItemContentResource() {
  8         return Resource.from(ItemContentSingletonResource.class);
  9     }
 10 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The code above has exactly the same effect as previous example. <fo:inline font-family="monospace">Resource</fo:inline> is a resource
            simple resource constructed from <fo:inline font-family="monospace">ItemContentSingletonResource</fo:inline>. More complex programmatic
            resource can be returned as long they are valid resources.
        </fo:block></fo:block><fo:block id="d0e2688"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Life-cycle of Root Resource Classes</fo:marker><fo:block font-size="20.735999999999997pt">3.4. Life-cycle of Root Resource Classes</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">By default the life-cycle of root resource classes is per-request which,
            namely that a new instance of a root resource class is created every time
            the request URI path matches the root resource. This makes for a very
            natural programming model where constructors and fields can be utilized
            (as in the previous section showing the constructor of the
            <fo:inline font-family="monospace">SparklinesResource</fo:inline>
            class) without concern for multiple
            concurrent requests to the same resource.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">In general this is unlikely to be a cause of performance issues.
            Class construction and garbage collection of JVMs has vastly improved over
            the years and many objects will be created and discarded to serve and
            process the HTTP request and return the HTTP response.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Instances of singleton root resource classes can be declared by an instance of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)"><fo:inline>Application</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html</fo:basic-link>]</fo:inline>.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Jersey supports two further life-cycles using Jersey specific annotations.</fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2705"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 3.1. Resource scopes</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-start-style="solid" border-end-style="solid" border-top-style="solid" border-bottom-style="solid" border-start-width="0.5pt" border-end-width="0.5pt" border-top-width="0.5pt" border-bottom-width="0.5pt" border-start-color="black" border-end-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="11%"/><fo:table-column column-number="2" column-width="11%"/><fo:table-column column-number="3" column-width="22%"/><fo:table-column column-number="4" column-width="56%"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row keep-with-next.within-column="always"><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block font-weight="bold">Scope</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block font-weight="bold">Annotation</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block font-weight="bold">Annotation full class name</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block font-weight="bold">Description</fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>Request scope</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>@RequestScoped (or none)</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>org.glassfish.jersey.process.internal.RequestScoped</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block><fo:inline font-style="italic">Default lifecycle </fo:inline> (applied when no annotation is present). In this scope
                            the resource instance is created for each new request and used for processing of this request. If the
                            resource is used more than one time in the request processing, always the same instance will be used.
                            This can happen when a resource is a sub resource and is returned more times during the matching. In this
                            situation only one instance will serve the requests.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>Per-lookup scope</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>@PerLookup</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>org.glassfish.hk2.api.PerLookup</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>In this scope
                            the resource instance is created every time it is needed for the processing even it handles
                            the same request.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>Singleton</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>@Singleton</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>javax.inject.Singleton</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt"><fo:block>In this scope there is only one instance per jax-rs application. Singleton resource can be either
                            annotated with @Singleton and its class can be registered using the instance of
                            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)"><fo:inline>Application</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html</fo:basic-link>]</fo:inline>. You can also create singletons by registering singleton instances
                            into <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)"><fo:inline>Application</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html</fo:basic-link>]</fo:inline>.</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:block><fo:block id="d0e2759"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Rules of Injection</fo:marker><fo:block font-size="20.735999999999997pt">3.5. Rules of Injection</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Previous sections have presented examples of annotated types, mostly
            annotated method parameters but also annotated fields of a class, for the
            injection of values onto those types.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">This section presents the rules of injection of values on annotated
            types. Injection can be performed on fields, constructor parameters,
            resource/sub-resource/sub-resource locator method parameters and bean
            setter methods. The following presents an example of all such injection
            cases:
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2768"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3.23. Injection</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2771">  1 @Path("{id:\\d+}")
  2 public class InjectedResource {
  3     // Injection onto field
  4     @DefaultValue("q") @QueryParam("p")
  5     private String p;
  6 
  7     // Injection onto constructor parameter
  8     public InjectedResource(@PathParam("id") int id) { ... }
  9 
 10     // Injection onto resource method parameter
 11     @GET
 12     public String get(@Context UriInfo ui) { ... }
 13 
 14     // Injection onto sub-resource resource method parameter
 15     @Path("sub-id")
 16     @GET
 17     public String get(@PathParam("sub-id") String id) { ... }
 18 
 19     // Injection onto sub-resource locator method parameter
 20     @Path("sub-id")
 21     public SubResource getSubResource(@PathParam("sub-id") String id) { ... }
 22 
 23     // Injection using bean setter method
 24     @HeaderParam("X-header")
 25     public void setHeader(String header) { ... }
 26 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">There are some restrictions when injecting on to resource classes
            with a life-cycle of singleton scope. In such cases the class fields or
            constructor parameters cannot be injected with request specific parameters. So, for example
            the following is not allowed.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2778"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3.24. Wrong injection into a singleton scope</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2781">  1 @Path("resource")
  2 @Singleton
  3 public static class MySingletonResource {
  4 
  5     @QueryParam("query")
  6     String param; // WRONG: initialization of application will fail as you cannot
  7                   // inject request specific parameters into a singleton resource.
  8 
  9     @GET
 10     public String get() {
 11         return "query param: " + param;
 12     }
 13 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The example above will cause validation failure during application initialization as singleton
            resources cannot inject request specific parameters. The same example would fail if the query
            parameter would be injected into constructor parameter of such a singleton. In other words, if you
            wish one resource instance to server more requests (in the same time) it cannot be bound
            to a specific request parameter.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The exception exists for specific request objects which can injected even into
            constructor or class fields. For these objects the runtime will inject proxies
            which are able to simultaneously server more request. These request objects are
            <fo:inline font-family="monospace">HttpHeaders</fo:inline>, <fo:inline font-family="monospace">Request</fo:inline>, <fo:inline font-family="monospace">UriInfo</fo:inline>,
            <fo:inline font-family="monospace">SecurityContext</fo:inline>. These proxies can be injected using the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html)"><fo:inline>@Context</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html</fo:basic-link>]</fo:inline>
            annotation. The following example shows injection of proxies into the singleton resource class.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2805"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3.25. Injection of proxies into singleton</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2808">  1 @Path("resource")
  2 @Singleton
  3 public static class MySingletonResource {
  4     @Context
  5     Request request; // this is ok: the proxy of Request will be injected into this singleton
  6 
  7     public MySingletonResource(@Context SecurityContext securityContext) {
  8         // this is ok too: the proxy of SecurityContext will be injected
  9     }
 10 
 11     @GET
 12     public String get() {
 13         return "query param: " + param;
 14     }
 15 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            To summarize the injection can be done into the following constructs:
        </fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2813"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 3.2. Overview of injection types</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-start-style="solid" border-end-style="solid" border-top-style="solid" border-bottom-style="solid" border-start-width="0.5pt" border-end-width="0.5pt" border-top-width="0.5pt" border-bottom-width="0.5pt" border-start-color="black" border-end-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="16%"/><fo:table-column column-number="2" column-width="84%"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row keep-with-next.within-column="always"><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block font-weight="bold">Java construct</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block font-weight="bold">Description</fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>Class fields</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            Inject value directly into the field of the class. The field can be private
                            and must not be final. Cannot be used in Singleton scope except proxiable types mentioned above.
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>Constructor parameters</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            The constructor will be invoked with injected values. If more
                            constructors exists the one with the most injectable parameters will be invoked.
                            Cannot be used in Singleton scope except proxiable types mentioned above.
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>Resource methods</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            The resource methods (these annotated with @GET, @POST, ...) can contain
                            parameters that can be injected when the resource method is executed.
                            Can be used in any scope.
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>Sub resource locators</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            The sub resource locators (methods annotated with @Path but not @GET, @POST, ...)
                            can contain parameters that can be injected when the resource method is executed.
                            Can be used in any scope.
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>Setter methods</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt"><fo:block>
                            Instead of injecting values directly into field the value can be injected into the
                            setter method which will initialize the field. This injection can be used only with <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html)"><fo:inline>@Context</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html</fo:basic-link>]</fo:inline>
                            annotation. This means
                            it cannot be used for example for injecting of query params but it can be used for injections of
                            request. The setters will be called after the object creation and
                            only once. The name of the method does not necessary have a setter pattern. Cannot be used
                            in Singleton scope except proxiable types mentioned above.
                        </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The following example shows all possible java constructs into which the values can be injected.

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2856"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 3.26. Example of possible injections</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2859">  1 @Path("resource")
  2 public static class SummaryOfInjectionsResource {
  3     @QueryParam("query")
  4     String param; // injection into a class field
  5 
  6 
  7     @GET
  8     public String get(@QueryParam("query") String methodQueryParam) {
  9         // injection into a resource method parameter
 10         return "query param: " + param;
 11     }
 12 
 13     @Path("sub-resource-locator")
 14     public Class&lt;SubResource&gt; subResourceLocator(@QueryParam("query") String subResourceQueryParam) {
 15         // injection into a sub resource locator parameter
 16         return SubResource.class;
 17     }
 18 
 19     public SummaryOfInjectionsResource(@QueryParam("query") String constructorQueryParam) {
 20         // injection into a constructor parameter
 21     }
 22 
 23 
 24     @Context
 25     public void setRequest(Request request) {
 26         // injection into a setter method
 27         System.out.println(request != null);
 28     }
 29 }
 30 
 31 public static class SubResource {
 32     @GET
 33     public String get() {
 34         return "sub resource";
 35     }
 36 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/FormParam.html)"><fo:inline>@FormParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/FormParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/FormParam.html</fo:basic-link>]</fo:inline> annotation is special and may only be utilized on resource and sub-resource methods.
            This is because it extracts information from a request entity.
        </fo:block></fo:block><fo:block id="d0e2867"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Use of @Context</fo:marker><fo:block font-size="20.735999999999997pt">3.6. Use of @Context</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Previous sections have introduced the use of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html)"><fo:inline>@Context</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html</fo:basic-link>]</fo:inline>. Chapter "Context" in the JAX-RS
            specification presents all the standard JAX-RS Java types that may be used with <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html)"><fo:inline>@Context</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html</fo:basic-link>]</fo:inline>.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">When deploying a JAX-RS application using servlet then
            <fo:basic-link external-destination="url(http://docs.oracle.com/javaee/5/api/javax/servlet/ServletConfig.html)"><fo:inline>ServletConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javaee/5/api/javax/servlet/ServletConfig.html)">http://docs.oracle.com/javaee/5/api/javax/servlet/ServletConfig.html</fo:basic-link>]</fo:inline>,
            <fo:basic-link external-destination="url(http://docs.oracle.com/javaee/5/api/javax/servlet/ServletContext.html)"><fo:inline>ServletContext</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javaee/5/api/javax/servlet/ServletContext.html)">http://docs.oracle.com/javaee/5/api/javax/servlet/ServletContext.html</fo:basic-link>]</fo:inline>,
            <fo:basic-link external-destination="url(http://docs.oracle.com/javaee/5/api/javax/servlet/http/HttpServletRequest.html)"><fo:inline>HttpServletRequest</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javaee/5/api/javax/servlet/http/HttpServletRequest.html)">http://docs.oracle.com/javaee/5/api/javax/servlet/http/HttpServletRequest.html</fo:basic-link>]</fo:inline>
            and
            <fo:basic-link external-destination="url(http://docs.oracle.com/javaee/5/api/javax/servlet/http/HttpServletResponse.html)"><fo:inline>HttpServletResponse</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javaee/5/api/javax/servlet/http/HttpServletResponse.html)">http://docs.oracle.com/javaee/5/api/javax/servlet/http/HttpServletResponse.html</fo:basic-link>]</fo:inline>
            are available using <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html)"><fo:inline>@Context</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html</fo:basic-link>]</fo:inline>.
        </fo:block></fo:block><fo:block id="d0e2895"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Programmatic resource model</fo:marker><fo:block font-size="20.735999999999997pt">3.7. Programmatic resource model</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Resources can be constructed from classes or instances but also can be constructed from a programmatic resource
            model. Every resource created from resource classes can also
            be constructed using the programmatic resource builder api. See <fo:basic-link internal-destination="resource-builder"><fo:inline>resource builder section</fo:inline></fo:basic-link> for more information.
        </fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Application Deployment and Runtime Environments</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Application Deployment and Runtime Environments</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="deployment"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 4. Application Deployment and Runtime Environments</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="deployment.intro"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Introduction</fo:marker><fo:block font-size="20.735999999999997pt">4.1. Introduction</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            This chapter is an overview of various server-side environments currently capable of running JAX-RS applications
            on top of Jersey server runtime. Jersey supports wide range of server environments from lightweight http containers
            up to full-fledged Java EE servers. Jersey applications can also run in an OSGi runtime.
            The way how the application is published depends on whether the application shall run in a Java SE environment or
            within a container.
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e2912"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                This chapter is focused on server-side Jersey deployment models. The
                <fo:basic-link internal-destination="client"><fo:inline>Jersey client runtime</fo:inline></fo:basic-link> does
                not have any specific container requirements and runs in plain Java SE 6 or higher runtime.
            </fo:block></fo:block></fo:block></fo:block><fo:block id="environmenmt.appmodel"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">JAX-RS Application Model</fo:marker><fo:block font-size="20.735999999999997pt">4.2. JAX-RS Application Model</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            JAX-RS provides a deployment agnostic abstract class <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)"><fo:inline>Application</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html</fo:basic-link>]</fo:inline>
            for declaring root resource and provider classes, and root resource and provider singleton instances.
            A Web service may extend this class to declare root resource and provider classes. For example,
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2926"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4.1. Deployment agnostic application model</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2929">  1 public class MyApplication extends Application {
  2     @Override
  3     public Set&lt;Class&lt;?&gt;&gt; getClasses() {
  4         Set&lt;Class&lt;?&gt;&gt; s = new HashSet&lt;Class&lt;?&gt;&gt;();
  5         s.add(HelloWorldResource.class);
  6         return s;
  7     }
  8 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Alternatively it is possible to reuse <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)"><fo:inline>ResourceConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html</fo:basic-link>]</fo:inline> - Jersey's own implementations
            of <fo:inline font-family="monospace">Application</fo:inline> class. This class can either be directly instantiated and then configured
            or it can be extended and the configuration code placed into the constructor of the extending class. The
            approach typically depends on the chosen deployment runtime.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Compared to <fo:inline font-family="monospace">Application</fo:inline>, the <fo:inline font-family="monospace">ResourceConfig</fo:inline> provides advanced capabilities
            to simplify registration of JAX-RS components, such as scanning for root resource and provider classes in a provided
            classpath or a in a set of package names etc. All JAX-RS component classes that are either manually registered or
            found during scanning are automatically added to the set of classes that are returned by
            <fo:inline font-family="monospace">getClasses</fo:inline>. For example, the following application class that extends from
            <fo:inline font-family="monospace">ResourceConfig</fo:inline> scans during deployment for JAX-RS components in packages
            <fo:inline font-family="monospace">org.foo.rest</fo:inline> and <fo:inline font-family="monospace">org.bar.rest</fo:inline>:
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e2960"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    <fo:inline font-style="italic">Package scanning</fo:inline> ignores an inheritance and therefore <fo:inline font-family="monospace">@Path</fo:inline> annotation
                    on parent classes and interfaces will be ignored. These classes won't be registered as the JAX-RS component
                    classes.
                </fo:block></fo:block></fo:block>
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e2970"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4.2. Reusing Jersey implementation in your custom application model</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e2973">  1 public class MyApplication extends ResourceConfig {
  2     public MyApplication() {
  3         packages("org.foo.rest;org.bar.rest");
  4     }
  5 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e2976"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Later in this chapter, the term <fo:inline font-style="italic"><fo:inline font-family="monospace">Application</fo:inline> subclass</fo:inline> is frequently used.
                Whenever used, this term refers to the JAX-RS Application Model explained above.
            </fo:block></fo:block></fo:block></fo:block><fo:block id="deployment.autodiscoverable"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Auto-Discoverable Features</fo:marker><fo:block font-size="20.735999999999997pt">4.3. Auto-Discoverable Features</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            By default Jersey 2.x does not implicitly register any extension features from the modules available on the
            classpath, unless explicitly stated otherwise in the documentation of each particular extension.
            Users are expected to explicitly register the extension <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Feature.html)"><fo:inline>Feature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Feature.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Feature.html</fo:basic-link>]</fo:inline>s using their
            <fo:inline font-family="monospace">Application</fo:inline> subclass.
            For a few Jersey provided modules however there is no need to explicitly register their extension
            <fo:inline font-family="monospace">Feature</fo:inline>s as these are discovered and registered in the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configuration.html)"><fo:inline>Configuration</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configuration.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configuration.html</fo:basic-link>]</fo:inline> (on client/server)
            automatically by Jersey runtime whenever the modules implementing these features are present on the classpath
            of the deployed JAX-RS application. The modules that are automatically discovered include:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e3001"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3002"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>JSON binding feature from <fo:inline font-family="monospace">jersey-media-moxy</fo:inline></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3007"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-family="monospace">jersey-media-json-processing</fo:inline></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3011"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-family="monospace">jersey-bean-validation</fo:inline></fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Besides these modules there are also few features/providers present in <fo:inline font-family="monospace">jersey-server</fo:inline> module that
            are discovered by this mechanism and their availability is affected by Jersey auto-discovery support configuration
            (see <fo:basic-link internal-destination="deployment.autodiscovery.config"><fo:inline>Section 4.3.1, “Configuring Feature Auto-discovery Mechanism”</fo:inline></fo:basic-link>), namely:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e3023"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3024"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/wadl/WadlFeature.html)"><fo:inline>WadlFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/wadl/WadlFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/wadl/WadlFeature.html</fo:basic-link>]</fo:inline> - enables WADL processing.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3029"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/filter/UriConnegFilter.html)"><fo:inline>UriConnegFilter</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/filter/UriConnegFilter.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/filter/UriConnegFilter.html</fo:basic-link>]</fo:inline> - a URI-based content negotiation filter.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

            Almost all Jersey auto-discovery implementations have <fo:inline font-family="monospace">AutoDiscoverable.DEFAULT_PRIORITY</fo:inline>
            <fo:inline font-family="monospace">@Priority</fo:inline> set.
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e3041"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Auto discovery functionality is in Jersey supported by implementing an internal
                <fo:inline font-family="monospace">AutoDiscoverable</fo:inline> Jersey SPI. This interface is not public at the moment,
                and is subject to change in the future, so be careful when trying to use it.
            </fo:block></fo:block></fo:block><fo:block id="deployment.autodiscovery.config"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Configuring Feature Auto-discovery Mechanism</fo:marker><fo:block font-size="17.28pt">4.3.1. Configuring Feature Auto-discovery Mechanism</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The mechanism of feature auto-discovery in Jersey that described above is enabled by default. It can be
                disabled by using special (common/server/client) properties:

                <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Common auto discovery properties</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e3052"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3055"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE)"><fo:inline>CommonProperties.FEATURE_AUTO_DISCOVERY_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE</fo:basic-link>]</fo:inline></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">When set, disables auto discovery globally on client/server.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3061"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#JSON_PROCESSING_FEATURE_DISABLE)"><fo:inline>CommonProperties.JSON_PROCESSING_FEATURE_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#JSON_PROCESSING_FEATURE_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#JSON_PROCESSING_FEATURE_DISABLE</fo:basic-link>]</fo:inline></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">When set, disables configuration of Json Processing (JSR-353) feature.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3067"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#MOXY_JSON_FEATURE_DISABLE)"><fo:inline>CommonProperties.MOXY_JSON_FEATURE_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#MOXY_JSON_FEATURE_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#MOXY_JSON_FEATURE_DISABLE</fo:basic-link>]</fo:inline></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">When set, disables configuration of MOXy Json feature.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

                For each of these properties there is a client/server counter-part that is only honored by the Jersey
                client or server runtime respectively (see <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html)"><fo:inline>ClientProperties</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html</fo:basic-link>]</fo:inline>/<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html)"><fo:inline>ServerProperties</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html</fo:basic-link>]</fo:inline>).
                When set, each of these client/server specific auto-discovery related properties overrides the value of the
                related common property.
            </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e3080"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    In case an auto-discoverable mechanism (in general or for a specific feature) is disabled, then all the
                    features, components and/or properties, registered by default using the auto-discovery mechanism have
                    to be registered manually.
                </fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="deployment.classpath-scanning"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Configuring the Classpath Scanning</fo:marker><fo:block font-size="20.735999999999997pt">4.4. Configuring the Classpath Scanning</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Jersey uses a common Java Service Provider mechanism to obtain all service implementations. It means that Jersey
            scans the whole class path to find appropriate <fo:inline font-family="monospace">META-INF/services/</fo:inline> files. The class path scanning
            may be time consuming. The more jar or war files on the classpath the longer the scanning time.
            In use cases where you need to save every millisecond of application bootstrap time,
            you may typically want to disable the services provider lookup in Jersey.

            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">List of SPIs recognized by Jersey</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e3091"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3094"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-family="monospace">AutoDiscoverable</fo:inline> (server, client) -
                        it means if you disable service loading the AutoDiscoverable feature is automatically disabled too</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3099"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-family="monospace">ForcedAutoDiscoverable</fo:inline> (server, client) -
                        Jersey always looks for these auto discoverable features even if the service loading is disabled</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3104"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-family="monospace">HeaderDelegateProvider</fo:inline> (server, client)</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3109"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-family="monospace">ComponentProvider</fo:inline> (server)</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3114"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-family="monospace">ContainerProvider</fo:inline> (server)</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3119"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-family="monospace">AsyncContextDelegateProvider</fo:inline> (server/Servlet)</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">List of additional SPIs recognized by Jersey in case the <fo:inline font-family="monospace">metainf-services</fo:inline> module is on the classpath</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e3125"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3131"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-family="monospace">MessageBodyReader</fo:inline> (server, client)</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3136"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-family="monospace">MessageBodyWriter</fo:inline> (server, client)</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3141"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-family="monospace">ExceptionMapper</fo:inline> (server, client)</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

            Since it is possible to configure all SPI implementation classes or instances manually in your
            <fo:inline font-family="monospace">Application</fo:inline> subclass, disabling services lookup in Jersey does not affect any
            functionality of Jersey core modules and extensions and can save dozens of ms during application
            initialization in exchange for a more verbose application configuration code.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The services lookup in Jersey (enabled by default) can be disabled via a dedicated
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#METAINF_SERVICES_LOOKUP_DISABLE)"><fo:inline>CommonProperties.METAINF_SERVICES_LOOKUP_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#METAINF_SERVICES_LOOKUP_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#METAINF_SERVICES_LOOKUP_DISABLE</fo:basic-link>]</fo:inline> property.
            There is a client/server counter-part that only disables the feature on the client or server respectively:
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#METAINF_SERVICES_LOOKUP_DISABLE)"><fo:inline>ClientProperties.METAINF_SERVICES_LOOKUP_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#METAINF_SERVICES_LOOKUP_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#METAINF_SERVICES_LOOKUP_DISABLE</fo:basic-link>]</fo:inline>/<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#METAINF_SERVICES_LOOKUP_DISABLE)"><fo:inline>ServerProperties.METAINF_SERVICES_LOOKUP_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#METAINF_SERVICES_LOOKUP_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#METAINF_SERVICES_LOOKUP_DISABLE</fo:basic-link>]</fo:inline>.
            As in all other cases, the client/server specific properties overrides the value of the related common property,
            when set.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            For example, following code snippet disables service provider lookup and manually registers implementations
            of different JAX-RS and Jersey provider types
            (<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerRequestFilter.html)"><fo:inline>ContainerRequestFilter</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerRequestFilter.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerRequestFilter.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Feature.html)"><fo:inline>Feature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Feature.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Feature.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ComponentProvider.html)"><fo:inline>ComponentProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ComponentProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ComponentProvider.html</fo:basic-link>]</fo:inline>
            and <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ContainerProvider.html)"><fo:inline>ContainerProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ContainerProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ContainerProvider.html</fo:basic-link>]</fo:inline>):
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e3175"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4.3. Registering SPI implementations using ResourceConfig</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3178">  1 ResourceConfig resourceConfig = new ResourceConfig(MyResource.class);
  2 resourceConfig.register(org.glassfish.jersey.server.filter.UriConnegFilter.class);
  3 resourceConfig.register(org.glassfish.jersey.server.validation.ValidationFeature.class);
  4 resourceConfig.register(org.glassfish.jersey.server.spring.SpringComponentProvider.class);
  5 resourceConfig.register(org.glassfish.jersey.grizzly2.httpserver.GrizzlyHttpContainerProvider.class);
  6 resourceConfig.property(ServerProperties.METAINF_SERVICES_LOOKUP_DISABLE, true);</fo:block></fo:block></fo:block>

            Similarly, in scenarios where the deployment model requires extending the <fo:inline font-family="monospace">Application</fo:inline> subclass
            (e.g. in all Servlet container deployments), the following code could be used to achieve the same application
            configuration:

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e3184"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4.4. Registering SPI implementations using <fo:inline font-family="monospace">ResourceConfig</fo:inline> subclass</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3190">  1 public class MyApplication extends ResourceConfig {
  2     public MyApplication() {
  3         register(org.glassfish.jersey.server.filter.UriConnegFilter.class);
  4         register(org.glassfish.jersey.server.validation.ValidationFeature.class);
  5         register(org.glassfish.jersey.server.spring.SpringComponentProvider.class);
  6         register(org.glassfish.jersey.grizzly2.httpserver.GrizzlyHttpContainerProvider.class);
  7         property(ServerProperties.METAINF_SERVICES_LOOKUP_DISABLE, true);
  8     }
  9 }</fo:block></fo:block></fo:block>
        </fo:block></fo:block><fo:block id="deployment.javase"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Java SE Deployment Environments</fo:marker><fo:block font-size="20.735999999999997pt">4.5. Java SE Deployment Environments</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="deployment.http"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">HTTP servers</fo:marker><fo:block font-size="17.28pt">4.5.1. HTTP servers</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Java based HTTP servers represent a minimalistic and flexible way of deploying Jersey application.
                The HTTP servers are usually embedded in the application and configured and started programmatically.
                In general, Jersey container for a specific HTTP server provides a custom factory method that returns
                a correctly initialized HTTP server instance.
            </fo:block><fo:block id="deployment.http.jdk"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">4.5.1.1. JDK Http Server</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Starting with Java SE 6, Java runtime ships with a built-in lightweight HTTP server. Jersey offers
                    integration with this Java SE HTTP server through the <fo:inline font-family="monospace">jersey-container-jdk-http</fo:inline>
                    container extension module.
                    Instead of creating the <fo:inline font-family="monospace"><fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/jre/api/net/httpserver/spec/com/sun/net/httpserver/HttpServer.html)"><fo:inline>HttpServer</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/jre/api/net/httpserver/spec/com/sun/net/httpserver/HttpServer.html)">http://docs.oracle.com/javase/6/docs/jre/api/net/httpserver/spec/com/sun/net/httpserver/HttpServer.html</fo:basic-link>]</fo:inline></fo:inline> instance directly, use the
                    <fo:inline font-family="monospace">createHttpServer()</fo:inline> method of <fo:inline font-family="monospace"><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jdkhttp/JdkHttpServerFactory.html)"><fo:inline>JdkHttpServerFactory</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jdkhttp/JdkHttpServerFactory.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jdkhttp/JdkHttpServerFactory.html</fo:basic-link>]</fo:inline></fo:inline>,
                    which creates the <fo:inline font-family="monospace">HttpServer</fo:inline> instance configured as a Jersey container and
                    initialized with the supplied <fo:inline font-family="monospace">Application</fo:inline> subclass.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Creating new Jersey-enabled jdk http server is as easy as:

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e3228"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4.5. Using Jersey with JDK HTTP Server</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3231">  1  URI baseUri = UriBuilder.fromUri("http://localhost/").port(9998).build();
  2 ResourceConfig config = new ResourceConfig(MyResource.class);
  3 HttpServer server = JdkHttpServerFactory.createHttpServer(baseUri, config);</fo:block>

                        A JDK HTTP Container dependency needs to be added:

                        <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3234">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.containers&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-container-jdk-http&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block></fo:block></fo:block>
                </fo:block></fo:block><fo:block id="deployment.http.grizzly"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">4.5.1.2. Grizzly HTTP Server</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:basic-link external-destination="url(http://grizzly.java.net/)"><fo:inline>Grizzly</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://grizzly.java.net/)">http://grizzly.java.net/</fo:basic-link>]</fo:inline> is a multi-protocol framework built on top of Java <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/nio/package-summary.html)"><fo:inline>NIO</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/nio/package-summary.html)">http://docs.oracle.com/javase/6/docs/api/java/nio/package-summary.html</fo:basic-link>]</fo:inline>. Grizzly aims to simplify
                    development of robust and scalable servers.
                    Jersey provides a container extension module that enables support for using Grizzly as a plain vanilla
                    HTTP container that runs JAX-RS applications. Starting a Grizzly server to run
                    a JAX-RS or Jersey application is one of the most lightweight and easy ways how to expose a functional
                    RESTful services application.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Grizzly HTTP container supports injection of Grizzly-specific
                    <fo:inline font-family="monospace">org.glassfish.grizzly.http.server.Request</fo:inline> and
                    <fo:inline font-family="monospace">org.glassfish.grizzly.http.server.Response</fo:inline> instances into JAX-RS and Jersey
                    application resources and providers. However, since Grizzly <fo:inline font-family="monospace">Request</fo:inline> is not proxiable,
                    the injection of Grizzly <fo:inline font-family="monospace">Request</fo:inline> into singleton (by default) JAX-RS / Jersey providers
                    is only possible via <fo:inline font-family="monospace">javax.inject.Provider</fo:inline> instance. (Grizzly <fo:inline font-family="monospace">Response</fo:inline>
                    does not suffer the same restriction.)
                </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e3267"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4.6. Using Jersey with Grizzly HTTP Server</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3270">  1 URI baseUri = UriBuilder.fromUri("http://localhost/").port(9998).build();
  2     ResourceConfig config = new ResourceConfig(MyResource.class);
  3     HttpServer server = GrizzlyHttpServerFactory.createHttpServer(baseUri, config);</fo:block>

                    The container extension module dependency to be added is:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3273">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.containers&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-container-grizzly2-http&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block></fo:block></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e3275"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        Jersey uses Grizzly extensively in the project unit and end-to-end tests via
                        <fo:basic-link internal-destination="test-framework"><fo:inline>test framework</fo:inline></fo:basic-link>.
                    </fo:block></fo:block></fo:block></fo:block><fo:block id="deployment.http.simple"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">4.5.1.3. Simple server</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    <fo:basic-link external-destination="url(http://www.simpleframework.org/)"><fo:inline>Simple</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://www.simpleframework.org/)">http://www.simpleframework.org/</fo:basic-link>]</fo:inline> is a framework which allows developers
                    to create a HTTP server instance and embed it within
                    an application. Again, creating the server instance is achieved by calling a factory method from the
                    <fo:inline font-family="monospace">jersey-container-simple-http</fo:inline> container extension module.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Simple framework HTTP container supports injection of Simple framework-specific
                    <fo:inline font-family="monospace">org.simpleframework.http.Request</fo:inline> and
                    <fo:inline font-family="monospace">org.simpleframework.http.Response</fo:inline> instances into JAX-RS and Jersey
                    application resources and providers.
                </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e3300"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4.7. Using Jersey with the Simple framework</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3303">  1 URI baseUri = UriBuilder.fromUri("http://localhost/").port(9998).build();
  2     ResourceConfig config = new ResourceConfig(MyResource.class);
  3     SimpleContainer server = SimpleContainerFactory.create(baseUri, config);</fo:block>

                    The necessary container extension module dependency in this case is:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3306">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.containers&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-container-simple-http&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block></fo:block></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e3308"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        Simple framework HTTP container does not support deployment on context paths other than
                        root path ("<fo:inline font-family="monospace">/</fo:inline>"). Non-root context path is ignored during deployment.
                    </fo:block></fo:block></fo:block></fo:block><fo:block id="deployment.http.jetty"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">4.5.1.4. Jetty HTTP Server</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Jetty is a popular Servlet container and HTTP server. We will not look into Jetty's capabilities as a
                    Servlet container (although we are using it in our tests and examples), because there is nothing specific
                    to Jetty when using a Servlet-based deployment model, which is extensively described later in our
                    <fo:basic-link internal-destination="deployment.servlet"><fo:inline>Section 4.7, “Servlet-based Deployment”</fo:inline></fo:basic-link> section. We will here only focus on describing how to use
                    Jetty's HTTP server.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Jetty HTTP container supports injection of Jetty-specific
                    <fo:inline font-family="monospace">org.eclipse.jetty.server.Request</fo:inline> and
                    <fo:inline font-family="monospace">org.eclipse.jetty.server.Response</fo:inline> instances into JAX-RS and Jersey
                    application resources and providers. However, since Jetty HTTP <fo:inline font-family="monospace">Request</fo:inline> is not proxiable,
                    the injection of Jetty <fo:inline font-family="monospace">Request</fo:inline> into singleton (by default) JAX-RS / Jersey providers
                    is only possible via <fo:inline font-family="monospace">javax.inject.Provider</fo:inline> instance. (Jetty <fo:inline font-family="monospace">Response</fo:inline>
                    does not suffer the same restriction.)
                </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e3341"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4.8. Using Jersey with Jetty HTTP Server</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3344">  1 URI baseUri = UriBuilder.fromUri("http://localhost/").port(9998).build();
  2 ResourceConfig config = new ResourceConfig(MyResource.class);
  3 Server server = JettyHttpContainerFactory.createServer(baseUri, config);</fo:block>

                    And, of course, we add the necessary container extension module dependency:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3347">  1 &lt;dependency&gt;
  2     &lt;groupId&gt;org.glassfish.jersey.containers&lt;/groupId&gt;
  3     &lt;artifactId&gt;jersey-container-jetty-http&lt;/artifactId&gt;
  4     &lt;version&gt;2.28&lt;/version&gt;
  5 &lt;/dependency&gt;</fo:block></fo:block></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e3349"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        Jetty HTTP container does not support deployment on context paths other than
                        root path ("<fo:inline font-family="monospace">/</fo:inline>"). Non-root context path is ignored during deployment.
                    </fo:block></fo:block></fo:block></fo:block><fo:block id="deployment.http.netty"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">4.5.1.5. Netty HTTP Server</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Netty is a NIO client server framework which enables quick and easy development of network
                    applications such as protocol servers and clients. Jersey supports Netty as a container and
                    as a client connector - this chapter will present how to use the container.
                </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e3360"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4.9. Using Jersey with Netty HTTP Server</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3363">  1 URI baseUri = UriBuilder.fromUri("http://localhost/").port(9998).build();
  2 ResourceConfig resourceConfig = new ResourceConfig(HelloWorldResource.class);
  3 Channel server = NettyHttpContainerProvider.createServer(baseUri, resourceConfig, false);</fo:block>

                    And, of course, we add the necessary container extension module dependency:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3366">  1 &lt;dependency&gt;
  2     &lt;groupId&gt;org.glassfish.jersey.containers&lt;/groupId&gt;
  3     &lt;artifactId&gt;jersey-container-netty-http&lt;/artifactId&gt;
  4     &lt;version&gt;2.28&lt;/version&gt;
  5 &lt;/dependency&gt;</fo:block></fo:block></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e3368"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        Netty HTTP container does not support deployment on context paths other than
                        root path ("<fo:inline font-family="monospace">/</fo:inline>"). Non-root context path is ignored during deployment.
                    </fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="deployment.jaxrs.endpoint"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Creating programmatic JAX-RS endpoint</fo:marker><fo:block font-size="20.735999999999997pt">4.6. Creating programmatic JAX-RS endpoint</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            JAX-RS specification also defines the ability to programmatically create a JAX-RS application endpoint
            (i.e. container) for any instance of a <fo:inline font-family="monospace">Application</fo:inline> subclass. For example, Jersey supports
            creation of <fo:basic-link external-destination="url(http://grizzly.java.net/)"><fo:inline>Grizzly</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://grizzly.java.net/)">http://grizzly.java.net/</fo:basic-link>]</fo:inline> <fo:inline font-family="monospace">HttpHandler</fo:inline> instance
            as follows:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3388">HttpHandler endpoint = RuntimeDelegate.getInstance()
        .createEndpoint(new MyApplication(), HttpHandler.class);</fo:block>

            Once the Grizzly <fo:inline font-family="monospace">HttpHandler</fo:inline> endpoint is created, it can be used for in-process deployment
            to a specific base URL.
        </fo:block></fo:block><fo:block id="deployment.servlet"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Servlet-based Deployment</fo:marker><fo:block font-size="20.735999999999997pt">4.7. Servlet-based Deployment</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In a Servlet container, JAX-RS defines multiple deployment options depending on the Servlet API version supported by
            the Servlet container. Following sections describe these options in detail.
        </fo:block><fo:block id="deployment.servlet.2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Servlet 2.x Container</fo:marker><fo:block font-size="17.28pt">4.7.1. Servlet 2.x Container</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Jersey integrates with any Servlet containers supporting at least Servlet 2.5 specification. Running on a
                Servlet container that supports Servlet API 3.0 or later gives you the advantage of wider feature set
                (especially asynchronous request processing support) and easier and more flexible deployment options.
                In this section we will focus on the basic deployment models available in any Servlet 2.5 or higher container.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                In Servlet 2.5 environment, you have to explicitly declare the Jersey container Servlet in your Web application's
                <fo:inline font-family="monospace">web.xml</fo:inline> deployment descriptor file.

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e3409"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4.10. Hooking up Jersey as a Servlet</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3412">  1 &lt;web-app&gt;
  2     &lt;servlet&gt;
  3         &lt;servlet-name&gt;MyApplication&lt;/servlet-name&gt;
  4         &lt;servlet-class&gt;org.glassfish.jersey.servlet.ServletContainer&lt;/servlet-class&gt;
  5         &lt;init-param&gt;
  6             ...
  7         &lt;/init-param&gt;
  8     &lt;/servlet&gt;
  9     ...
 10     &lt;servlet-mapping&gt;
 11         &lt;servlet-name&gt;MyApplication&lt;/servlet-name&gt;
 12         &lt;url-pattern&gt;/myApp/*&lt;/url-pattern&gt;
 13     &lt;/servlet-mapping&gt;
 14     ...
 15 &lt;/web-app&gt;</fo:block></fo:block></fo:block>

                Alternatively, you can register Jersey container as a <fo:inline font-style="italic">filter</fo:inline>:

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e3418"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4.11. Hooking up Jersey as a Servlet Filter</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3421">  1 &lt;web-app&gt;
  2     &lt;filter&gt;
  3         &lt;filter-name&gt;MyApplication&lt;/filter-name&gt;
  4         &lt;filter-class&gt;org.glassfish.jersey.servlet.ServletContainer&lt;/filter-class&gt;
  5         &lt;init-param&gt;
  6             ...
  7         &lt;/init-param&gt;
  8     &lt;/filter&gt;
  9     ...
 10     &lt;filter-mapping&gt;
 11         &lt;filter-name&gt;MyApplication&lt;/filter-name&gt;
 12         &lt;url-pattern&gt;/myApp/*&lt;/url-pattern&gt;
 13     &lt;/filter-mapping&gt;
 14     ...
 15 &lt;/web-app&gt;</fo:block></fo:block></fo:block>
            </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e3424"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Important</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Servlet 2.x API does not provide a way how to programmatically read the filter mappings. To make application
                    deployed using filter work correctly, either Servlet 3.x container must be used
                    (<fo:inline font-family="monospace">jersey-container-servlet</fo:inline> instead of <fo:inline font-family="monospace">jersey-container-servlet-core</fo:inline>), or
                    the context path of the app needs to be defined using init parameter
                    <fo:inline font-family="monospace">jersey.config.servlet.filter.contextPath</fo:inline>.
                </fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The content of the <fo:inline font-family="monospace">&lt;init-param&gt;</fo:inline> element will vary depending on the way you decide to
                configure Jersey resources.
            </fo:block><fo:block id="deployment.servlet.2.application"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">4.7.1.1. Custom <fo:inline font-family="monospace">Application</fo:inline> subclass</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    If you extend the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)"><fo:inline>Application</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html</fo:basic-link>]</fo:inline> class to provide the list of relevant root resource
                    classes (<fo:inline font-family="monospace">getClasses()</fo:inline>) and singletons (<fo:inline font-family="monospace">getSingletons()</fo:inline>),
                    i.e. your JAX-RS application model, you then need to register it in your web application
                    <fo:inline font-family="monospace">web.xml</fo:inline> deployment descriptor using a Servlet or Servlet filter initialization
                    parameter with a name of  <fo:inline font-family="monospace">javax.ws.rs.Application</fo:inline> [<fo:inline font-style="italic">sic</fo:inline>] as follows:

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e3467"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4.12. 
                            Configuring Jersey container Servlet or Filter to use custom <fo:inline font-family="monospace">Application</fo:inline> subclass
                        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3473">  1 &lt;init-param&gt;
  2     &lt;param-name&gt;javax.ws.rs.Application&lt;/param-name&gt;
  3     &lt;param-value&gt;org.foo.MyApplication&lt;/param-value&gt;
  4 &lt;/init-param&gt;</fo:block></fo:block></fo:block>

                    Jersey will consider all the classes returned by <fo:inline font-family="monospace">getClasses()</fo:inline> and
                    <fo:inline font-family="monospace">getSingletons()</fo:inline> methods of your <fo:inline font-family="monospace">Application</fo:inline> implementation.
                </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e3485"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        The name of the configuration property as defined by JAX-RS specification is indeed
                        <fo:inline font-family="monospace">javax.ws.rs.Application</fo:inline> and not <fo:inline font-family="monospace">javax.ws.rs.core.Application</fo:inline>
                        as one might expect.
                    </fo:block></fo:block></fo:block></fo:block><fo:block id="deployment.servlet.2.package"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">4.7.1.2. Jersey package scanning</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    If there is no configuration properties to be set and deployed application consists only from resources
                    and providers stored in particular packages, you can instruct Jersey to scan these packages
                    and register any found resources and providers automatically:

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e3499"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4.13. Configuring Jersey container Servlet or Filter to use package scanning</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3502">  1 &lt;init-param&gt;
  2     &lt;param-name&gt;jersey.config.server.provider.packages&lt;/param-name&gt;
  3     &lt;param-value&gt;
  4         org.foo.myresources,org.bar.otherresources
  5     &lt;/param-value&gt;
  6 &lt;/init-param&gt;
  7 &lt;init-param&gt;
  8     &lt;param-name&gt;jersey.config.server.provider.scanning.recursive&lt;/param-name&gt;
  9     &lt;param-value&gt;false&lt;/param-value&gt;
 10 &lt;/init-param&gt;</fo:block></fo:block></fo:block>

                    Jersey will automatically discover the resources and providers in the selected packages.
                    You can also decide whether Jersey should recursively scan also sub-packages by setting the
                    <fo:inline font-family="monospace">jersey.config.server.provider.scanning.recursive</fo:inline> property.
                    The default value is <fo:inline font-family="monospace">true</fo:inline>, i.e. the recursive scanning of sub-packages is enabled.
                </fo:block></fo:block><fo:block id="deployment.servet.2.classes"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">4.7.1.3. Selecting concrete resource and provider classes</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    While the above-mentioned package scanning is useful esp. for development and testing, you may want to
                    have a little bit more control when it comes to production deployment in terms of being able to enumerate
                    specific resource and provider classes. In Jersey it is possible to achieve this even without a need to
                    implement a custom <fo:inline font-family="monospace">Application</fo:inline> subclass. The specific resource and provider
                    fully-qualified class names can be provided in a comma-separated value of
                    <fo:inline font-family="monospace">jersey.config.server.provider.classnames</fo:inline> initialization parameter.
                </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e3522"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4.14. Configuring Jersey container Servlet or Filter to use a list of classes</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3525">  1 &lt;init-param&gt;
  2     &lt;param-name&gt;jersey.config.server.provider.classnames&lt;/param-name&gt;
  3     &lt;param-value&gt;
  4         org.foo.myresources.MyDogResource,
  5         org.bar.otherresources.MyCatResource
  6     &lt;/param-value&gt;
  7 &lt;/init-param&gt;</fo:block></fo:block></fo:block></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e3527"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    All of the techniques that have been described in this section also apply to Servlet containers that
                    support Servlet API 3.0 and later specification. Newer Servlet specifications only give you additional
                    features, deployment options and more flexibility.
                </fo:block></fo:block></fo:block></fo:block><fo:block id="deployment.servlet.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Servlet 3.x Container</fo:marker><fo:block font-size="17.28pt">4.7.2. Servlet 3.x Container</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="deployment.servlet.3.no.descriptor"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">4.7.2.1. Descriptor-less deployment</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    There are multiple deployment options in the Servlet 3.0 container for a JAX-RS application defined
                    by implementing a custom <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)"><fo:inline>Application</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html</fo:basic-link>]</fo:inline> subclass. For simple deployments, no
                    <fo:inline font-family="monospace">web.xml</fo:inline> is necessary at all. Instead, an <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ApplicationPath.html)"><fo:inline>@ApplicationPath</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ApplicationPath.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ApplicationPath.html</fo:basic-link>]</fo:inline> annotation can be used
                    to annotate the custom <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)"><fo:inline>Application</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html</fo:basic-link>]</fo:inline> subclass and define the base application URI for all
                    JAX-RS resources configured in the application:

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e3550"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4.15. Deployment of a JAX-RS application using <fo:inline font-family="monospace">@ApplicationPath</fo:inline> with Servlet 3.0</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3556">  1 @ApplicationPath("resources")
  2 public class MyApplication extends ResourceConfig {
  3     public MyApplication() {
  4         packages("org.foo.rest;org.bar.rest");
  5     }
  6 }</fo:block></fo:block></fo:block>
                </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e3559"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        There are many other convenience methods in the <fo:inline font-family="monospace">ResourceConfig</fo:inline> that can be used
                        in the constructor of your custom subclass to configure your JAX-RS application,
                        see <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)"><fo:inline>ResourceConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html</fo:basic-link>]</fo:inline> API documentation for more details.
                    </fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    In case you are not providing <fo:inline font-family="monospace">web.xml</fo:inline> deployment descriptor for your maven-based web
                    application project, you need to configure your <fo:inline font-family="monospace">maven-war-plugin</fo:inline> to ignore the missing
                    <fo:inline font-family="monospace">web.xml</fo:inline> file by setting
                    <fo:basic-link external-destination="url(http://maven.apache.org/plugins/maven-war-plugin/war-mojo.html#failOnMissingWebXml)"><fo:inline>failOnMissingWebXml</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://maven.apache.org/plugins/maven-war-plugin/war-mojo.html#failOnMissingWebXml)">http://maven.apache.org/plugins/maven-war-plugin/war-mojo.html#failOnMissingWebXml</fo:basic-link>]</fo:inline>
                    configuration property to <fo:inline font-family="monospace">false</fo:inline> in your project <fo:inline font-family="monospace">pom.xml</fo:inline> file:

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e3588"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4.16. Configuration of maven-war-plugin to ignore missing <fo:inline font-family="monospace">web.xml</fo:inline></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3593">  1 &lt;plugins&gt;
  2     ...
  3     &lt;plugin&gt;
  4         &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
  5         &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;
  6         &lt;version&gt;2.3&lt;/version&gt;
  7         &lt;configuration&gt;
  8             &lt;failOnMissingWebXml&gt;false&lt;/failOnMissingWebXml&gt;
  9         &lt;/configuration&gt;
 10     &lt;/plugin&gt;
 11     ...
 12 &lt;/plugins&gt;</fo:block></fo:block></fo:block>
                </fo:block></fo:block><fo:block id="deployment.servlet.3.descriptor"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">4.7.2.2. Deployment using <fo:inline font-family="monospace">web.xml</fo:inline> descriptor</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Another Servlet 3.x container deployment model is to declare the JAX-RS application details in the
                    <fo:inline font-family="monospace">web.xml</fo:inline>.
                    This is typically suitable for more complex deployments, e.g. when security model needs to be
                    properly defined or when additional initialization parameters have to be passed to Jersey runtime.
                    JAX-RS 1.1 and later specifies that a fully qualified name of the class that implements
                    <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)"><fo:inline>Application</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html</fo:basic-link>]</fo:inline> may be used in the definition of a <fo:inline font-family="monospace">&lt;servlet-name&gt;</fo:inline>
                    element as part of your application's <fo:inline font-family="monospace">web.xml</fo:inline> deployment descriptor.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Following example illustrates this approach:

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e3618"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4.17. Deployment of a JAX-RS application using <fo:inline font-family="monospace">web.xml</fo:inline> with Servlet 3.0
                        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3624">  1 &lt;web-app&gt;
  2     &lt;servlet&gt;
  3         &lt;servlet-name&gt;org.foo.rest.MyApplication&lt;/servlet-name&gt;
  4     &lt;/servlet&gt;
  5     ...
  6     &lt;servlet-mapping&gt;
  7         &lt;servlet-name&gt;org.foo.rest.MyApplication&lt;/servlet-name&gt;
  8         &lt;url-pattern&gt;/resources&lt;/url-pattern&gt;
  9     &lt;/servlet-mapping&gt;
 10     ...
 11 &lt;/web-app&gt;</fo:block></fo:block></fo:block>

                    Note that the <fo:inline font-family="monospace">&lt;servlet-class&gt;</fo:inline> element is omitted from the Servlet declaration.
                    This is a correct declaration utilizing the Servlet 3.0 extension mechanism described in detail in the
                    <fo:basic-link internal-destination="deployment.servlet.3.pluggability"><fo:inline>Section 4.7.2.3, “Servlet Pluggability Mechanism”</fo:inline></fo:basic-link> section. Also note that
                    <fo:inline font-family="monospace">&lt;servlet-mapping&gt;</fo:inline> is used in the example to define the base resource URI.
                </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e3635"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Tip</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        When running in a Servlet 2.x it would instead be necessary to declare the Jersey container Servlet
                        or Filter and pass the <fo:inline font-family="monospace">Application</fo:inline> implementation class name as one of the
                        <fo:inline font-family="monospace">init-param</fo:inline> entries, as described in <fo:basic-link internal-destination="deployment.servlet.2"><fo:inline>Section 4.7.1, “Servlet 2.x Container”</fo:inline></fo:basic-link>.
                    </fo:block></fo:block></fo:block></fo:block><fo:block id="deployment.servlet.3.pluggability"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">4.7.2.3. Servlet Pluggability Mechanism</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Servlet framework pluggability mechanism is a feature introduced with Servlet 3.0 specification. It
                    simplifies the configuration of various frameworks built on top of Servlets. Instead of having one
                    <fo:inline font-family="monospace">web.xml</fo:inline> file working as a central point for all the configuration options, it is possible
                    to modularize the deployment descriptor by using the concept of so-called web fragments - several specific
                    and focused <fo:inline font-family="monospace">web.xml</fo:inline> files. A set of web fragments basically builds up the final
                    deployment descriptor. This mechanism also provides SPI hooks that enable web frameworks to register
                    themselves in the Servlet container or customize the Servlet container deployment process in some other way.
                    This section describes how JAX-RS and Jersey leverage the Servlet pluggability mechanism.
                </fo:block><fo:block id="deployment.servlet.3.pluggability.noapp"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="12pt">4.7.2.3.1. JAX-RS application without an <fo:inline font-family="monospace">Application</fo:inline> subclass</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>

                    If no <fo:inline font-family="monospace">Application</fo:inline> (or <fo:inline font-family="monospace">ResourceConfig</fo:inline>) subclass is present,
                    Jersey will dynamically add a Jersey container Servlet and set its name to
                    <fo:inline font-family="monospace">javax.ws.rs.core.Application</fo:inline>. The web application path will be scanned and all the
                    root resource classes (the classes annotated with <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)"><fo:inline>@Path</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html</fo:basic-link>]</fo:inline> annotation) as well as any providers that are
                    annotated with <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/Provider.html)"><fo:inline>@Provider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/Provider.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/Provider.html</fo:basic-link>]</fo:inline> annotation packaged with the application will be automatically registered
                    in the JAX-RS application. The web application has to be packaged with a deployment descriptor specifying
                    at least the mapping for the added <fo:inline font-family="monospace">javax.ws.rs.core.Application</fo:inline> Servlet:

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e3682"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4.18. 
                            <fo:inline font-family="monospace">web.xml</fo:inline> of a JAX-RS application without an <fo:inline font-family="monospace">Application</fo:inline> subclass
                        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3691">  1 &lt;web-app version="3.0"
  2     xmlns="http://java.sun.com/xml/ns/javaee"
  3     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
  4 
  5     &lt;!-- Servlet declaration can be omitted in which case
  6          it would be automatically added by Jersey --&gt;
  7     &lt;servlet&gt;
  8         &lt;servlet-name&gt;javax.ws.rs.core.Application&lt;/servlet-name&gt;
  9     &lt;/servlet&gt;
 10 
 11     &lt;servlet-mapping&gt;
 12         &lt;servlet-name&gt;javax.ws.rs.core.Application&lt;/servlet-name&gt;
 13         &lt;url-pattern&gt;/myresources/*&lt;/url-pattern&gt;
 14     &lt;/servlet-mapping&gt;
 15 &lt;/web-app&gt;</fo:block></fo:block></fo:block></fo:block><fo:block id="deployment.servlet.3.pluggability.app"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="12pt">4.7.2.3.2. JAX-RS application with a custom <fo:inline font-family="monospace">Application</fo:inline> subclass</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        When a custom <fo:inline font-family="monospace">Application</fo:inline> subclass is provided, in such case the Jersey server runtime
                        behavior depends od whether or not there is a Servlet defined to handle the application subclass.
                    </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        If the <fo:inline font-family="monospace">web.xml</fo:inline> contains a Servlet definition, that has an initialization parameter
                        <fo:inline font-family="monospace">javax.ws.rs.Application</fo:inline> whose value is the fully qualified name of the
                        <fo:inline font-family="monospace">Application</fo:inline> subclass, Jersey does not perform any additional steps in such case.
                    </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        If no such Servlet is defined to handle the custom <fo:inline font-family="monospace">Application</fo:inline> subclass, Jersey
                        dynamically adds a Servlet with a fully qualified name equal to the name of the provided
                        <fo:inline font-family="monospace">Application</fo:inline> subclass. To define the mapping for the added Servlet, you can either
                        annotate the custom <fo:inline font-family="monospace">Application</fo:inline> subclass with an <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ApplicationPath.html)"><fo:inline>@ApplicationPath</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ApplicationPath.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ApplicationPath.html</fo:basic-link>]</fo:inline> annotation
                        (Jersey will use the annotation value appended with <fo:inline font-family="monospace">/*</fo:inline> to automatically define
                        the mapping for the Servlet), or specify the mapping for the Servlet in the
                        <fo:inline font-family="monospace">web.xml</fo:inline> descriptor directly.
                    </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        In the following example, let's assume that the JAX-RS application is defined using a custom
                        <fo:inline font-family="monospace">Application</fo:inline> subclass named <fo:inline font-family="monospace">org.example.MyApplication</fo:inline>.
                        Then the <fo:inline font-family="monospace">web.xml</fo:inline> file could have the following structure:
                        <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e3746"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4.19. </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3747">  1 &lt;web-app version="3.0"
  2     xmlns="http://java.sun.com/xml/ns/javaee"
  3     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
  4 
  5     &lt;!-- Servlet declaration can be omitted in which case
  6          it would be automatically added by Jersey --&gt;
  7     &lt;servlet&gt;
  8         &lt;servlet-name&gt;org.example.MyApplication&lt;/servlet-name&gt;
  9     &lt;/servlet&gt;
 10 
 11     &lt;!-- Servlet mapping can be omitted in case the Application subclass
 12          is annotated with @ApplicationPath annotation; in such case
 13          the mapping would be automatically added by Jersey --&gt;
 14     &lt;servlet-mapping&gt;
 15         &lt;servlet-name&gt;org.example.MyApplication&lt;/servlet-name&gt;
 16         &lt;url-pattern&gt;/myresources/*&lt;/url-pattern&gt;
 17     &lt;/servlet-mapping&gt;
 18 &lt;/web-app&gt;</fo:block></fo:block></fo:block>
                    </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e3750"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            If your custom <fo:inline font-family="monospace">Application</fo:inline> subclass is packaged in the <fo:inline font-family="monospace">war</fo:inline>, it defines
                            which resources will be taken into account.
                            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e3759"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3760"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>
                                    If both <fo:inline font-family="monospace">getClasses()</fo:inline> and <fo:inline font-family="monospace">getSingletons()</fo:inline> methods return
                                    an empty collection, then ALL the root resource classes and providers packaged in the web
                                    application archive will be used, Jersey will automatically discover them by scanning the
                                    <fo:inline font-family="monospace">.war</fo:inline> file.
                                </fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e3771"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>
                                    If any of the two mentioned methods - <fo:inline font-family="monospace">getClasses()</fo:inline> or
                                    <fo:inline font-family="monospace">getSingletons()</fo:inline> returns a non-empty collection, only those classes and/or
                                    singletons will be published in the JAX-RS application.
                                </fo:block></fo:list-item-body></fo:list-item></fo:list-block>
                        </fo:block></fo:block></fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" start-indent="0pt"><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="environment-table-pluggability"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 4.1. Servlet 3 Pluggability Overview</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-start-style="solid" border-end-style="solid" border-top-style="solid" border-bottom-style="solid" border-start-width="0.5pt" border-end-width="0.5pt" border-top-width="0.5pt" border-bottom-width="0.5pt" border-start-color="black" border-end-color="black" border-top-color="black" border-bottom-color="black" width="auto"><fo:table-column column-number="1" column-width="25%"/><fo:table-column column-number="2" column-width="25%"/><fo:table-column column-number="3" column-width="25%"/><fo:table-column column-number="4" column-width="25%"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row keep-with-next.within-column="always"><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block font-weight="bold">Condition</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block font-weight="bold">Jersey action</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block font-weight="bold">Servlet Name</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block font-weight="bold"><fo:inline font-family="monospace">web.xml</fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>No <fo:inline font-family="monospace">Application</fo:inline> subclass</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>Adds Servlet</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block><fo:inline font-family="monospace">javax.ws.rs.core.Application</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Servlet mapping is required</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block><fo:inline font-family="monospace">Application</fo:inline> subclass handled by existing Servlet</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>No action</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>Already defined</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>Not required</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block><fo:inline font-family="monospace">Application</fo:inline> subclass NOT handled by existing Servlet</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>Adds Servlet</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>FQN of the <fo:inline font-family="monospace">Application</fo:inline> subclass</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>
                                        if no <fo:inline font-family="monospace">@ApplicationPath</fo:inline> on the <fo:inline font-family="monospace">Application</fo:inline>
                                        subclass, then Servlet mapping is required
                                    </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="deployment.servlet.containers"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Jersey Servlet container modules</fo:marker><fo:block font-size="17.28pt">4.7.3. Jersey Servlet container modules</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Jersey uses its own <fo:inline font-family="monospace"><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletContainer.html)"><fo:inline>ServletContainer</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletContainer.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletContainer.html</fo:basic-link>]</fo:inline></fo:inline> implementation of Servlet and
                Servlet Filter API to integrate with Servlet containers. As any JAX-RS runtime, Jersey provides support
                for Servlet containers that support Servlet specification version 2.5 and higher. To support JAX-RS 2.0
                asynchronous resources on top of a Servlet container, support for Servlet specification version 3.0 or higher
                is required.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                When deploying to a Servlet container, Jersey application is typically packaged as a <fo:inline font-family="monospace">.war</fo:inline> file.
                As with any other Servlet application, JAX-RS application classes are packaged in
                <fo:inline font-family="monospace">WEB-INF/classes</fo:inline> or <fo:inline font-family="monospace">WEB-INF/lib</fo:inline> and required application libraries are
                located in <fo:inline font-family="monospace">WEB-INF/lib</fo:inline>.
                For more details, please refer to the Servlet Specification (<fo:basic-link external-destination="url(http://jcp.org/en/jsr/detail?id=315)"><fo:inline>JSR 315</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://jcp.org/en/jsr/detail?id=315)">http://jcp.org/en/jsr/detail?id=315</fo:basic-link>]</fo:inline>).
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Jersey provides two Servlet modules. The first module is the Jersey core Servlet module that provides
                the core Servlet integration support and is required in any Servlet 2.5 or higher container:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3868">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.containers&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-container-servlet-core&lt;/artifactId&gt;
&lt;/dependency&gt;</fo:block>

                To support additional Servlet 3.x deployment modes and asynchronous JAX-RS resource programming model,
                an additional Jersey module is required:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3871">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.containers&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-container-servlet&lt;/artifactId&gt;
&lt;/dependency&gt;</fo:block>

                The <fo:inline font-family="monospace">jersey-container-servlet</fo:inline> module depends on
                <fo:inline font-family="monospace">jersey-container-servlet-core</fo:inline> module, therefore when it is used, it is not necessary to
                explicitly declare the <fo:inline font-family="monospace">jersey-container-servlet-core</fo:inline> dependency.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Note that in simple cases, you don't need to provide the deployment descriptor (<fo:inline font-family="monospace">web.xml</fo:inline>)
                and can use the <fo:inline font-family="monospace">@ApplicationPath</fo:inline> annotation, as described in
                <fo:basic-link internal-destination="deployment.servlet.3.pluggability.noapp"><fo:inline>Section 4.7.2.3.1, “JAX-RS application without an <fo:inline font-family="monospace">Application</fo:inline> subclass”</fo:inline></fo:basic-link> section.
            </fo:block></fo:block></fo:block><fo:block id="deployment.javaee"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Java EE Platform</fo:marker><fo:block font-size="20.735999999999997pt">4.8. Java EE Platform</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            This section describes, how you can publish Jersey JAX-RS resources as various Java EE platform elements.
            JAX-RS and Jersey give you wide choice of possibilities and it is up to your taste (and design of your application),
            what Java EE technology you decide to use for the management of your resources.
        </fo:block><fo:block id="deployment.javaee.managed"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Managed Beans</fo:marker><fo:block font-size="17.28pt">4.8.1. Managed Beans</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Jersey supports the use of Java EE Managed beans as root resource classes, providers as well as
                <fo:inline font-family="monospace">Application</fo:inline> subclasses.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                In the code below, you can find an example of a bean, that uses a managed-bean interceptor defined as a JAX-RS
                bean. The bean is used to intercept calls to the resource method <fo:inline font-family="monospace">getIt()</fo:inline>:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3911">  1 @ManagedBean
  2 @Path("/managedbean")
  3 public class ManagedBeanResource {
  4 
  5     public static class MyInterceptor {
  6         @AroundInvoke
  7         public String around(InvocationContext ctx) throws Exception {
  8             System.out.println("around() called");
  9             return (String) ctx.proceed();
 10         }
 11     }
 12 
 13     @GET
 14     @Produces("text/plain")
 15     @Interceptors(MyInterceptor.class)
 16     public String getIt() {
 17         return "Hi managed bean!";
 18     }
 19 }</fo:block>
            </fo:block></fo:block><fo:block id="deployment.javaee.cdi"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Context and Dependency Injection (CDI)</fo:marker><fo:block font-size="17.28pt">4.8.2. Context and Dependency Injection (CDI)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                CDI beans can be used as Jersey root resource classes, providers as well as <fo:inline font-family="monospace">Application</fo:inline>
                subclasses. Providers and <fo:inline font-family="monospace">Application</fo:inline> subclasses have to be singleton or application scoped.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The next example shows a usage of a CDI bean as a JAX-RS root resource class. We assume, that CDI has been
                enabled. The code snipped uses the type-safe dependency injection provided in CDI by using another bean
                (<fo:inline font-family="monospace">MyOtherCdiBean</fo:inline>):

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3930">  1 @Path("/cdibean")
  2 public class CdiBeanResource {
  3     @Inject MyOtherCdiBean bean;  // CDI injected bean
  4 
  5     @GET
  6     @Produces("text/plain")
  7     public String getIt() {
  8         return bean.getIt();
  9     }
 10 }</fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
              The above works naturally inside any Java EE compliant AS container. In Jersey version 2.15, container agnostic CDI support was introduced.
              This feature allows you to publish CDI based JAX-RS resources also in other containers. Jersey cdi-webapp example shows Jersey/CDI integration
              in Grizzly HTTP and Apache Tomcat server. Detailed description of Jersey CDI support outside of a fully fledged Java EE application container
              could be found in <fo:basic-link internal-destination="cdi.support"><fo:inline>Chapter 24, <fo:inline font-style="italic">Jersey CDI Container Agnostic Support</fo:inline></fo:inline></fo:basic-link>.
            </fo:block></fo:block><fo:block id="deployment.javaee.ejb"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Enterprise Java Beans (EJB)</fo:marker><fo:block font-size="17.28pt">4.8.3. Enterprise Java Beans (EJB)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Stateless and Singleton Session beans can be used as Jersey root resource classes, providers and/or
                <fo:inline font-family="monospace">Application</fo:inline> subclasses. You can choose from annotating the methods in the EJB's local
                interface or directly the method in an interface-less EJB POJO. JAX-RS specifications requires its
                implementors to discover EJBs by inspecting annotations on classes (or local interfaces),
                but not in the deployment descriptors (<fo:inline font-family="monospace">ejb-jar.xml</fo:inline>). As such, to keep your JAX-RS
                application portable, do not override EJB annotations or provide any additional meta-data in the deployment
                descriptor file.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Following example consists of a stateless EJB and a local interface used in Jersey:
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e3950">  1 @Local
  2 public interface LocalEjb {
  3     @GET
  4     @Produces("text/plain")
  5    public String getIt();
  6 }
  7 
  8 @Stateless
  9 @Path("/stateless")
 10 public class StatelessEjbResource implements LocalEjb {
 11     @Override
 12     public String getIt() {
 13         return "Hi Stateless!";
 14     }
 15 }</fo:block>
            </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e3953"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Please note that Jersey currently does not support deployment of JAX-RS applications packaged as standalone
                    EJB modules (ejb-jars). To use EJBs as JAX-RS resources, the EJBs need to be packaged either directly in a
                    WAR or in an EAR that contains at least one WAR. This is to ensure Servlet container initialization that is
                    necessary for bootstrapping of the Jersey runtime.
                </fo:block></fo:block></fo:block></fo:block><fo:block id="deployment.appservers"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Java EE Servers</fo:marker><fo:block font-size="17.28pt">4.8.4. Java EE Servers</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="deployment.appservers.glassfish"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">4.8.4.1. GlassFish Application Server</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    As explained in <fo:basic-link internal-destination="servlet-app-glassfish"><fo:inline>2.3.1</fo:inline></fo:basic-link> , you don't need to add any specific
                    dependencies on GlassFish, Jersey is already packaged within GlassFish. You only need to add the
                    <fo:inline font-family="monospace">provided</fo:inline>-scoped dependencies to you project to be able to compile it. At runtime,
                    GlassFish will make sure that your application has access to the Jersey libraries.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                  Started with version 2.7, Jersey allows injecting Jersey specific types into CDI enabled JAX-RS components
                  using the <fo:inline font-family="monospace">@javax.inject.Inject</fo:inline> annotation. This covers also custom HK2 bindings, that are configured
                  as part of Jersey application. The feature specifically enables usage of Jersey monitoring statistics (provided that the statistic feature is turned on)
                  in CDI environment, where injection is the only mean to get access to monitoring data.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                  Since both CDI and HK2 use the same injection annotation, Jersey could get confused in certain
                  cases, which could lead to nasty runtime issues. The get better control over what Jersey evaluates
                  as HK2 injection, end-users could take advantage of newly introduced, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/ext/cdi1x/spi/Hk2CustomBoundTypesProvider.html)"><fo:inline>Hk2CustomBoundTypesProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/ext/cdi1x/spi/Hk2CustomBoundTypesProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/ext/cdi1x/spi/Hk2CustomBoundTypesProvider.html</fo:basic-link>]</fo:inline>, SPI.
                  Please see the linked javadoc to get detailed information on how to use the SPI in your application.
                </fo:block></fo:block><fo:block id="deployment.appservers.weblogic"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">4.8.4.2. Oracle WebLogic Server</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    WebLogic 12.1.2 and earlier supports only JAX-RS 1.1 (<fo:basic-link external-destination="url(http://jcp.org/en/jsr/detail?id=311)"><fo:inline>JSR 311</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://jcp.org/en/jsr/detail?id=311)">http://jcp.org/en/jsr/detail?id=311</fo:basic-link>]</fo:inline>) out of the box with Jersey 1.x
                    (WebLogic 12.1.2 ships with Jersey 1.13). To update the version of Jersey 1.x in these earlier WebLogic
                    releases, please read the
                    <fo:basic-link external-destination="url(http://docs.oracle.com/middleware/1212/wls/RESTF/version-restful-service.htm)"><fo:inline>
                        Updating the Version of Jersey JAX-RS RI
                    </fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/middleware/1212/wls/RESTF/version-restful-service.htm)">http://docs.oracle.com/middleware/1212/wls/RESTF/version-restful-service.htm</fo:basic-link>]</fo:inline> chapter in the WebLogic RESTful Web Services Development Guide.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    In WebLogic 12.1.3, Jersey 1.18 is shipped as a default JAX-RS 1.1 provider. In this version of WebLogic,
                    JAX-RS 2.0 (using Jersey 2.5.1) is supported as an optionally installable shared library. Please read through
                    the <fo:basic-link external-destination="url(http://docs.oracle.com/middleware/1213/wls/RESTF/use-jersey20-ri.htm#RESTF290)"><fo:inline>WebLogic
                    12.1.3 RESTful Web Services Development Guide</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/middleware/1213/wls/RESTF/use-jersey20-ri.htm#RESTF290)">http://docs.oracle.com/middleware/1213/wls/RESTF/use-jersey20-ri.htm#RESTF290</fo:basic-link>]</fo:inline> for details how to enable JAX-RS 2.0 support on
                    WebLogic 12.1.3.
                </fo:block></fo:block><fo:block id="deployment.appservers.other"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">4.8.4.3. Other Application Servers</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Third party Java EE application servers usually ship with a JAX-RS implementation. If you want to
                    use Jersey instead of the default JAX-RS provider, you need to add Jersey libraries to your classpath and
                    disable the default JAX-RS provider in the container.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    In general, Jersey will be deployed as a Servlet and the resources can be deployed in various ways,
                    as described in this section. However, the exact steps will vary from vendor to vendor.</fo:block></fo:block></fo:block></fo:block><fo:block id="deployment.osgi"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">OSGi</fo:marker><fo:block font-size="20.735999999999997pt">4.9. OSGi</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            OSGi support has been added to the Jersey version 1.2. Since then, you should be able to utilize standard OSGi
            means to run Jersey based web applications in OSGi runtime as described in the OSGi Service Platform Enterprise
            Specification. Jersey is currently compatible with OSGi 4.2.0, the specification could be downloaded from the
            <fo:basic-link external-destination="url(http://www.osgi.org/Download/Release4V42)"><fo:inline>OSGi 4.2.0 Download Site</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://www.osgi.org/Download/Release4V42)">http://www.osgi.org/Download/Release4V42</fo:basic-link>]</fo:inline>.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The two supported ways of running an OSGi web application are:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e4013"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e4014"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>WAB (Web Application Bundle)</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e4016"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>HTTP Service</fo:block></fo:list-item-body></fo:list-item></fo:list-block>

            WAB is in fact just an OSGified WAR archive. HTTP Service feature allows you to publish Java EE Servlets in
            the OSGi runtime.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Two examples were added to the Jersey distribution to depict the above mentioned features and show how to use
            them with Jersey:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e4021"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e4022"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/osgi-helloworld-webapp)"><fo:inline>WAB Example</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/osgi-helloworld-webapp)">https://github.com/jersey/jersey/tree/2.28/examples/osgi-helloworld-webapp</fo:basic-link>]</fo:inline></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e4025"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/osgi-http-service)"><fo:inline>HTTP Service example</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/osgi-http-service)">https://github.com/jersey/jersey/tree/2.28/examples/osgi-http-service</fo:basic-link>]</fo:inline></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

            Both examples are multi-module maven projects and both consist of an application OSGi bundle module and a test module.
            The tests are based on the <fo:basic-link external-destination="url(http://ops4j1.jira.com/wiki/display/PAXEXAM3/Pax+Exam)"><fo:inline>PAX Exam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://ops4j1.jira.com/wiki/display/PAXEXAM3/Pax+Exam)">http://ops4j1.jira.com/wiki/display/PAXEXAM3/Pax+Exam</fo:basic-link>]</fo:inline>
            framework. Both OSGi examples also include a readme file containing instructions
            how to manually run the example applications using <fo:basic-link external-destination="url(http://felix.apache.org/site/index.html)"><fo:inline>Apache Felix</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://felix.apache.org/site/index.html)">http://felix.apache.org/site/index.html</fo:basic-link>]</fo:inline> framework.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The rest of the chapter describes how to run the above mentioned examples on GlassFish 4 application server.
        </fo:block><fo:block id="osgi.shell"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Enabling the OSGi shell in Glassfish</fo:marker><fo:block font-size="17.28pt">4.9.1. Enabling the OSGi shell in Glassfish</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Since GlassFish utilizes Apache Felix, an OSGi runtime comes out of the box with GlassFish.
                However, for security reasons, the OSGi shell has been turned off. You can however explicitly enable it
                either by starting GlassFish the <fo:inline font-family="monospace">asadmin</fo:inline> console and creating a Java system property
                <fo:inline font-family="monospace">glassfish.osgi.start.level.final</fo:inline> and setting its value to <fo:inline font-family="monospace">3</fo:inline>:

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e4051"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 4.20. </fo:block>
                    Start the admin console:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4053">  1 
  2 ~/glassfish/bin$ ./asadmin
  3 Use "exit" to exit and "help" for online help.
  4 asadmin&gt;</fo:block>

                    You can check the actual value of the java property (loaded from the configuration file):

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4056"> 26 
 27 asadmin&gt;  list-jvm-options
 28 ...
 29 -Dglassfish.osgi.start.level.final=2
 30 ...</fo:block>

                    And change the value by typing:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4059"> 26 
 27 asadmin&gt;  create-jvm-options --target server -Dglassfish.osgi.start.level.final=3</fo:block></fo:block></fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The second option is to change the value in the <fo:inline font-family="monospace">osgi.properties</fo:inline> configuration file:
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4067">  1 
  2 # Final start level of OSGi framework. This is used by GlassFish launcher code
  3 # to set the start level of the OSGi framework once server is up and running so that
  4 # optional services can start. The initial start level of framework is controlled using
  5 # the standard framework property called org.osgi.framework.startlevel.beginning
  6 glassfish.osgi.start.level.final=3</fo:block>

                You can then execute the Felix shell commands by typing <fo:inline font-family="monospace">osgi &lt;felix_command&gt;</fo:inline> in
                the <fo:inline font-family="monospace">asadmin</fo:inline> console. For example:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4076">  1 
  2 asadmin&gt; osgi lb
  3 ... list of bundles ...</fo:block>

                or launching the shell using <fo:inline font-family="monospace">osgi-shell</fo:inline> command in the admin console (the domain must be
                started, otherwise the osgi shell won't launch):

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4082">  1 
  2 asadmin&gt; osgi-shell
  3 Use "exit" to exit and "help" for online help.
  4 gogo$</fo:block>

                and execute the osgi commands directly (without the "<fo:inline font-family="monospace">osgi</fo:inline>" prefix):

<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4088">  1 
  2 gogo$ lb
  3 ... list of bundles ...</fo:block>
            </fo:block></fo:block><fo:block id="osgi.wab"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">WAB Example</fo:marker><fo:block font-size="17.28pt">4.9.2. WAB Example</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                As mentioned above, WAB is just an OSGi-fied WAR archive. Besides the usual OSGi headers it must
                in addition contain a special header, Web-ContextPath, specifying the web application context path.
                Our WAB has (beside some other) the following headers present in the manifest:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4096">  1 Web-ContextPath: helloworld
  2 Webapp-Context: helloworld
  3 Bundle-ClassPath: WEB-INF/classese</fo:block>

                Here, the second header is ignored by GlassFish, but may be required by other containers not fully
                compliant with the OSGi Enterprise Specification mentioned above. The third manifest header
                worth mentioning is the Bundle-ClassPath specifying where to find the application
                Java classes within the bundle archive.
                More about manifest headers in OSGi can be found in the
                <fo:basic-link external-destination="url(http://wiki.osgi.org/wiki/Category:Manifest_Header)"><fo:inline>OSGi Wiki</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://wiki.osgi.org/wiki/Category:Manifest_Header)">http://wiki.osgi.org/wiki/Category:Manifest_Header</fo:basic-link>]</fo:inline>.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                For more detailed information on the example please see the <fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/osgi-helloworld-webapp)"><fo:inline>WAB Example</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/osgi-helloworld-webapp)">https://github.com/jersey/jersey/tree/2.28/examples/osgi-helloworld-webapp</fo:basic-link>]</fo:inline> source code. This
                example does not package into a single <fo:inline font-family="monospace">war</fo:inline> file. Instead a <fo:inline font-family="monospace">war</fo:inline> and a
                set of additional <fo:inline font-family="monospace">jar</fo:inline>s is produced during the build. See the next example to see how to deploy OSGi
                based Jersey application to GlassFish.
            </fo:block></fo:block><fo:block id="osgi.httpservice"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">HTTP Service Example</fo:marker><fo:block font-size="17.28pt">4.9.3. HTTP Service Example</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e4119"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    When deploying an OSGi HTTP Service example to GlassFish, please make sure the OSGi HTTP Service bundle is
                    installed on your GlassFish instance.
                </fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                You can directly install and activate the Jersey application bundle. In case of our example, you can either
                install the example bundle stored locally (and alternatively build from Jersey sources):
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                1) Build (optional)

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4126">  1 
  2 examples$ cd osgi-http-service/bundle
  3 bundle$ mvn clean package</fo:block>

                You can also get the binary readily compiled from
                <fo:basic-link external-destination="url(https://maven.java.net/content/repositories/releases/org/glassfish/jersey/examples/osgi-http-service/bundle/2.28)"><fo:inline>Java.net Maven Repository</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://maven.java.net/content/repositories/releases/org/glassfish/jersey/examples/osgi-http-service/bundle/2.28)">https://maven.java.net/content/repositories/releases/org/glassfish/jersey/examples/osgi-http-service/bundle/2.28</fo:basic-link>]</fo:inline>.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                2) Install into OSGi runtime:
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4134">  1 
  2 gogo$ install file:///path/to/file/bundle.jar
  3 Bundle ID: 303</fo:block>

                or install it directly from the maven repository:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4137">  1 
  2 gogo$ install http://maven.java.net/content/repositories/releases/org/glassfish/jersey/examples/osgi-http-service/bundle/&lt;version&gt;/bundle-&lt;version&gt;.jar
  3 Bundle ID: 303</fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Make sure to replace <fo:inline font-family="monospace">&lt;version&gt;</fo:inline> with an appropriate version number. Which one is
                appropriate depends on the specific GlassFish 4.x version you are using. The version of the bundle cannot
                be higher than the version of Jersey integrated in your GlassFish 4.x server. Jersey bundles declare
                dependencies on other bundles at the OSGi level and those dependencies are version-sensitive. If you use
                example bundle from let's say version 2.5, but Glassfish has Jersey 2.3.1, dependencies will not be satisfied
                and bundle will not start. If this happens, the error will look something like this:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4145">  1 gogo$ lb
  2 ...
  3 303 | Installed  |    1| jersey-examples-osgi-http-service-bundle (2.5.0.SNAPSHOT)
  4 gogo$ start 303
  5 
  6 org.osgi.framework.BundleException: Unresolved constraint in bundle
  7 org.glassfish.jersey.examples.osgi-http-service.bundle [303]: Unable to resolve 308.0: missing requirement
  8 [303.0] osgi.wiring.package; (&amp;(osgi.wiring.package=org.glassfish.jersey.servlet)
  9 (version&gt;=2.5.0)(!(version&gt;=3.0.0)))
 10 
 11 gogo$</fo:block>

                In the opposite scenario (example bundle version 2.3.1 and Glassfish Jersey version higher), everything should
                work fine.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Also, if you build GlassFish from the main trunk sources and use the example from most recent
                Jersey release, you will most likely be able to run the examples from the latest Jersey release, as Jersey
                team typically integrates all newly released versions of Jersey immediately into GlassFish.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                As a final step, start the bundle:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4152">  1 gogo$ start 303</fo:block>

                Again, the Bundle ID (in our case 303) has to be replaced by the correct one returned from the
                <fo:inline font-family="monospace">install</fo:inline> command.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The example app should now be up and running. You can access it on
                <fo:basic-link external-destination="url(http://localhost:8080/osgi/jersey-http-service/status)"><fo:inline>
                    http://localhost:8080/osgi/jersey-http-service/status
                </fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://localhost:8080/osgi/jersey-http-service/status)">http://localhost:8080/osgi/jersey-http-service/status</fo:basic-link>]</fo:inline>. Please see <fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/osgi-http-service)"><fo:inline>HTTP Service example</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/osgi-http-service)">https://github.com/jersey/jersey/tree/2.28/examples/osgi-http-service</fo:basic-link>]</fo:inline> source code for more details on the example.
            </fo:block></fo:block></fo:block><fo:block id="deployment.other"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Other Environments</fo:marker><fo:block font-size="20.735999999999997pt">4.10. Other Environments</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="deployment.other.cloud"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Oracle Java Cloud Service</fo:marker><fo:block font-size="17.28pt">4.10.1. Oracle Java Cloud Service</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                As Oracle Public Cloud is based on WebLogic server, the same applies as in the paragraph about WebLogic
                deployment (see <fo:basic-link internal-destination="deployment.appservers.weblogic"><fo:inline>Section 4.8.4.2, “Oracle WebLogic Server”</fo:inline></fo:basic-link>). More on developing applications for
                Oracle Java Cloud Service can be found in this <fo:basic-link external-destination="url(http://docs.oracle.com/cloud/131/developer_services/CSJSU/java-develop.htm#BABHDAJH)"><fo:inline>guide</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/cloud/131/developer_services/CSJSU/java-develop.htm#BABHDAJH)">http://docs.oracle.com/cloud/131/developer_services/CSJSU/java-develop.htm#BABHDAJH</fo:basic-link>]</fo:inline>.
            </fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Client API</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Client API</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="client"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 5. Client API</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        This section introduces the JAX-RS Client API, which is a fluent Java based API for communication with RESTful Web
        services. This standard API that is also part of Java EE 7 is designed to make it very easy to consume a Web service
        exposed via HTTP protocol and enables developers to concisely and efficiently implement portable client-side solutions
        that leverage existing and well established client-side HTTP connector implementations.
    </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The JAX-RS client API can be utilized to consume any Web service exposed on top of a HTTP protocol or it's
        extension (e.g. WebDAV), and is not restricted to services implemented using JAX-RS. Yet, developers familiar with JAX-RS
        should find the client API complementary to their services, especially if the client API is utilized by those services
        themselves, or to test those services.
        The JAX-RS client API finds inspiration in the proprietary Jersey 1.x Client API and developers familiar with the Jersey
        1.x Client API should find it easy to understand all the concepts introduced in the new JAX-RS Client API.
    </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The goals of the client API are threefold:

        <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.2em" id="d0e4189"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e4190"><fo:list-item-label end-indent="label-end()"><fo:block>1.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                    Encapsulate a key constraint of the REST architectural style, namely the Uniform Interface Constraint and
                    associated data elements, as client-side Java artifacts;
                </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e4193"><fo:list-item-label end-indent="label-end()"><fo:block>2.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                    Make it as easy to consume RESTful Web services exposed over HTTP, same as the JAX-RS server-side API makes
                    it easy to develop RESTful Web services; and
                </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e4196"><fo:list-item-label end-indent="label-end()"><fo:block>3.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                    Share common concepts and extensibility points of the JAX-RS API between the server and the client side
                    programming models.
                </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

        As an extension to the standard JAX-RS Client API, the  Jersey Client API supports a pluggable architecture to enable the
        use of different underlying HTTP client <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/Connector.html)"><fo:inline>Connector</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/Connector.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/Connector.html</fo:basic-link>]</fo:inline> implementations. Several such implementations are
        currently provided with Jersey. We have a default client connector using <fo:inline font-family="monospace">Http(s)URLConnection</fo:inline> supplied
        with the JDK as well as connector implementations based on Apache HTTP Client, Jetty HTTP client and Grizzly Asynchronous Client.
    </fo:block><fo:block id="d0e4206"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Uniform Interface Constraint</fo:marker><fo:block font-size="20.735999999999997pt">5.1. Uniform Interface Constraint</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The uniform interface constraint bounds the architecture of RESTful Web services so that a client, such
            as a browser, can utilize the same interface to communicate with any service. This is a very powerful concept
            in software engineering that makes Web-based search engines and service mash-ups possible. It induces properties
            such as:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.2em" id="d0e4211"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e4212"><fo:list-item-label end-indent="label-end()"><fo:block>1.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>simplicity, the architecture is easier to understand and maintain; and</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e4215"><fo:list-item-label end-indent="label-end()"><fo:block>2.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        evolvability or loose coupling, clients and services can evolve over time perhaps in new and
                        unexpected ways, while retaining backwards compatibility.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

            Further constraints are required:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.2em" id="d0e4219"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e4220"><fo:list-item-label end-indent="label-end()"><fo:block>1.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>every resource is identified by a URI;</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e4223"><fo:list-item-label end-indent="label-end()"><fo:block>2.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        a client interacts with the resource via HTTP requests and responses using a fixed set of
                        HTTP methods;
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e4226"><fo:list-item-label end-indent="label-end()"><fo:block>3.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>one or more representations can be returned and are identified by media types; and</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e4229"><fo:list-item-label end-indent="label-end()"><fo:block>4.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>the contents of which can link to further resources.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

            The above process repeated over and again should be familiar to anyone who has used a browser to fill
            in HTML forms and follow links. That same process is applicable to non-browser based clients.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Many existing Java-based client APIs, such as the Apache HTTP client API or <fo:inline font-family="monospace">HttpUrlConnection</fo:inline>
            supplied with the JDK place too much focus on the Client-Server constraint for the exchanges of request and
            responses rather than a resource, identified by a URI, and the use of a fixed set of HTTP methods.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">A resource in the JAX-RS client API is an instance of the Java class
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html)"><fo:inline>WebTarget</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html</fo:basic-link>]</fo:inline>.
            and encapsulates an URI. The fixed set of HTTP methods can be invoked based on the
            <fo:inline font-family="monospace">WebTarget</fo:inline>.
            The representations are Java types, instances of which, may contain links that new instances of
            <fo:inline font-family="monospace">WebTarget</fo:inline> may be created from.
        </fo:block></fo:block><fo:block id="d0e4249"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Ease of use and reusing JAX-RS artifacts</fo:marker><fo:block font-size="20.735999999999997pt">5.2. Ease of use and reusing JAX-RS artifacts</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Since a JAX-RS component is represented as an annotated Java type, it makes it easy to configure, pass around and
            inject in ways that are not so intuitive or possible with other client-side APIs.
            The Jersey Client API reuses many aspects of the JAX-RS and the Jersey implementation such as:
            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.2em" id="d0e4254"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e4255"><fo:list-item-label end-indent="label-end()"><fo:block>1.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        URI building using <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriBuilder.html)"><fo:inline>UriBuilder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriBuilder.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriBuilder.html</fo:basic-link>]</fo:inline> and <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/uri/UriTemplate.html)"><fo:inline>UriTemplate</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/uri/UriTemplate.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/uri/UriTemplate.html</fo:basic-link>]</fo:inline> to safely build URIs;
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e4264"><fo:list-item-label end-indent="label-end()"><fo:block>2.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Built-in support for Java types of representations such as
                        <fo:inline font-family="monospace">byte[]</fo:inline>,
                        <fo:inline font-family="monospace">String</fo:inline>,
                        <fo:inline font-family="monospace">Number</fo:inline>,
                        <fo:inline font-family="monospace">Boolean</fo:inline>,
                        <fo:inline font-family="monospace">Character</fo:inline>,
                        <fo:inline font-family="monospace">InputStream</fo:inline>,
                        <fo:inline font-family="monospace">java.io.Reader</fo:inline>,
                        <fo:inline font-family="monospace">File</fo:inline>,
                        <fo:inline font-family="monospace">DataSource</fo:inline>,
                        JAXB beans as well as additional Jersey-specific JSON and <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/package-summary.html)"><fo:inline>Multi Part</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/package-summary.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/package-summary.html</fo:basic-link>]</fo:inline> support.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e4297"><fo:list-item-label end-indent="label-end()"><fo:block>3.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Using the fluent builder-style API pattern to make it easier to construct requests.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            Some APIs, like the Apache HTTP Client or <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/net/HttpURLConnection.html)"><fo:inline>HttpURLConnection</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/net/HttpURLConnection.html)">http://docs.oracle.com/javase/6/docs/api/java/net/HttpURLConnection.html</fo:basic-link>]</fo:inline>
            can be rather hard to use and/or require too much code to do something relatively simple, especially when
            the client needs to understand different payload representations.
            This is why the Jersey implementation of JAX-RS Client API provides support for wrapping <fo:inline font-family="monospace">HttpUrlConnection</fo:inline>
            and the Apache HTTP client. Thus it is possible to get the benefits of the established JAX-RS implementations and
            features while getting the ease of use benefit of the simple design of the JAX-RS client API.
            For example, with a low-level HTTP client library, sending a POST request with a bunch of typed HTML form parameters
            and receiving a response de-serialized into a JAXB bean is not straightforward at all. With the new JAX-RS Client API
            supported by Jersey this task is very easy:

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="client.ex.formpost"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 5.1. POST request with form parameters</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4310">  1 Client client = ClientBuilder.newClient();
  2 WebTarget target = client.target("http://localhost:9998").path("resource");
  3 
  4 Form form = new Form();
  5 form.param("x", "foo");
  6 form.param("y", "bar");
  7 
  8 MyJAXBBean bean =
  9 target.request(MediaType.APPLICATION_JSON_TYPE)
 10     .post(Entity.entity(form,MediaType.APPLICATION_FORM_URLENCODED_TYPE),
 11         MyJAXBBean.class);</fo:block></fo:block></fo:block>

            In the <fo:basic-link internal-destination="client.ex.formpost"><fo:inline>Example 5.1, “POST request with form parameters”</fo:inline></fo:basic-link> a new <fo:inline font-family="monospace">WebTarget</fo:inline> instance is created using a new
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)"><fo:inline>Client</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html</fo:basic-link>]</fo:inline> instance first, next a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Form.html)"><fo:inline>Form</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Form.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Form.html</fo:basic-link>]</fo:inline> instance is created with two form parameters.
            Once ready, the <fo:inline font-family="monospace">Form</fo:inline> instance is <fo:inline font-family="monospace">POST</fo:inline>ed to the target resource.
            First, the acceptable media type is specified in the <fo:inline font-family="monospace">request(...)</fo:inline> method. Then in the
            <fo:inline font-family="monospace">post(...)</fo:inline> method, a call to a static method on JAX-RS <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Entity.html)"><fo:inline>Entity</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Entity.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Entity.html</fo:basic-link>]</fo:inline> is made to construct
            the request entity instance and attach the proper content media type to the form entity that is being sent. The
            second parameter in the <fo:inline font-family="monospace">post(...)</fo:inline> method specifies the Java type of the response entity that should
            be returned from the method in case of a successful response. In this case an instance of JAXB bean is requested to
            be returned on success. The Jersey client API takes care of selecting the proper <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html)"><fo:inline>MessageBodyWriter&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html</fo:basic-link>]</fo:inline> for
            the serialization of the <fo:inline font-family="monospace">Form</fo:inline> instance, invoking the <fo:inline font-family="monospace">POST</fo:inline> request and producing and
            de-serialization of the response message payload into an instance of a JAXB bean using a proper
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)"><fo:inline>MessageBodyReader&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html</fo:basic-link>]</fo:inline>.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If the code above had to be written using <fo:inline font-family="monospace">HttpUrlConnection</fo:inline>, the developer would have to write custom
            code to serialize the form data that are sent within the POST request and de-serialize the response input stream
            into a JAXB bean. Additionally, more code would have to be written to make it easy to reuse the logic when
            communicating with the same resource <fo:inline font-family="monospace">“http://localhost:8080/resource”</fo:inline> that is represented by
            the JAX-RS <fo:inline font-family="monospace">WebTarget</fo:inline> instance in our example.
        </fo:block></fo:block><fo:block id="d0e4365"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Overview of the Client API</fo:marker><fo:block font-size="20.735999999999997pt">5.3. Overview of the Client API</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e4368"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Getting started with the client API</fo:marker><fo:block font-size="17.28pt">5.3.1. Getting started with the client API</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Refer to the <fo:basic-link internal-destination="dependencies"><fo:inline>dependencies</fo:inline></fo:basic-link> for details on the dependencies when using the
                Jersey JAX-RS Client support.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                You may also want to use a custom <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/Connector.html)"><fo:inline>Connector</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/Connector.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/Connector.html</fo:basic-link>]</fo:inline> implementation. In such case you would need to include
                additional dependencies on the module(s) containing the custom client connector that you want to use. See section
                <fo:basic-link internal-destination="connectors"><fo:inline>"Configuring custom Connectors"</fo:inline></fo:basic-link> about how to use and configure a custom
                Jersey client transport <fo:inline font-family="monospace">Connector</fo:inline>.</fo:block></fo:block><fo:block id="d0e4387"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">
                Creating and configuring a Client instance
            </fo:marker><fo:block font-size="17.28pt">5.3.2. 
                Creating and configuring a Client instance
            </fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                JAX-RS Client API is a designed to allow fluent programming model. This means, a construction of a
                <fo:inline font-family="monospace">Client</fo:inline> instance, from which a <fo:inline font-family="monospace">WebTarget</fo:inline> is created, from which a
                request <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Invocation.html)"><fo:inline>Invocation</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Invocation.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Invocation.html</fo:basic-link>]</fo:inline> is built and invoked can be chained in a single "flow" of invocations.
                The individual steps of the flow will be shown in the following sections.
                To utilize the client API it is first necessary to build an instance of a
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)"><fo:inline>Client</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html</fo:basic-link>]</fo:inline> using one of the static <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html)"><fo:inline>ClientBuilder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html</fo:basic-link>]</fo:inline> factory methods. Here's the most
                simple example:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4407">Client client = ClientBuilder.newClient();</fo:block>

                The <fo:inline font-family="monospace">ClientBuilder</fo:inline> is a JAX-RS API used to create new instances of <fo:inline font-family="monospace">Client</fo:inline>.
                In a slightly more advanced scenarios, <fo:inline font-family="monospace">ClientBuilder</fo:inline> can be used to configure additional
                client instance properties, such as a SSL transport settings, if needed (see <fo:inline>???</fo:inline>
                below).
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                A <fo:inline font-family="monospace">Client</fo:inline> instance can be configured during creation by passing a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientConfig.html)"><fo:inline>ClientConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientConfig.html</fo:basic-link>]</fo:inline>
                to the <fo:inline font-family="monospace">newClient(Configurable)</fo:inline> <fo:inline font-family="monospace">ClientBuilder</fo:inline> factory method.
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientConfig.html)"><fo:inline>ClientConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientConfig.html</fo:basic-link>]</fo:inline> implements <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html)"><fo:inline>Configurable</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html</fo:basic-link>]</fo:inline> and therefore it offers methods to register
                providers (e.g. features or individual entity providers, filters or interceptors) and setup properties.
                The following code shows a registration of custom client filters:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4441">  1 ClientConfig clientConfig = new ClientConfig();
  2 clientConfig.register(MyClientResponseFilter.class);
  3 clientConfig.register(new AnotherClientFilter());
  4 Client client = ClientBuilder.newClient(clientConfig);</fo:block>

                In the example, filters are registered using the <fo:inline font-family="monospace">ClientConfig.register(...)</fo:inline> method. There are
                multiple overloaded versions of the method that support registration of feature and provider classes or instances.
                Once a <fo:inline font-family="monospace">ClientConfig</fo:inline> instance is configured, it can be passed to the
                <fo:inline font-family="monospace">ClientBuilder</fo:inline> to create a pre-configured <fo:inline font-family="monospace">Client</fo:inline> instance.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Note that the Jersey <fo:inline font-family="monospace">ClientConfig</fo:inline> supports the fluent API model of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html)"><fo:inline>Configurable</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html</fo:basic-link>]</fo:inline>.
                With that the code that configures a new client instance can be also written using a more compact style as shown
                below.

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4464">  1 
  2 Client client = ClientBuilder.newClient(new ClientConfig()
  3         .register(MyClientResponseFilter.class)
  4         .register(new AnotherClientFilter());</fo:block>

                The ability to leverage this compact pattern is inherent to all JAX-RS and Jersey Client API components.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Since <fo:inline font-family="monospace">Client</fo:inline> implements <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html)"><fo:inline>Configurable</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html</fo:basic-link>]</fo:inline> interface too, it can be configured further
                even after it has been created. Important is to mention that any configuration change done on a
                <fo:inline font-family="monospace">Client</fo:inline> instance will not influence the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientConfig.html)"><fo:inline>ClientConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientConfig.html</fo:basic-link>]</fo:inline> instance that was used to
                provide the initial <fo:inline font-family="monospace">Client</fo:inline> instance configuration at the instance creation time.
                The next piece of code shows a configuration of an existing <fo:inline font-family="monospace">Client</fo:inline> instance.

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4487">  1 client.register(ThirdClientFilter.class);</fo:block>

                Similarly to earlier examples, since <fo:inline font-family="monospace">Client.register(...)</fo:inline> method supports the fluent API style,
                multiple client instance configuration calls can be chained:
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4493">  1 client.register(FilterA.class)
  2       .register(new FilterB())
  3       .property("my-property", true);</fo:block>

                To get the current configuration of the <fo:inline font-family="monospace">Client</fo:inline> instance a <fo:inline font-family="monospace">getConfiguration()</fo:inline>
                method can be used.

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4502">  1 ClientConfig clientConfig = new ClientConfig();
  2 clientConfig.register(MyClientResponseFilter.class);
  3 clientConfig.register(new AnotherClientFilter());
  4 Client client = ClientBuilder.newClient(clientConfig);
  5 client.register(ThirdClientFilter.class);
  6 Configuration newConfiguration = client.getConfiguration();</fo:block>

                In the code, an additional <fo:inline font-family="monospace">MyClientResponseFilter</fo:inline> class and
                <fo:inline font-family="monospace">AnotherClientFilter</fo:inline> instance are registered in the <fo:inline font-family="monospace">clientConfig</fo:inline>. The
                <fo:inline font-family="monospace">clientConfig</fo:inline> is then used to construct a new <fo:inline font-family="monospace">Client</fo:inline> instance. The
                <fo:inline font-family="monospace">ThirdClientFilter</fo:inline> is added separately to the constructed <fo:inline font-family="monospace">Client</fo:inline> instance.
                This does not influence the configuration represented by the original <fo:inline font-family="monospace">clientConfig</fo:inline>.
                In the last step a <fo:inline font-family="monospace">newConfiguration</fo:inline> is retrieved from the <fo:inline font-family="monospace">client</fo:inline>. This
                configuration contains all three registered filters while the original <fo:inline font-family="monospace">clientConfig</fo:inline> instance
                still contains only two filters. Unlike <fo:inline font-family="monospace">clientConfig</fo:inline> created separately, the
                <fo:inline font-family="monospace">newConfiguration</fo:inline> retrieved from the <fo:inline font-family="monospace">client</fo:inline> instance represents a live
                client configuration view. Any additional configuration changes made to the <fo:inline font-family="monospace">client</fo:inline> instance
                are also reflected in the <fo:inline font-family="monospace">newConfiguration</fo:inline>. So, <fo:inline font-family="monospace">newConfiguration</fo:inline> is really
                a view of the <fo:inline font-family="monospace">client</fo:inline> configuration and not a configuration state copy. These principles are
                important in the client API and will be used in the following sections too. For example, you can construct a
                common base configuration for all clients (in our case it would be <fo:inline font-family="monospace">clientConfig</fo:inline>) and
                then reuse this common configuration instance to configure multiple <fo:inline font-family="monospace">client</fo:inline> instances that can
                be further specialized. Similarly, you can use an existing <fo:inline font-family="monospace">client</fo:inline> instance configuration to
                configure another client instance without having to worry about any side effects in the original
                <fo:inline font-family="monospace">client</fo:inline> instance.
            </fo:block></fo:block><fo:block id="d0e4571"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Targeting a web resource</fo:marker><fo:block font-size="17.28pt">5.3.3. Targeting a web resource</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Once you have a <fo:inline font-family="monospace">Client</fo:inline> instance you can create a <fo:inline font-family="monospace">WebTarget</fo:inline> from it.

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4582">  1 WebTarget webTarget = client.target("http://example.com/rest");</fo:block>

                A <fo:inline font-family="monospace">Client</fo:inline> contains several <fo:inline font-family="monospace">target(...)</fo:inline> methods that allow for creation of
                <fo:inline font-family="monospace">WebTarget</fo:inline> instance. In this case we're using <fo:inline font-family="monospace">target(String uri)</fo:inline> version.
                The <fo:inline font-family="monospace">uri</fo:inline> passed to the method as a <fo:inline font-family="monospace">String</fo:inline> is the URI of the targeted
                web resource. In more complex scenarios it could be the context root URI of the whole RESTful application, from
                which <fo:inline font-family="monospace">WebTarget</fo:inline> instances representing individual resource targets can be derived and
                individually configured. This is possible, because JAX-RS <fo:inline font-family="monospace">WebTarget</fo:inline> also implements
                <fo:inline font-family="monospace">Configurable</fo:inline>:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4612">  1 WebTarget webTarget = client.target("http://example.com/rest");
  2 webTarget.register(FilterForExampleCom.class);</fo:block>

                The configuration principles used in JAX-RS client API apply to <fo:inline font-family="monospace">WebTarget</fo:inline> as well. Each
                <fo:inline font-family="monospace">WebTarget</fo:inline> instance inherits a configuration from it's parent (either a client or another
                web target) and can be further custom-configured without affecting the configuration of the parent component.
                In this case, the <fo:inline font-family="monospace">FilterForExampleCom</fo:inline> will be registered only in the
                <fo:inline font-family="monospace">webTarget</fo:inline> and not in <fo:inline font-family="monospace">client</fo:inline>. So, the <fo:inline font-family="monospace">client</fo:inline>
                can still be used to create new <fo:inline font-family="monospace">WebTarget</fo:inline> instances pointing at other URIs using just the
                common client configuration, which <fo:inline font-family="monospace">FilterForExampleCom</fo:inline> filter is not part of.
            </fo:block></fo:block><fo:block id="d0e4639"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Identifying resource on WebTarget</fo:marker><fo:block font-size="17.28pt">5.3.4. Identifying resource on WebTarget</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Let's assume we have a <fo:inline font-family="monospace">webTarget</fo:inline> pointing at <fo:inline font-family="monospace">"http://example.com/rest"</fo:inline> URI
                that represents a context root of a RESTful application and there is a resource exposed on the URI
                <fo:inline font-family="monospace">"http://example.com/rest/resource"</fo:inline>. As already mentioned, a <fo:inline font-family="monospace">WebTarget</fo:inline>
                instance can be used to derive other web targets. Use the following code to define a path to the resource.
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4656">  1 WebTarget resourceWebTarget = webTarget.path("resource");</fo:block>

                The <fo:inline font-family="monospace">resourceWebTarget</fo:inline> now points to the resource on URI
                <fo:inline font-family="monospace">"http://example.com/rest/resource"</fo:inline>. Again if we configure the
                <fo:inline font-family="monospace">resourceWebTarget</fo:inline> with a filter specific to the <fo:inline font-family="monospace">resource</fo:inline>,
                it will not influence the original <fo:inline font-family="monospace">webTarget</fo:inline> instance. However, the filter
                <fo:inline font-family="monospace">FilterForExampleCom</fo:inline> registration will still be inherited by the
                <fo:inline font-family="monospace">resourceWebTarget</fo:inline> as it has been created from <fo:inline font-family="monospace">webTarget</fo:inline>. This mechanism
                allows you to share the common configuration of related resources (typically hosted under the same URI root,
                in our case represented by the <fo:inline font-family="monospace">webTarget</fo:inline> instance), while allowing for further configuration
                specialization based on the specific requirements of each individual resource. The same configuration principles
                of inheritance (to allow common config propagation) and decoupling (to allow individual config customization)
                applies to all components in JAX-RS Client API discussed below.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Let's say there is a sub resource on the path <fo:inline font-family="monospace">"http://example.com/rest/resource/helloworld"</fo:inline>.
                You can derive a <fo:inline font-family="monospace">WebTarget</fo:inline> for this resource simply by:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4694">  1 WebTarget helloworldWebTarget = resourceWebTarget.path("helloworld");</fo:block>

                Let's assume that the <fo:inline font-family="monospace">helloworld</fo:inline> resource accepts a query param for <fo:inline font-family="monospace">GET</fo:inline>
                requests which defines the greeting message. The next code snippet shows a code that creates
                a new <fo:inline font-family="monospace">WebTarget</fo:inline> with the query param defined.

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4706">  1 WebTarget helloworldWebTargetWithQueryParam =
  2         helloworldWebTarget.queryParam("greeting", "Hi World!");</fo:block>

                Please note that apart from methods that can derive new <fo:inline font-family="monospace">WebTarget</fo:inline> instance based on a URI path
                or query parameters, the JAX-RS <fo:inline font-family="monospace">WebTarget</fo:inline> API contains also methods for working with matrix
                parameters too.
            </fo:block></fo:block><fo:block id="d0e4715"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Invoking a HTTP request</fo:marker><fo:block font-size="17.28pt">5.3.5. Invoking a HTTP request</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Let's now focus on invoking a <fo:inline font-family="monospace">GET</fo:inline> HTTP request on the created web targets. To start building a new
                HTTP request invocation, we need to create a new <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Invocation.Builder.html)"><fo:inline>Invocation.Builder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Invocation.Builder.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Invocation.Builder.html</fo:basic-link>]</fo:inline>.

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4726">  1 Invocation.Builder invocationBuilder =
  2         helloworldWebTargetWithQueryParam.request(MediaType.TEXT_PLAIN_TYPE);
  3 invocationBuilder.header("some-header", "true");</fo:block>

                A new invocation builder instance is created using one of the <fo:inline font-family="monospace">request(...)</fo:inline> methods that are
                available on <fo:inline font-family="monospace">WebTarget</fo:inline>. A couple of these methods accept parameters that let you define
                the media type of the representation requested to be returned from the resource. Here we are saying that we
                request a <fo:inline font-family="monospace">"text/plain"</fo:inline> type. This tells Jersey to add a <fo:inline font-family="monospace">Accept: text/plain</fo:inline>
                HTTP header to our request.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The <fo:inline font-family="monospace">invocationBuilder</fo:inline> is used to setup request specific parameters. Here we can setup headers
                for the request or for example cookie parameters. In our example we set up a <fo:inline font-family="monospace">"some-header"</fo:inline>
                header to value <fo:inline font-family="monospace">true</fo:inline>.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Once finished with request customizations, it's time to invoke the request. We have two options now.
                We can use the <fo:inline font-family="monospace">Invocation.Builder</fo:inline> to build a generic <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Invocation.html)"><fo:inline>Invocation</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Invocation.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Invocation.html</fo:basic-link>]</fo:inline> instance
                that will be invoked some time later. Using <fo:inline font-family="monospace">Invocation</fo:inline> we will be able to e.g. set additional
                request properties which are properties in a batch of several requests and use the generic JAX-RS
                <fo:inline font-family="monospace">Invocation</fo:inline> API to invoke the batch of requests without actually knowing all the details
                (such as request HTTP method, configuration etc.). Any properties set on an invocation instance can be read
                during the request processing. For example, in a custom <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientRequestFilter.html)"><fo:inline>ClientRequestFilter</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientRequestFilter.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientRequestFilter.html</fo:basic-link>]</fo:inline> you can call
                <fo:inline font-family="monospace">getProperty()</fo:inline> method on the supplied <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientRequestContext.html)"><fo:inline>ClientRequestContext</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientRequestContext.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientRequestContext.html</fo:basic-link>]</fo:inline> to read a request
                property. Note that these request properties are different from the configuration properties set on
                <fo:inline font-family="monospace">Configurable</fo:inline>. As mentioned earlier, an <fo:inline font-family="monospace">Invocation</fo:inline> instance provides generic
                invocation API to invoke the HTTP request it represents either synchronously or asynchronously. See
                the <fo:basic-link internal-destination="async"><fo:inline>Chapter 11, <fo:inline font-style="italic">Asynchronous Services and Clients</fo:inline></fo:inline></fo:basic-link> for more information on asynchronous invocations.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                In case you do not want to do any batch processing on your HTTP request invocations prior to invoking them, there
                is another, more convenient approach that you can use to invoke your requests directly from an
                <fo:inline font-family="monospace">Invocation.Builder</fo:inline> instance. This approach is demonstrated in the next Java code listing.
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4788">  1 Response response = invocationBuilder.get();</fo:block>

                While short, the code in the example performs multiple actions. First, it will build the the request from the
                <fo:inline font-family="monospace">invocationBuilder</fo:inline>. The URI of request will be
                <fo:inline font-family="monospace">http://example.com/rest/resource/helloworld?greeting="Hi%20World!"</fo:inline> and the request will contain
                <fo:inline font-family="monospace">some-header: true</fo:inline> and <fo:inline font-family="monospace">Accept: text/plain</fo:inline> headers. The request will then pass
                trough all configured request filters ( <fo:inline font-family="monospace">AnotherClientFilter</fo:inline>,
                <fo:inline font-family="monospace">ThirdClientFilter</fo:inline> and
                <fo:inline font-family="monospace">FilterForExampleCom</fo:inline>). Once processed by the filters, the request will be sent to the remote
                resource. Let's say the resource then returns an HTTP 200 message with a plain text response content that contains
                the value sent in the request <fo:inline font-family="monospace">greeting</fo:inline> query parameter. Now we can observe the returned
                response:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4815">  1 System.out.println(response.getStatus());
  2 System.out.println(response.readEntity(String.class));</fo:block>

                which will produce the following output to the console:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4818">200
Hi World!</fo:block>

                As we can see, the request was successfully processed (code 200) and returned an entity (representation) is
                <fo:inline font-family="monospace">"Hi World!"</fo:inline>. Note that since we have configured a <fo:inline font-family="monospace">MyClientResponseFilter</fo:inline>
                in the resource target, when <fo:inline font-family="monospace">response.readEntity(String.class)</fo:inline> gets called, the response
                returned from the remote endpoint is passed through the response filter chain (including the
                <fo:inline font-family="monospace">MyClientResponseFilter</fo:inline>) and entity interceptor chain and at last a proper
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)"><fo:inline>MessageBodyReader&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html</fo:basic-link>]</fo:inline> is located to read the response content bytes from the response stream into a
                Java <fo:inline font-family="monospace">String</fo:inline> instance. Check <fo:basic-link internal-destination="filters-and-interceptors"><fo:inline>Chapter 10, <fo:inline font-style="italic">Filters and Interceptors</fo:inline></fo:inline></fo:basic-link> to lear more about
                request and response filters and entity interceptors.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Imagine now that you would like to invoke a <fo:inline font-family="monospace">POST</fo:inline> request but without any query parameters. You would
                just use the <fo:inline font-family="monospace">helloworldWebTarget</fo:inline> instance created earlier and call the
                <fo:inline font-family="monospace">post()</fo:inline> instead of <fo:inline font-family="monospace">get()</fo:inline>.
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4855">  1 Response postResponse =
  2         helloworldWebTarget.request(MediaType.TEXT_PLAIN_TYPE)
  3                 .post(Entity.entity("A string entity to be POSTed", MediaType.TEXT_PLAIN));</fo:block>
            </fo:block></fo:block><fo:block id="d0e4858"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Example summary</fo:marker><fo:block font-size="17.28pt">5.3.6. Example summary</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The following code puts together the pieces used in the earlier examples.

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e4863"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 5.2. Using JAX-RS Client API</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4866">  1 ClientConfig clientConfig = new ClientConfig();
  2 clientConfig.register(MyClientResponseFilter.class);
  3 clientConfig.register(new AnotherClientFilter());
  4 
  5 Client client = ClientBuilder.newClient(clientConfig);
  6 client.register(ThirdClientFilter.class);
  7 
  8 WebTarget webTarget = client.target("http://example.com/rest");
  9 webTarget.register(FilterForExampleCom.class);
 10 WebTarget resourceWebTarget = webTarget.path("resource");
 11 WebTarget helloworldWebTarget = resourceWebTarget.path("helloworld");
 12 WebTarget helloworldWebTargetWithQueryParam =
 13         helloworldWebTarget.queryParam("greeting", "Hi World!");
 14 
 15 Invocation.Builder invocationBuilder =
 16         helloworldWebTargetWithQueryParam.request(MediaType.TEXT_PLAIN_TYPE);
 17 invocationBuilder.header("some-header", "true");
 18 
 19 Response response = invocationBuilder.get();
 20 System.out.println(response.getStatus());
 21 System.out.println(response.readEntity(String.class));</fo:block></fo:block></fo:block>

                Now we can try to leverage the fluent API style to write this code in a more compact way.

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e4869"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 5.3. Using JAX-RS Client API fluently</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4872">  1 Client client = ClientBuilder.newClient(new ClientConfig()
  2             .register(MyClientResponseFilter.class)
  3             .register(new AnotherClientFilter()));
  4 
  5 String entity = client.target("http://example.com/rest")
  6             .register(FilterForExampleCom.class)
  7             .path("resource/helloworld")
  8             .queryParam("greeting", "Hi World!")
  9             .request(MediaType.TEXT_PLAIN_TYPE)
 10             .header("some-header", "true")
 11             .get(String.class);</fo:block></fo:block></fo:block>

                The code above does the same thing except it skips the generic <fo:inline font-family="monospace">Response</fo:inline> processing and directly
                requests an entity in the last <fo:inline font-family="monospace">get(String.class)</fo:inline> method call. This shortcut method let's you
                specify that (in case the response was returned successfully with a HTTP 2xx status code) the response entity
                should be returned as Java <fo:inline font-family="monospace">String</fo:inline> type. This compact example demonstrates another advantage of
                the JAX-RS client API. The fluency of JAX-RS Client API is convenient especially with simple use cases.
                Here is another a very simple GET request returning a String representation (entity):

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4884">  1 String responseEntity = ClientBuilder.newClient()
  2             .target("http://example.com").path("resource/rest")
  3                         .request().get(String.class);</fo:block>
            </fo:block></fo:block><fo:block id="d0e4887"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Setting ExecutorService and ScheduledExecutorService</fo:marker><fo:block font-size="17.28pt">5.3.7. Setting ExecutorService and ScheduledExecutorService</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Some client invocations, like asynchronous or reactive, could lead to a need to start a new thread. This is
                being done on provided ExecutorService or ScheduledExecutorService. <fo:inline font-family="monospace">ClientBuilder</fo:inline> has two
                methods, which can be used to define them: <fo:inline font-family="monospace">executorService(ExecutorService)</fo:inline> and
                <fo:inline font-family="monospace">scheduledExecutorService(ScheduledExecutorService)</fo:inline>. When specified, all invocations which
                do require running on another thread, should be executed using provided services.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Default values do depend on the environment - in Java EE container, it has to be <fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/enterprise/concurrent/ManagedExecutorService.html)"><fo:inline>ManagedExecutorService</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/enterprise/concurrent/ManagedExecutorService.html)">http://docs.oracle.com/javaee/7/api/javax/enterprise/concurrent/ManagedExecutorService.html</fo:basic-link>]</fo:inline>
                and <fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/enterprise/concurrent/ManagedScheduledExecutorService.html)"><fo:inline>ManagedScheduledExecutorService</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/enterprise/concurrent/ManagedScheduledExecutorService.html)">http://docs.oracle.com/javaee/7/api/javax/enterprise/concurrent/ManagedScheduledExecutorService.html</fo:basic-link>]</fo:inline>, for Java SE it would be
                <fo:inline font-family="monospace">ForkJoinPool.commonPool</fo:inline> for Executor service and something undefined for Scheduled
                executor service.
            </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e4912"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 5.4. Setting JAX-RS Client ExecutorService</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4915">  1 ExecutorService myExecutorService = Executors.newCachedThreadPool();
  2 Client client = ClientBuilder.newBuilder().executorService(myExecutorService).build();</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e4917"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Java instances and types for representations</fo:marker><fo:block font-size="20.735999999999997pt">5.4. Java instances and types for representations</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            All the Java types and representations supported by default on the Jersey server side for
            requests and responses are also supported on the client side.
            For example, to process a response entity (or representation) as a stream of bytes use InputStream as follows:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4922">InputStream in = response.readEntity(InputStream.class);

... // Read from the stream

in.close();
            </fo:block>

            Note that it is important to close the stream after processing so that resources are freed up.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            To <fo:inline font-family="monospace">POST</fo:inline> a file use a <fo:inline font-family="monospace">File</fo:inline> instance as follows:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e4933">File f = ...

...

webTarget.request().post(Entity.entity(f, MediaType.TEXT_PLAIN_TYPE));
            </fo:block>
        </fo:block><fo:block id="d0e4936"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Adding support for new representations</fo:marker><fo:block font-size="17.28pt">5.4.1. Adding support for new representations</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The support for new application-defined representations as Java types requires the
                implementation of the same JAX-RS entity provider extension interfaces as for the server side JAX-RS API, namely
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)"><fo:inline>MessageBodyReader&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html</fo:basic-link>]</fo:inline> and <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html)"><fo:inline>MessageBodyWriter&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html</fo:basic-link>]</fo:inline>
                respectively, for request and response entities (or inbound and outbound representations).
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Classes or implementations of the provider-based interfaces need to be registered as providers within the
                JAX-RS or Jersey Client API components that implement <fo:inline font-family="monospace">Configurable</fo:inline> contract
                (<fo:inline font-family="monospace">ClientBuilder</fo:inline>, <fo:inline font-family="monospace">Client</fo:inline>, <fo:inline font-family="monospace">WebTarget</fo:inline> or
                <fo:inline font-family="monospace">ClientConfig</fo:inline>), as was shown in the earlier sections.
                Some media types are provided in the form of JAX-RS <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Feature.html)"><fo:inline>Feature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Feature.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Feature.html</fo:basic-link>]</fo:inline> a concept that allows the extension
                providers to group together multiple different extension providers and/or configuration properties in order
                to simplify the registration and configuration of the provided feature by the end users. For example,
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/moxy/json/MoxyJsonFeature.html)"><fo:inline>MoxyJsonFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/moxy/json/MoxyJsonFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/moxy/json/MoxyJsonFeature.html</fo:basic-link>]</fo:inline> can be register to enable and configure JSON binding support via MOXy
                library.
            </fo:block></fo:block></fo:block><fo:block id="d0e4970"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Client Transport Connectors</fo:marker><fo:block font-size="20.735999999999997pt">5.5. <fo:inline id="connectors"/>Client Transport Connectors</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            By default, the transport layer in Jersey is provided by <fo:inline font-family="monospace">HttpUrlConnection</fo:inline>. This transport is implemented
            in Jersey via <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/HttpUrlConnector.html)"><fo:inline>HttpUrlConnectorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/HttpUrlConnector.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/HttpUrlConnector.html</fo:basic-link>]</fo:inline> that implements Jersey-specific <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/Connector.html)"><fo:inline>Connector</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/Connector.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/Connector.html</fo:basic-link>]</fo:inline> SPI.
            You can implement and/or register your own <fo:inline font-family="monospace">Connector</fo:inline> instance to the Jersey
            <fo:inline font-family="monospace">Client</fo:inline> implementation, that will replace the default <fo:inline font-family="monospace">HttpUrlConnection</fo:inline>-based
            transport layer. Jersey provides several alternative client transport connector implementations that are ready-to-use.

            <fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e4994"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 5.1. List of Jersey Connectors</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-start-style="solid" border-end-style="solid" border-top-style="solid" border-bottom-style="solid" border-start-width="0.5pt" border-end-width="0.5pt" border-top-width="0.5pt" border-bottom-width="0.5pt" border-start-color="black" border-end-color="black" border-top-color="black" border-bottom-color="black" width="auto"><fo:table-column column-number="1" column-width="33%"/><fo:table-column column-number="2" column-width="33%"/><fo:table-column column-number="3" column-width="34%"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row keep-with-next.within-column="always"><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block font-weight="bold">Transport framework</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block font-weight="bold">Jersey Connector implementation</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block font-weight="bold">Maven dependency</fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>Grizzly NIO framework</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/grizzly/connector/GrizzlyConnectorProvider.html)"><fo:inline>GrizzlyConnectorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/grizzly/connector/GrizzlyConnectorProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/grizzly/connector/GrizzlyConnectorProvider.html</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block><fo:inline font-family="monospace">org.glassfish.jersey.connectors:jersey-grizzly-connector</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>Apache HTTP client</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/apache/connector/ApacheConnectorProvider.html)"><fo:inline>ApacheConnectorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/apache/connector/ApacheConnectorProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/apache/connector/ApacheConnectorProvider.html</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block><fo:inline font-family="monospace">org.glassfish.jersey.connectors:jersey-apache-connector</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>Jetty HTTP client</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jetty/connector/JettyConnectorProvider.html)"><fo:inline>JettyConnectorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jetty/connector/JettyConnectorProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jetty/connector/JettyConnectorProvider.html</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block><fo:inline font-family="monospace">org.glassfish.jersey.connectors:jersey-jetty-connector</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>Netty NIO framework</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/netty/connector/NettyConnectorProvider.html)"><fo:inline>NettyConnectorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/netty/connector/NettyConnectorProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/netty/connector/NettyConnectorProvider.html</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block><fo:inline font-family="monospace">org.glassfish.jersey.connectors:jersey-netty-connector</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>JDK NIO client</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jdk/connector/JdkConnectorProvider.html)"><fo:inline>JdkConnectorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jdk/connector/JdkConnectorProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jdk/connector/JdkConnectorProvider.html</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">org.glassfish.jersey.connectors:jersey-jdk-connector</fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block>

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="connectors.warning"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Warning</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Be aware of using other than default <fo:inline font-family="monospace">Connector</fo:inline> implementation.
                    There is an issue handling HTTP headers in
                    <fo:inline font-family="monospace">WriterInterceptor</fo:inline> or <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline>.
                    If you need to change header fields do not use nor
                    <fo:inline font-family="monospace">ApacheConnectorProvider</fo:inline> nor <fo:inline font-family="monospace">GrizzlyConnectorProvider</fo:inline>
                    nor <fo:inline font-family="monospace">JettyConnectorProvider</fo:inline> neither <fo:inline font-family="monospace">NettyConnectorProvider</fo:inline>.
                    The issue for example applies to Jersey <fo:basic-link internal-destination="multipart"><fo:inline>Multipart</fo:inline></fo:basic-link>
                    feature that also modifies HTTP headers.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    On the other hand, in the default transport connector, there are some restrictions on the headers, that
                    can be sent in the default configuration.
                    <fo:inline font-family="monospace">HttpUrlConnectorProvider</fo:inline> uses <fo:inline font-family="monospace">HttpUrlConnection</fo:inline> as an underlying connection
                    implementation. This JDK class by default restricts the use of following headers:
                    <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e5090"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5091"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">Access-Control-Request-Headers</fo:inline></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5094"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">Access-Control-Request-Method</fo:inline></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5097"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">Connection</fo:inline> (with one exception - <fo:inline font-family="monospace">Connection</fo:inline> header with
                            value <fo:inline font-family="monospace">Closed</fo:inline> is allowed by default)</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5107"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">Content-Length</fo:inline></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5110"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">Content-Transfer-Encoding</fo:inline>-</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5114"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">Host</fo:inline></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5117"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">Keep-Alive</fo:inline></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5120"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">Origin</fo:inline></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5123"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">Trailer</fo:inline></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5126"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">Transfer-Encoding</fo:inline></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5129"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">Upgrade</fo:inline></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5132"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">Via</fo:inline></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5135"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>all the headers starting with <fo:inline font-family="monospace">Sec-</fo:inline></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
                    The underlying connection can be configured to permit all headers to be sent,
                    however this behaviour can be changed only by setting the system property
                    <fo:inline font-family="monospace">sun.net.http.allowRestrictedHeaders</fo:inline>.
                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e5143"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 5.5. Sending restricted headers with <fo:inline font-family="monospace">HttpUrlConnector</fo:inline></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e5148">  1 
  2                             Client client = ClientBuilder.newClient();
  3                             System.setProperty("sun.net.http.allowRestrictedHeaders", "true");
  4 
  5                             Response response = client.target(yourUri).path(yourPath).request().
  6                             header("Origin", "http://example.com").
  7                             header("Access-Control-Request-Method", "POST").
  8                             get();
  9                         </fo:block></fo:block></fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Note, that internally the <fo:inline font-family="monospace">HttpUrlConnection</fo:inline> instances are pooled, so (un)setting the
                    property after already creating a target typically does not have any effect.
                    The property influences all the connections <fo:inline font-style="italic">created</fo:inline> after the property has been
                    (un)set, but there is no guarantee, that your request will use a connection
                    created after the property change.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    In a simple environment, setting the property before creating the first target is sufficient, but in complex
                    environments (such as application servers), where some poolable connections might exist before your
                    application even bootstraps, this approach is not 100% reliable and we recommend using a different client
                    transport connector, such as Apache Connector.
                    These limitations have to be considered especially when invoking <fo:inline font-style="italic">CORS</fo:inline> (Cross Origin
                    Resource Sharing) requests.
                </fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            As indicated earlier, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/Connector.html)"><fo:inline>Connector</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/Connector.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/Connector.html</fo:basic-link>]</fo:inline> and <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/ConnectorProvider.html)"><fo:inline>ConnectorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/ConnectorProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/ConnectorProvider.html</fo:basic-link>]</fo:inline> contracts are Jersey-specific
            extension APIs that would only work with Jersey and as such are not part of JAX-RS. Following example shows how to
            setup the custom Grizzly Asynchronous HTTP Client based <fo:inline font-family="monospace">ConnectorProvider</fo:inline> in a Jersey client
            instance:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e5176">  1 ClientConfig clientConfig = new ClientConfig();
  2 clientConfig.connectorProvider(new GrizzlyConnectorProvider());
  3 Client client = ClientBuilder.newClient(clientConfig);</fo:block>

            <fo:inline font-family="monospace">Client</fo:inline> accepts as as a constructor argument a <fo:inline font-family="monospace">Configurable</fo:inline> instance. Jersey
            implementation of the <fo:inline font-family="monospace">Configurable</fo:inline> provider for the client is <fo:inline font-family="monospace">ClientConfig</fo:inline>.
            By using the Jersey <fo:inline font-family="monospace">ClientConfig</fo:inline> you can configure the custom
            <fo:inline font-family="monospace">ConnectorProvider</fo:inline>
            into the <fo:inline font-family="monospace">ClientConfig</fo:inline>. The <fo:inline font-family="monospace">GrizzlyConnectorProvider</fo:inline> is used as a custom
            connector provider in the example above. Please note that the connector provider cannot be registered as a provider
            using <fo:inline font-family="monospace">Configurable</fo:inline><fo:inline font-family="monospace">.register(...)</fo:inline>. Also, please note that in this API has changed
            in Jersey 2.5, where the <fo:inline font-family="monospace">ConnectorProvider</fo:inline> SPI has been introduced in order to decouple client
            initialization from the connector instantiation. Starting with Jersey 2.5 it is therefore not possible to directly
            register <fo:inline font-family="monospace">Connector</fo:inline> instances in the Jersey <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientConfig.html)"><fo:inline>ClientConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientConfig.html</fo:basic-link>]</fo:inline>. The new
            <fo:inline font-family="monospace">ConnectorProvider</fo:inline> SPI must be used instead to configure a custom client-side transport connector.
        </fo:block></fo:block><fo:block id="d0e5220"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Using client request and response filters</fo:marker><fo:block font-size="20.735999999999997pt">5.6. Using client request and response filters</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Filtering requests and responses can provide useful lower-level concept focused on a certain independent aspect or
            domain that is decoupled from the application layer of building and sending requests, and processing responses.
            Filters can read/modify the request URI, headers and entity or read/modify the response status, headers and entity.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Jersey contains the following useful client-side filters (and features registering filters)
            that you may want to use in your applications:

            <fo:table space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5227" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/filter/CsrfProtectionFilter.html)"><fo:inline>CsrfProtectionFilter</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/filter/CsrfProtectionFilter.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/filter/CsrfProtectionFilter.html</fo:basic-link>]</fo:inline>: Cross-site request forgery protection filter (adds
                    <fo:inline font-family="monospace">X-Requested-By</fo:inline> to each state changing request).</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/filter/EncodingFeature.html)"><fo:inline>EncodingFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/filter/EncodingFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/filter/EncodingFeature.html</fo:basic-link>]</fo:inline>: Feature that registers encoding filter which use registered
                    <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/spi/ContentEncoder.html)"><fo:inline>ContentEncoder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/spi/ContentEncoder.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/spi/ContentEncoder.html</fo:basic-link>]</fo:inline>s to encode and decode the communication. The encoding/decoding is performed
                    in interceptor (you don't need to register this interceptor). Check the javadoc of the
                    <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/filter/EncodingFeature.html)"><fo:inline>EncodingFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/filter/EncodingFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/filter/EncodingFeature.html</fo:basic-link>]</fo:inline> in order to use it.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/authentication/HttpAuthenticationFeature.html)"><fo:inline>HttpAuthenticationFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/authentication/HttpAuthenticationFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/authentication/HttpAuthenticationFeature.html</fo:basic-link>]</fo:inline>: HTTP Authentication Feature
                    (see <fo:inline>???</fo:inline>
                    below).</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

            Note that these features are provided by Jersey, but since they use and implement JAX-RS API, the features should
            be portable and run in any JAX-RS implementation, not just Jersey. See <fo:basic-link internal-destination="filters-and-interceptors"><fo:inline>Chapter 10, <fo:inline font-style="italic">Filters and Interceptors</fo:inline></fo:inline></fo:basic-link>
            chapter for more information on filters and interceptors.
        </fo:block></fo:block><fo:block id="d0e5254"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Closing connections</fo:marker><fo:block font-size="20.735999999999997pt">5.7. Closing connections</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The underlying connections are opened for each request
            and closed after the response is received and entity is processed (entity is read). See the
            following example:
        </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e5259"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 5.6. Closing connections</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e5262">  1 final WebTarget target = ... some web target
  2 Response response = target.path("resource").request().get();
  3 System.out.println("Connection is still open.");
  4 System.out.println("string response: " + response.readEntity(String.class));
  5 System.out.println("Now the connection is closed.");</fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            If you don't read the entity, then you need to close the response manually by
            <fo:inline font-family="monospace">response.close()</fo:inline>. Also if the entity is read into an <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/io/InputStream.html)"><fo:inline>InputStream</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/io/InputStream.html)">http://docs.oracle.com/javase/6/docs/api/java/io/InputStream.html</fo:basic-link>]</fo:inline>
            (by <fo:inline font-family="monospace">response.readEntity(InputStream.class)</fo:inline>), the connection stays open until
            you finish reading from the <fo:inline font-family="monospace">InputStream</fo:inline>. In that case, the InputStream
            or the Response should be closed manually at the end of reading from InputStream.
        </fo:block></fo:block><fo:block id="d0e5278"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Injections into client providers</fo:marker><fo:block font-size="20.735999999999997pt">5.8. Injections into client providers</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In some cases you might need to inject some custom types into your client provider instance. JAX-RS
            types do not need to be injected as they are passed as arguments into API methods.
            Injections into client providers (filters, interceptor) are possible as long as the provider is
            registered as a class. If the provider is registered as an instance then runtime will not inject
            the provider. The reason is that this provider instance might be registered into multiple client
            configurations. For example one instance of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientRequestFilter.html)"><fo:inline>ClientRequestFilter</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientRequestFilter.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientRequestFilter.html</fo:basic-link>]</fo:inline> can be registered
            to two <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)"><fo:inline>Client</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html</fo:basic-link>]</fo:inline>s.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            To solve injection of a custom type into a client provider instance
            use <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ServiceLocatorClientProvider.html)"><fo:inline>ServiceLocatorClientProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ServiceLocatorClientProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ServiceLocatorClientProvider.html</fo:basic-link>]</fo:inline> to
            extract <fo:basic-link external-destination="url(https://hk2.java.net/apidocs/org/glassfish/hk2/api/ServiceLocator.html)"><fo:inline>ServiceLocator</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://hk2.java.net/apidocs/org/glassfish/hk2/api/ServiceLocator.html)">https://hk2.java.net/apidocs/org/glassfish/hk2/api/ServiceLocator.html</fo:basic-link>]</fo:inline> which can return the required injection. The following example shows how to utilize
            <fo:inline font-family="monospace">ServiceLocatorClientProvider</fo:inline>:
        </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e5300"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 5.7. ServiceLocatorClientProvider example</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e5303">  1 public static class MyRequestFilter implements ClientRequestFilter {
  2     // this injection does not work as filter is registered as an instance:
  3     // @Inject
  4     // private MyInjectedService service;
  5 
  6     @Override
  7     public void filter(ClientRequestContext requestContext) throws IOException {
  8         // use ServiceLocatorClientProvider to extract HK2 ServiceLocator from request
  9         final ServiceLocator locator = ServiceLocatorClientProvider.getServiceLocator(requestContext);
 10 
 11         // and ask for MyInjectedService:
 12         final MyInjectedService service = locator.getService(MyInjectedService.class);
 13 
 14         final String name = service.getName();
 15         ...
 16     }
 17 }</fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            For more information see javadoc of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ServiceLocatorClientProvider.html)"><fo:inline>ServiceLocatorClientProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ServiceLocatorClientProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ServiceLocatorClientProvider.html</fo:basic-link>]</fo:inline>
            (and javadoc of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/ServiceLocatorProvider.html)"><fo:inline>ServiceLocatorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/ServiceLocatorProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/ServiceLocatorProvider.html</fo:basic-link>]</fo:inline> which supports common JAX-RS components).
        </fo:block></fo:block><fo:block id="d0e5313"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Securing a Client</fo:marker><fo:block font-size="20.735999999999997pt">5.9. Securing a Client</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            This section describes how to setup SSL configuration on Jersey client (using JAX-RS API). The SSL configuration is
            setup in <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html)"><fo:inline>ClientBuilder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html</fo:basic-link>]</fo:inline>. The client builder contains methods for definition of <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/security/KeyStore.html)"><fo:inline>KeyStore</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/security/KeyStore.html)">http://docs.oracle.com/javase/6/docs/api/java/security/KeyStore.html</fo:basic-link>]</fo:inline>,
            <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/security/TrustStore.html)"><fo:inline>TrustStore</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/security/TrustStore.html)">http://docs.oracle.com/javase/6/docs/api/java/security/TrustStore.html</fo:basic-link>]</fo:inline> or entire <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/javax/net/ssl/SslContext.html)"><fo:inline>SslContext</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/javax/net/ssl/SslContext.html)">http://docs.oracle.com/javase/6/docs/api/javax/net/ssl/SslContext.html</fo:basic-link>]</fo:inline>. See the following example:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e5330">  1 SSLContext ssl = ... your configured SSL context;
  2 Client client = ClientBuilder.newBuilder().sslContext(ssl).build();
  3 Response response = client.target("https://example.com/resource").request().get();</fo:block>

            The example above shows how to setup a custom <fo:inline font-family="monospace">SslContext</fo:inline> to the <fo:inline font-family="monospace">ClientBuilder</fo:inline>.
            Creating a <fo:inline font-family="monospace">SslContext</fo:inline> can be more difficult as you might need to init instance properly with the protocol,
            <fo:inline font-family="monospace">KeyStore</fo:inline>, <fo:inline font-family="monospace">TrustStore</fo:inline>, etc. Jersey offers a utility <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/SslConfigurator.html)"><fo:inline>SslConfigurator</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/SslConfigurator.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/SslConfigurator.html</fo:basic-link>]</fo:inline> class that
            can be used to setup the <fo:inline font-family="monospace">SslContext</fo:inline>. The <fo:inline font-family="monospace">SslConfigurator</fo:inline> can be configured based on
            standardized system properties for SSL configuration, so for example you can configure the <fo:inline font-family="monospace">KeyStore</fo:inline> file
            name using a environment variable <fo:inline font-family="monospace">javax.net.ssl.keyStore</fo:inline> and <fo:inline font-family="monospace">SslConfigurator</fo:inline>
            will use such a variable to setup the <fo:inline font-family="monospace">SslContext</fo:inline>. See javadoc of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/SslConfigurator.html)"><fo:inline>SslConfigurator</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/SslConfigurator.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/SslConfigurator.html</fo:basic-link>]</fo:inline> for more
            details. The following code shows how a <fo:inline font-family="monospace">SslConfigurator</fo:inline> can be used to create a custom SSL
            context.

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e5375">  1 SslConfigurator sslConfig = SslConfigurator.newInstance()
  2         .trustStoreFile("./truststore_client")
  3         .trustStorePassword("secret-password-for-truststore")
  4         .keyStoreFile("./keystore_client")
  5         .keyPassword("secret-password-for-keystore");
  6 
  7 SSLContext sslContext = sslConfig.createSSLContext();
  8 Client client = ClientBuilder.newBuilder().sslContext(sslContext).build();</fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Note that you can also setup <fo:inline font-family="monospace">KeyStore</fo:inline> and <fo:inline font-family="monospace">TrustStore</fo:inline> directly on a
            <fo:inline font-family="monospace">ClientBuilder</fo:inline> instance without wrapping them into the <fo:inline font-family="monospace">SslContext</fo:inline>. However, if you setup
            a <fo:inline font-family="monospace">SslContext</fo:inline> it will override any previously defined <fo:inline font-family="monospace">KeyStore</fo:inline> and <fo:inline font-family="monospace">TrustStore</fo:inline>
            settings.
            <fo:inline font-family="monospace">ClientBuilder</fo:inline> also offers a method for defining a custom <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/javax/net/ssl/HostnameVerifier.html)"><fo:inline>HostnameVerifier</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/javax/net/ssl/HostnameVerifier.html)">http://docs.oracle.com/javase/6/docs/api/javax/net/ssl/HostnameVerifier.html</fo:basic-link>]</fo:inline> implementation.
            <fo:inline font-family="monospace">HostnameVerifier</fo:inline> implementations are invoked when default host URL verification fails.
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e5410"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Important</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                A behaviour of <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/javax/net/ssl/HostnameVerifier.html)"><fo:inline>HostnameVerifier</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/javax/net/ssl/HostnameVerifier.html)">http://docs.oracle.com/javase/6/docs/api/javax/net/ssl/HostnameVerifier.html</fo:basic-link>]</fo:inline> is dependent on an http client implementation.
                <fo:inline font-family="monospace">HttpUrlConnectorProvider</fo:inline> and <fo:inline font-family="monospace">ApacheConnectorProvider</fo:inline> work properly, that means that after
                the unsuccessful URL verification <fo:inline font-family="monospace">HostnameVerifier</fo:inline> is called and by means of it is possible to
                revalidate URL using a custom implementation of <fo:inline font-family="monospace">HostnameVerifier</fo:inline> and go on in a handskahe processing.
                <fo:inline font-family="monospace">JettyConnectorProvider</fo:inline> and <fo:inline font-family="monospace">GrizzlyConnectorProvider</fo:inline> provide only host URL verification
                and throw a <fo:inline font-family="monospace">CertificateException</fo:inline> without any possibility to use custom <fo:inline font-family="monospace">HostnameVerifier</fo:inline>.
                Moreover, in case of <fo:inline font-family="monospace">JettyConnectorProvider</fo:inline> there is a property
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/JettyClientProperties.html#ENABLE_SSL_HOSTNAME_VERIFICATION)"><fo:inline>JettyClientProperties.ENABLE_SSL_HOSTNAME_VERIFICATION</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/JettyClientProperties.html#ENABLE_SSL_HOSTNAME_VERIFICATION)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/JettyClientProperties.html#ENABLE_SSL_HOSTNAME_VERIFICATION</fo:basic-link>]</fo:inline> to disable an entire host URL verification
                mechanism in a handshake.
            </fo:block></fo:block></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e5446"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Important</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Note that to utilize HTTP with SSL it is necessary to utilize the <fo:inline font-family="monospace">“https”</fo:inline> scheme.
            </fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Currently the default connector provider <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/HttpUrlConnector.html)"><fo:inline>HttpUrlConnectorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/HttpUrlConnector.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/HttpUrlConnector.html</fo:basic-link>]</fo:inline> provides connectors based on
            <fo:inline font-family="monospace">HttpUrlConnection</fo:inline> which implement support for SSL defined by JAX-RS configuration discussed in this
            example.
        </fo:block><fo:block id="d0e5460"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Http Authentication Support</fo:marker><fo:block font-size="17.28pt">5.9.1. Http Authentication Support</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Jersey supports Basic and Digest HTTP Authentication.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e5465"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Important</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    In version prior to Jersey 2.5 the support was
                    provided by <fo:inline font-family="monospace">org.glassfish.jersey.client.filter.HttpBasicAuthFilter</fo:inline>
                    and <fo:inline font-family="monospace">org.glassfish.jersey.client.filter.HttpDigestAuthFilter</fo:inline>. Since Jersey
                    2.5 these filters are deprecated (and removed in 2.6) and both authentication methods
                    are provided by single <fo:inline font-family="monospace">Feature</fo:inline>
                    <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/authentication/HttpAuthenticationFeature.html)"><fo:inline>HttpAuthenticationFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/authentication/HttpAuthenticationFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/authentication/HttpAuthenticationFeature.html</fo:basic-link>]</fo:inline>.
                </fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                In order to enable http authentication support in Jersey client register
                the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/authentication/HttpAuthenticationFeature.html)"><fo:inline>HttpAuthenticationFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/authentication/HttpAuthenticationFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/authentication/HttpAuthenticationFeature.html</fo:basic-link>]</fo:inline>. This feature can provide both authentication methods, digest
                and basic. Feature can work in the following modes:
            </fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e5485"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5486"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        <fo:inline font-style="italic">BASIC:</fo:inline> Basic preemptive authentication. In preemptive mode the authentication information
                          is send always with each HTTP request. This mode is more usual than the following non-preemptive mode
                          (if you require BASIC authentication you will probably use this preemptive mode). This mode must
                          be combined with usage of SSL/TLS as the password is send only BASE64 encoded.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5492"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        <fo:inline font-style="italic">BASIC NON-PREEMPTIVE:</fo:inline>Basic non-preemptive authentication. In non-preemptive mode the
                          authentication information is added only when server refuses the request with <fo:inline font-family="monospace">401</fo:inline> status code and
                          then the request is repeated with authentication information. This mode has negative impact on the performance.
                          The advantage is that it does not send credentials when they are not needed. This mode must
                          be combined with usage of SSL/TLS as the password is send only BASE64 encoded.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5501"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        <fo:inline font-style="italic">DIGEST:</fo:inline> Http digest authentication. Does not require usage of SSL/TLS.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5507"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        <fo:inline font-style="italic">UNIVERSAL:</fo:inline> Combination of basic and digest authentication. The feature works in non-preemptive
                          mode which means that it sends requests without authentication information. If <fo:inline font-family="monospace">401</fo:inline> status
                          code is returned, the request is repeated and an appropriate authentication is used based on the
                          authentication requested in the response (defined in <fo:inline font-family="monospace">WWW-Authenticate</fo:inline> HTTP header. The feature
                          remembers which authentication requests were successful for given URI and next time tries to preemptively
                          authenticate against this URI with latest successful authentication method.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                To initialize the feature use static methods and builder of this feature. Example of building the feature in
                 Basic authentication mode:
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e5521">  1 HttpAuthenticationFeature feature = HttpAuthenticationFeature.basic("user", "superSecretPassword");</fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Example of building the feature in basic non-preemptive mode:
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e5526">  1 HttpAuthenticationFeature feature = HttpAuthenticationFeature.basicBuilder()
  2     .nonPreemptive().credentials("user", "superSecretPassword").build();</fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                You can also build the feature without any default credentials:
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e5531">  1 HttpAuthenticationFeature feature = HttpAuthenticationFeature.basicBuilder().build();</fo:block>
                In this case you need to supply username and password for each request using request properties:
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e5534">  1 Response response = client.target("http://localhost:8080/rest/homer/contact").request()
  2     .property(HTTP_AUTHENTICATION_BASIC_USERNAME, "homer")
  3     .property(HTTP_AUTHENTICATION_BASIC_PASSWORD, "p1swd745").get();</fo:block>
                This allows you to reuse the same client for authenticating with many different credentials.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                See javadoc of the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/authentication/HttpAuthenticationFeature.html)"><fo:inline>HttpAuthenticationFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/authentication/HttpAuthenticationFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/authentication/HttpAuthenticationFeature.html</fo:basic-link>]</fo:inline> for more details.
            </fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Reactive JAX-RS Client API</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Reactive JAX-RS Client API</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="rx-client"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 6. Reactive JAX-RS Client API</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e5546"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Warning</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Jersey 2.26 (JAX-RS 2.1 implementation) dropped Jersey-proprietary API in favor of JAX-RS 2.1 Reactive Client API.
        </fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Reactive client extension is quite a generic API allowing end users to utilize the popular reactive programming model
        when using JAX-RS Client. The API is designed to be extensible, so any existing reactive framework can integrate with
        it and there is build in support for CompletionStage. Along with describing the API itself, this section also covers
        existing extension modules and provides hints to implement a custom extension if needed.
    </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        If you are not familiar with the JAX-RS Client API, it is recommended that you see <fo:basic-link internal-destination="client"><fo:inline>Chapter 5, <fo:inline font-style="italic">Client API</fo:inline></fo:inline></fo:basic-link>
        where the basics of JAX-RS Client API along with some advanced techniques are described.
    </fo:block><fo:block id="d0e5555"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Motivation for Reactive Client Extension</fo:marker><fo:block font-size="20.735999999999997pt">6.1. Motivation for Reactive Client Extension</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e5558"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">The Problem</fo:marker><fo:block font-size="17.28pt">The Problem</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Imagine a travel agency whose information system consists of multiple basic services. These services might be built
                using different technologies (JMS, EJB, WS, ...). For simplicity we presume that the services can be
                consumed using REST interface via HTTP method calls (e.g. using a JAX-RS Client). We also presume that the basic
                services we need to work with are:

                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e5563"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5564"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-style="italic">Customers service</fo:inline> – provides information about customers of the travel agency.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5570"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-style="italic">Destinations service</fo:inline> – provides a list of visited and recommended destinations
                            for an authenticated customer.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5576"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-style="italic">Weather service</fo:inline> – provides weather forecast for a given destination.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5582"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-style="italic">Quoting service</fo:inline> – provides price calculation for a customer to travel to
                            a recommended destination.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The task is to create a publicly available feature that would, for an authenticated user, display a list of 10 last visited places and
                also display a list of 10 new recommended destinations including weather forecast and price calculations for the
                user. Notice that some of the requests (to retrieve data) depend on results of previous requests. E.g. getting
                recommended destinations depends on obtaining information about the authenticated user first. Obtaining weather
                forecast depends on destination information, etc. This relationship between some of the requests is an important part of the
                problem and an area where you can take a real advantage of the reactive programming model.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                One way how to obtain data is to make multiple HTTP method calls from the client (e.g. mobile device) to all
                services involved and combine the retrieved data on the client. However, since the basic services are available
                in the internal network only we'd rather create a public orchestration layer instead of exposing all internal services to the outside world.
                The orchestration layer would expose only the desired operations of the basic services
                to the public. To limit traffic and achieve lower latency we'd like to return all the necessary
                information to the client in a single response.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The orchestration layer is illustrated in the <fo:basic-link internal-destination="rx.client.motivation.problem"><fo:inline>Figure 6.1</fo:inline></fo:basic-link>.
                The layer accepts requests from the outside and is responsible of invoking multiple requests to the internal services.
                When responses from the internal services are available in the orchestration layer they're combined into
                a single response that is sent back to the client.

                <fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="rx.client.motivation.problem"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Figure 6.1. Travel Agency Orchestration Service</fo:block><fo:block id="d0e5600" text-align="center"><fo:external-graphic src="url(images/rx-client-problem.png)" width="80%" height="auto" content-width="scale-to-fit" content-height="scale-to-fit" content-type="content-type:image/png" text-align="center"/></fo:block></fo:block>

                The next sections describe various approaches (using JAX-RS Client) how the orchestration layer can be implemented.
            </fo:block></fo:block><fo:block id="d0e5604"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">A Naive Approach</fo:marker><fo:block font-size="17.28pt">A Naive Approach</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The simplest way to implement the orchestration layer is to use synchronous approach. For this purpose we can use
                JAX-RS Client Sync API (see <fo:basic-link internal-destination="rx.client.motivation.naive"><fo:inline>Example 6.1, “Excerpt from a synchronous approach while implementing the orchestration layer”</fo:inline></fo:basic-link>). The implementation is simple to do,
                easy to read and straightforward to debug.

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="rx.client.motivation.naive"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 6.1. Excerpt from a synchronous approach while implementing the orchestration layer</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e5614">  1 final WebTarget destination = ...;
  2 final WebTarget forecast = ...;
  3 
  4 // Obtain recommended destinations.
  5 List&lt;Destination&gt; recommended = Collections.emptyList();
  6 try {
  7     recommended = destination.path("recommended").request()
  8             // Identify the user.
  9             .header("Rx-User", "Sync")
 10             // Return a list of destinations.
 11             .get(new GenericType&lt;List&lt;Destination&gt;&gt;() {});
 12 } catch (final Throwable throwable) {
 13     errors.offer("Recommended: " + throwable.getMessage());
 14 }
 15 
 16 // Forecasts. (depend on recommended destinations)
 17 final Map&lt;String, Forecast&gt; forecasts = new HashMap&lt;&gt;();
 18 for (final Destination dest : recommended) {
 19     try {
 20         forecasts.put(dest.getDestination(),
 21                 forecast.resolveTemplate("destination", dest.getDestination()).request().get(Forecast.class));
 22     } catch (final Throwable throwable) {
 23         errors.offer("Forecast: " + throwable.getMessage());
 24     }
 25 }</fo:block></fo:block></fo:block>

                The downside of this approach is it's slowness. You need to sequentially process all the independent requests which
                means that you're wasting resources. You are needlessly blocking threads, that could be otherwise used for some real work.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                If you take a closer look at the example you can notice that at the moment when all the recommended destinations are
                available for further processing we try to obtain forecasts for these destinations. Obtaining a weather forecast
                can be done only for a single destination with a single request, so we need to make 10 requests to
                the <fo:inline font-style="italic">Forecast service</fo:inline> to get all the destinations covered. In a synchronous way this means getting the forecasts
                one-by-one. When one response with a forecast arrives we can send another request to obtain another one. This takes
                time. The whole process of constructing a response for the client can be seen in
                <fo:basic-link internal-destination="rx.client.motivation.graph.sync"><fo:inline>Figure 6.2</fo:inline></fo:basic-link>.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Let's try to quantify this with assigning an approximate time to every request we make to the internal services.
                This way we can easily compute the time needed to complete a response for the client. For example, obtaining

                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e5626"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5627"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-style="italic">Customer details</fo:inline> takes 150 ms</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5632"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-style="italic">Recommended destinations</fo:inline> takes 250 ms</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5637"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-style="italic">Price calculation for a customer and destination</fo:inline> takes 170 ms (each)</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5642"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-style="italic">Weather forecast for a destination</fo:inline> takes 330 ms (each)</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

                When summed up, 5400 ms is approximately needed to construct a response for the client.

                <fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="rx.client.motivation.graph.sync"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Figure 6.2. Time consumed to create a response for the client – synchronous way</fo:block><fo:block id="d0e5651" text-align="center"><fo:external-graphic src="url(images/rx-client-sync-approach.png)" width="80%" height="auto" content-width="scale-to-fit" content-height="scale-to-fit" content-type="content-type:image/png" text-align="center"/></fo:block></fo:block>

                Synchronous approach is better to use for lower number of requests (where the accumulated time doesn't matter that
                much) or for a single request that depends on the result of previous operations.
            </fo:block></fo:block><fo:block id="d0e5655"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Optimized Approach</fo:marker><fo:block font-size="17.28pt">Optimized Approach</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The amount of time needed by the synchronous approach can be lowered by invoking independent requests in parallel.
                We're going to use JAX-RS Client Async API to illustrate this approach. The implementation in this case is slightly
                more difficult to get right because of the nested callbacks and the need to wait at some points for the moment
                when all partial responses are ready to be processed. The implementation is also a little bit harder to debug and maintain.
                The nested calls are causing a lot of complexity here. An example of concrete Java code following the asynchronous approach
                can be seen in <fo:basic-link internal-destination="rx.client.motivation.optimized"><fo:inline>Example 6.2, “Excerpt from an asynchronous approach while implementing the orchestration layer”</fo:inline></fo:basic-link>.

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="rx.client.motivation.optimized"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 6.2. Excerpt from an asynchronous approach while implementing the orchestration layer</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e5665">  1 final WebTarget destination = ...;
  2 final WebTarget forecast = ...;
  3 
  4 // Obtain recommended destinations. (does not depend on visited ones)
  5 destination.path("recommended").request()
  6         // Identify the user.
  7         .header("Rx-User", "Async")
  8         // Async invoker.
  9         .async()
 10         // Return a list of destinations.
 11         .get(new InvocationCallback&lt;List&lt;Destination&gt;&gt;() {
 12             @Override
 13             public void completed(final List&lt;Destination&gt; recommended) {
 14                 final CountDownLatch innerLatch = new CountDownLatch(recommended.size());
 15 
 16                 // Forecasts. (depend on recommended destinations)
 17                 final Map&lt;String, Forecast&gt; forecasts = Collections.synchronizedMap(new HashMap&lt;&gt;());
 18                 for (final Destination dest : recommended) {
 19                     forecast.resolveTemplate("destination", dest.getDestination()).request()
 20                             .async()
 21                             .get(new InvocationCallback&lt;Forecast&gt;() {
 22                                 @Override
 23                                 public void completed(final Forecast forecast) {
 24                                     forecasts.put(dest.getDestination(), forecast);
 25                                     innerLatch.countDown();
 26                                 }
 27 
 28                                 @Override
 29                                 public void failed(final Throwable throwable) {
 30                                     errors.offer("Forecast: " + throwable.getMessage());
 31                                     innerLatch.countDown();
 32                                 }
 33                             });
 34                 }
 35 
 36                 // Have to wait here for dependent requests ...
 37                 try {
 38                     if (!innerLatch.await(10, TimeUnit.SECONDS)) {
 39                         errors.offer("Inner: Waiting for requests to complete has timed out.");
 40                     }
 41                 } catch (final InterruptedException e) {
 42                     errors.offer("Inner: Waiting for requests to complete has been interrupted.");
 43                 }
 44 
 45                 // Continue with processing.
 46             }
 47 
 48             @Override
 49             public void failed(final Throwable throwable) {
 50                 errors.offer("Recommended: " + throwable.getMessage());
 51             }
 52         });</fo:block></fo:block></fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The example is a bit more complicated from the first glance. We provided an <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/InvocationCallback.html)"><fo:inline>InvocationCallback</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/InvocationCallback.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/InvocationCallback.html</fo:basic-link>]</fo:inline> to async
                <fo:inline font-family="monospace">get</fo:inline> method. One of the callback methods (<fo:inline font-family="monospace">completed</fo:inline> or <fo:inline font-family="monospace">failed</fo:inline>)
                is called when the request finishes. This is a pretty convenient way to handle async invocations when no nested
                calls are present. Since we have some nested calls (obtaining weather forecasts) we needed to introduce
                a <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/CountDownLatch.html)"><fo:inline>CountDownLatch</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/CountDownLatch.html)">http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/CountDownLatch.html</fo:basic-link>]</fo:inline> synchronization primitive as we use asynchronous approach in obtaining the weather
                forecasts as well. The latch is decreased every time a request, to the <fo:inline font-style="italic">Forecasts service</fo:inline>,
                completes successfully or fails. This indicates that the request actually finished and it is a signal for us that
                we can continue with processing (otherwise we wouldn't have all required data to construct the response for the
                client). This additional synchronization is something that was not present when taking the synchronous approach,
                but it is needed here.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Also the error processing can not be written as it could be in an ideal case. The error handling is scattered in
                too many places within the code, that it is quite difficult to create a comprehensive response for the client.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                On the other hand taking asynchronous approach leads to code that is as fast as it gets.
                The resources are used optimally (no waiting threads) to achieve
                quick response time. The whole process of constructing the response for the client can be seen in
                <fo:basic-link internal-destination="rx.client.motivation.graph.async"><fo:inline>Figure 6.3</fo:inline></fo:basic-link>. It only took 730 ms instead of
                5400 ms which we encountered in the previous approach.

                <fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="always" id="rx.client.motivation.graph.async"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Figure 6.3. Time consumed to create a response for the client – asynchronous way</fo:block><fo:block id="d0e5697" text-align="center"><fo:external-graphic src="url(images/rx-client-async-approach.png)" width="80%" height="auto" content-width="scale-to-fit" content-height="scale-to-fit" content-type="content-type:image/png" text-align="center"/></fo:block></fo:block>

                As you can guess, this approach, even with all it's benefits, is the one that is really hard to implement, debug
                and maintain. It's a safe bet when you have many independent calls to make but it gets uglier with an increasing
                number of nested calls.
            </fo:block></fo:block><fo:block id="d0e5701"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Reactive Approach</fo:marker><fo:block font-size="17.28pt">Reactive Approach</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Reactive approach is a way out of the so-called <fo:inline font-style="italic">Callback Hell</fo:inline> which you can encounter when
                dealing with Java's <fo:inline font-family="monospace">Future</fo:inline>s or invocation callbacks. Reactive approach is based on a data-flow
                concept and the execution model propagate changes through the flow. An example of a single item in the data-flow
                chain can be a JAX-RS Client HTTP method call. When the JAX-RS request finishes then the next item (or the user code)
                in the data-flow chain is notified about the continuation, completion or error in the chain. You're more describing
                what should be done next than how the next action in the chain should be triggered. The other important part here
                is that the data-flows are composable. You can compose/transform multiple flows into the resulting one and apply
                more operations on the result.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                An example of this approach can be seen in <fo:basic-link internal-destination="rx.client.motivation.reactive"><fo:inline>Example 6.3, “Excerpt from a reactive approach while implementing the orchestration layer”</fo:inline></fo:basic-link>. The APIs would be
                described in more detail in the next sections.

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="rx.client.motivation.reactive"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 6.3. Excerpt from a reactive approach while implementing the orchestration layer</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e5719">  1 final WebTarget destination = ...;
  2 final WebTarget forecast = ...;
  3 
  4 // Recommended places.
  5 CompletionStage&lt;List&lt;Destination&gt;&gt; recommended =
  6         destination.path("recommended")
  7                    .request()
  8                    // Identify the user.
  9                    .header("Rx-User", "CompletionStage")
 10                    // Reactive invoker.
 11                    .rx()
 12                    // Return a list of destinations.
 13                    .get(new GenericType&lt;List&lt;Destination&gt;&gt;() {})
 14                    .exceptionally(throwable -&gt; {
 15                        errors.offer("Recommended: " + throwable.getMessage());
 16                        return Collections.emptyList();
 17                    });
 18 
 19 // get Forecast for recommended destinations.
 20 return recommended.thenCompose(destinations -&gt; {
 21 
 22     List&lt;CompletionStage&lt;Recommendation&gt;&gt; recommendations = destinations.stream().map(destination -&gt; {
 23     // For each destination, obtain a weather forecast ...
 24     final CompletionStage&lt;Forecast&gt; forecastResult =
 25             forecast.resolveTemplate("destination", destination.getDestination())
 26                     .request().rx().get(Forecast.class)
 27                     .exceptionally(throwable -&gt; {
 28                         errors.offer("Forecast: " + throwable.getMessage());
 29                         return new Forecast(destination.getDestination(), "N/A");
 30                     });
 31 
 32                     //noinspection unchecked
 33                     return CompletableFuture.completedFuture(new Recommendation(destination))
 34                                             // Set forecast for recommended destination.
 35                                             .thenCombine(forecastResult, Recommendation::forecast)
 36                     }).collect(Collectors.toList());
 37 
 38                     // Transform List&lt;CompletionStage&lt;Recommendation&gt;&gt; to CompletionStage&lt;List&lt;Recommendation&gt;&gt;
 39                     return sequence(recommendations);
 40     });</fo:block></fo:block></fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                As you can see the code achieves the same work as the previous two examples. It's more readable than the pure
                asynchronous approach even though it's equally fast. It's as easy to read and implement as the synchronous approach.
                The error processing is also better handled in this way than in the asynchronous approach.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                When dealing with a large amount of requests (that depend on each other) and when you need to compose/combine the
                results of these requests, the reactive programming model is the right technique to use.
            </fo:block></fo:block></fo:block><fo:block id="d0e5726"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Usage and Extension Modules</fo:marker><fo:block font-size="20.735999999999997pt">6.2. Usage and Extension Modules</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Reactive Client API is part of the JAX-RS specification since version 2.1. 
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            When you compare synchronous invocation of HTTP calls (
            <fo:basic-link internal-destination="rx.client.sync"><fo:inline>Example 6.4, “Synchronous invocation of HTTP requests”</fo:inline></fo:basic-link>)

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="rx.client.sync"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 6.4. Synchronous invocation of HTTP requests</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e5738">  1 Response response = ClientBuilder.newClient()
  2         .target("http://example.com/resource")
  3         .request()
  4         .get();</fo:block></fo:block></fo:block>

            with asynchronous invocation (<fo:basic-link internal-destination="rx.client.async"><fo:inline>Example 6.5, “Asynchronous invocation of HTTP requests”</fo:inline></fo:basic-link>)

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="rx.client.async"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 6.5. Asynchronous invocation of HTTP requests</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e5746">  1 Future&lt;Response&gt; response = ClientBuilder.newClient()
  2         .target("http://example.com/resource")
  3         .request()
  4         .async()
  5         .get();</fo:block></fo:block></fo:block>

            it is apparent how to pretty conveniently modify the way how a request is invoked (from sync to async) only by calling
            <fo:inline font-family="monospace">async</fo:inline> method on an <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Invocation.Builder.html)"><fo:inline>Invocation.Builder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Invocation.Builder.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Invocation.Builder.html</fo:basic-link>]</fo:inline>.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Naturally, it'd be nice to copy the same pattern to allow invoking requests in a reactive way. Just instead of
            <fo:inline font-family="monospace">async</fo:inline> you'd call <fo:inline font-family="monospace">rx</fo:inline> on an extension of <fo:inline font-family="monospace">Invocation.Builder</fo:inline>,
            like in <fo:basic-link internal-destination="rx.client.reactive"><fo:inline>Example 6.6, “Reactive invocation of HTTP requests”</fo:inline></fo:basic-link>.

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="rx.client.reactive"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 6.6. Reactive invocation of HTTP requests</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e5771">  1 CompletionStage&lt;Response&gt; response = ClientBuilder.newClient()
  2         .target("http://example.com/resource")
  3         .request()
  4         .rx()
  5         .get();</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The first reactive interface in the invocation chain is <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvoker.html)"><fo:inline>RxInvoker</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvoker.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvoker.html</fo:basic-link>]</fo:inline> which is very similar to
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/SyncInvoker.html)"><fo:inline>SyncInvoker</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/SyncInvoker.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/SyncInvoker.html</fo:basic-link>]</fo:inline> and <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/AsyncInvoker.html)"><fo:inline>AsyncInvoker</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/AsyncInvoker.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/AsyncInvoker.html</fo:basic-link>]</fo:inline>. It contains all methods present in the two latter
            JAX-RS interfaces but the <fo:inline font-family="monospace">RxInvoker</fo:inline> interface is more generic, so that it can be extended
            and used in particular implementations taking advantage of various reactive libraries. Extending this new interface
            in a particular implementation also preserves type safety which means that you're not loosing type information when a HTTP
            method call returns an object that you want to process further.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The method "rx()" in the example above is perfect example of that principle. It returns <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/CompletionStageRxInvoker.html)"><fo:inline>CompletionStageRxInvoker</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/CompletionStageRxInvoker.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/CompletionStageRxInvoker.html</fo:basic-link>]</fo:inline>,
            which extends <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvoker.html)"><fo:inline>RxInvoker</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvoker.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvoker.html</fo:basic-link>]</fo:inline>.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            As a user of the Reactive Client API you only need to keep in mind that you won't be working with
            <fo:inline font-family="monospace">RxInvoker</fo:inline> directly. You'd rather be working with an extension of this interface created for
            a particular implementation and you don't need to be bothered much with why are things designed the way they are.

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e5801"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    To see how the <fo:inline font-family="monospace">RxInvoker</fo:inline> should be extended, refer to
                    <fo:basic-link internal-destination="rx.client.spi"><fo:inline>Section 6.4, “Implementing Support for Custom Reactive Libraries (SPI)”</fo:inline></fo:basic-link>.
                </fo:block></fo:block></fo:block>

            The important thing to notice here is that an extension of <fo:inline font-family="monospace">RxInvoker</fo:inline> holds the type
            information and the Reactive Client needs to know about this type to properly propagate it among the method
            calls you'll be making. This is the reason why other interfaces (described bellow) are parametrized with this type.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In order to extend the API to be used with other reactive frameworks, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvokerProvider.html)"><fo:inline>RxInvokerProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvokerProvider.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvokerProvider.html</fo:basic-link>]</fo:inline> needs to be
            registered into the Client runtime:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e5818">  1 Client client = ClientBuilder.newClient();
  2 client.register(RxFlowableInvokerProvider.class);
  3 
  4 Flowable&lt;String&gt; responseFlowable =
  5         client.target("http://jersey.java.net")
  6               .request()
  7               .rx(RxFlowableInvoker.class)
  8               .get(String.class);
  9 
 10 String responseString = responseFlowable.blockingFirst();</fo:block><fo:block id="d0e5820"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Dependencies</fo:marker><fo:block font-size="17.28pt">Dependencies</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    JAX-RS mandates support for CompletionStage, which doesn't required any other dependency and can be
                    used out of the box.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    To add support for a particular library, see the <fo:basic-link internal-destination="rx.client.supported"><fo:inline>Section 6.3, “Supported Reactive Libraries”</fo:inline></fo:basic-link>.
                </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e5829"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        If you're not using Maven (or other dependency management tool) make sure to add also all the transitive
                        dependencies of Jersey client module and any other extensions (when used) on the class-path.
                    </fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="rx.client.supported"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Supported Reactive Libraries</fo:marker><fo:block font-size="20.735999999999997pt">6.3. Supported Reactive Libraries</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            There are already some available reactive (or reactive-like) libraries out there and Jersey brings support for some of
            them out of the box. Jersey currently supports:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e5837"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5838"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link internal-destination="rx-client.rxjava"><fo:inline>RxJava (Observable)</fo:inline></fo:basic-link></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5841"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link internal-destination="rx-client.rxjava2"><fo:inline>RxJava (Flowable)</fo:inline></fo:basic-link></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e5844"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link internal-destination="rx-client.guava"><fo:inline>Guava (ListenableFuture and Futures)</fo:inline></fo:basic-link></fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
        </fo:block><fo:block id="rx-client.rxjava"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">RxJava (Observable)</fo:marker><fo:block font-size="17.28pt">6.3.1. RxJava – Observable</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:basic-link external-destination="url(https://github.com/ReactiveX/RxJava)"><fo:inline>RxJava</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/ReactiveX/RxJava)">https://github.com/ReactiveX/RxJava</fo:basic-link>]</fo:inline>, contributed by Netflix, is probably the most advanced reactive library for Java at the moment. It's
                used for composing asynchronous and event-based programs by using observable sequences. It uses the
                <fo:basic-link external-destination="url(http://en.wikipedia.org/wiki/Observer_pattern)"><fo:inline>observer pattern</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://en.wikipedia.org/wiki/Observer_pattern)">http://en.wikipedia.org/wiki/Observer_pattern</fo:basic-link>]</fo:inline> to support these sequences of data/events
                via it's <fo:basic-link external-destination="url(http://reactivex.io/RxJava/javadoc//rx/Observable.html)"><fo:inline>Observable</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://reactivex.io/RxJava/javadoc//rx/Observable.html)">http://reactivex.io/RxJava/javadoc//rx/Observable.html</fo:basic-link>]</fo:inline> entry point class which implements the Reactive Pattern. <fo:inline font-family="monospace">Observable</fo:inline> is
                actually the parameter type in the RxJava's extension of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvoker.html)"><fo:inline>RxInvoker</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvoker.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvoker.html</fo:basic-link>]</fo:inline>, called
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/rx/rxjava/RxObservableInvoker.html)"><fo:inline>RxObservableInvoker</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/rx/rxjava/RxObservableInvoker.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/rx/rxjava/RxObservableInvoker.html</fo:basic-link>]</fo:inline>. This means that the return type of HTTP method calls is
                <fo:inline font-family="monospace">Observable</fo:inline> in this case (accordingly parametrized).
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Requests are by default invoked at the moment when a subscriber is subscribed to an observable (it's a cold
                <fo:inline font-family="monospace">Observable</fo:inline>). If not said otherwise a separate thread (JAX-RS Async Client requests) is used to
                obtain data. This behavior can be overridden by providing an <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ExecutorService.html)"><fo:inline>ExecutorService</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ExecutorService.html)">http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ExecutorService.html</fo:basic-link>]</fo:inline> when a reactive
                <fo:inline font-family="monospace">Client</fo:inline> is created.
            </fo:block><fo:block id="d0e5887"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">Usage</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The extensibility is built-in JAX-RS Client API, so there are no special dependencies on Jersey Client
                    API other than the extension itself.

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="rx.client.rxjava.rx"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 6.7. Creating JAX-RS Client with RxJava reactive extension</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e5895">  1 // New Client
  2 Client client = ClientBuilder.newClient();
  3 client.register(RxObservableInvokerProvider.class);</fo:block></fo:block></fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    An example of obtaining <fo:inline font-family="monospace">Observable</fo:inline> with JAX-RS <fo:inline font-family="monospace">Response</fo:inline> from a remote service
                    can be seen in <fo:basic-link internal-destination="rx.client.rxjava.usage"><fo:inline>Example 6.8, “Obtaining Observable&lt;Response&gt; from Jersey/RxJava Client”</fo:inline></fo:basic-link>.

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="rx.client.rxjava.usage"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 6.8. Obtaining Observable&lt;Response&gt; from Jersey/RxJava Client</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e5911">  1 Observable&lt;Response&gt; observable = RxObservable.newClient()
  2                                                     .target("http://example.com/resource")
  3                                                     .request()
  4                                                     .rx(RxObservableInvoker.class)
  5                                                     .get();</fo:block></fo:block></fo:block>
                </fo:block></fo:block><fo:block id="d0e5914"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">Dependencies</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The RxJava support is available as an extension module in Jersey. For Maven users,
                    simply add the following dependency to your <fo:inline font-family="monospace">pom.xml</fo:inline>:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e5922">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.ext.rx&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-rx-client-rxjava&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>

                    After this step you can use the extended client right away. The dependency transitively adds the following
                    dependencies to your class-path as well: <fo:inline font-family="monospace">io.reactivex:rxjava</fo:inline>.
                </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e5928"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        If you're not using Maven (or other dependency management tool) make sure to add also all the transitive
                        dependencies of this extension module (see <fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-rx-client-rxjava/dependencies.html)"><fo:inline>jersey-rx-client-rxjava</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-rx-client-rxjava/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-rx-client-rxjava/dependencies.html</fo:basic-link>]</fo:inline>) on the class-path.
                    </fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="rx-client.rxjava2"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">RxJava (Flowable)</fo:marker><fo:block font-size="17.28pt">6.3.2. RxJava – Flowable</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:basic-link external-destination="url(https://github.com/ReactiveX/RxJava)"><fo:inline>RxJava</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/ReactiveX/RxJava)">https://github.com/ReactiveX/RxJava</fo:basic-link>]</fo:inline>, contributed by Netflix, is probably the most advanced reactive library for Java at the moment. It's
                used for composing asynchronous and event-based programs by using observable sequences. It uses the
                <fo:basic-link external-destination="url(http://en.wikipedia.org/wiki/Observer_pattern)"><fo:inline>observer pattern</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://en.wikipedia.org/wiki/Observer_pattern)">http://en.wikipedia.org/wiki/Observer_pattern</fo:basic-link>]</fo:inline> to support these sequences of data/events
                via it's <fo:basic-link external-destination="url(http://reactivex.io/RxJava/javadoc//rx/Flowable.html)"><fo:inline>Flowable</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://reactivex.io/RxJava/javadoc//rx/Flowable.html)">http://reactivex.io/RxJava/javadoc//rx/Flowable.html</fo:basic-link>]</fo:inline> entry point class which implements the Reactive Pattern. <fo:inline font-family="monospace">Flowable</fo:inline> is
                actually the parameter type in the RxJava's extension of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvoker.html)"><fo:inline>RxInvoker</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvoker.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvoker.html</fo:basic-link>]</fo:inline>, called
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/rx/rxjava2/RxFlowableInvoker.html)"><fo:inline>RxFlowableInvoker</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/rx/rxjava2/RxFlowableInvoker.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/rx/rxjava2/RxFlowableInvoker.html</fo:basic-link>]</fo:inline>. This means that the return type of HTTP method calls is
                <fo:inline font-family="monospace">Flowable</fo:inline> in this case (accordingly parametrized).
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Requests are by default invoked at the moment when a subscriber is subscribed to a flowable (it's a cold
                <fo:inline font-family="monospace">Flowable</fo:inline>). If not said otherwise a separate thread (JAX-RS Async Client requests) is used to
                obtain data. This behavior can be overridden by providing an <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ExecutorService.html)"><fo:inline>ExecutorService</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ExecutorService.html)">http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ExecutorService.html</fo:basic-link>]</fo:inline> when a reactive
                <fo:inline font-family="monospace">Client</fo:inline> is created.
            </fo:block><fo:block id="d0e5973"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">Usage</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The extensibility is built-in JAX-RS Client API, so there are no special dependencies on Jersey Client
                    API other than the extension itself.

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="rx.client.rxjava2.rx"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 6.9. Creating JAX-RS Client with RxJava2 reactive extension</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e5981">  1 // New Client
  2 Client client = ClientBuilder.newClient();
  3 client.register(RxFlowableInvokerProvider.class);</fo:block></fo:block></fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    An example of obtaining <fo:inline font-family="monospace">Flowable</fo:inline> with JAX-RS <fo:inline font-family="monospace">Response</fo:inline> from a remote service
                    can be seen in <fo:basic-link internal-destination="rx.client.rxjava.usage"><fo:inline>Example 6.8, “Obtaining Observable&lt;Response&gt; from Jersey/RxJava Client”</fo:inline></fo:basic-link>.

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="rx.client.rxjava2.usage"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 6.10. Obtaining Flowable&lt;Response&gt; from Jersey/RxJava Client</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e5997">  1 Flowable&lt;Response&gt; observable = RxObservable.newClient()
  2                             .target("http://example.com/resource")
  3                             .request()
  4                             .rx(RxFlowableInvoker.class)
  5                             .get();
  6                         </fo:block></fo:block></fo:block>
                </fo:block></fo:block><fo:block id="d0e6000"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">Dependencies</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The RxJava support is available as an extension module in Jersey. For Maven users,
                    simply add the following dependency to your <fo:inline font-family="monospace">pom.xml</fo:inline>:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e6008">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.ext.rx&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-rx-client-rxjava2&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>

                    After this step you can use the extended client right away. The dependency transitively adds the following
                    dependencies to your class-path as well: <fo:inline font-family="monospace">io.reactivex:rxjava2</fo:inline>.
                </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e6014"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        If you're not using Maven (or other dependency management tool) make sure to add also all the transitive
                        dependencies of this extension module (see <fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-rx-client-rxjava2/dependencies.html)"><fo:inline>jersey-rx-client-rxjava2</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-rx-client-rxjava2/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-rx-client-rxjava2/dependencies.html</fo:basic-link>]</fo:inline>) on the class-path.
                    </fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="rx-client.guava"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Guava (ListenableFuture and Futures)</fo:marker><fo:block font-size="17.28pt">6.3.3. Guava – ListenableFuture and Futures</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:basic-link external-destination="url(https://code.google.com/p/guava-libraries/)"><fo:inline>Guava</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://code.google.com/p/guava-libraries/)">https://code.google.com/p/guava-libraries/</fo:basic-link>]</fo:inline>, contributed by Google, also contains a type, <fo:basic-link external-destination="url(http://docs.guava-libraries.googlecode.com/git-history/v18.0/javadoc/com/google/common/util/concurrent/ListenableFuture.html)"><fo:inline>ListenableFuture</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.guava-libraries.googlecode.com/git-history/v18.0/javadoc/com/google/common/util/concurrent/ListenableFuture.html)">http://docs.guava-libraries.googlecode.com/git-history/v18.0/javadoc/com/google/common/util/concurrent/ListenableFuture.html</fo:basic-link>]</fo:inline>, which can be decorated with
                listeners that are notified when the future completes. The <fo:inline font-family="monospace">ListenableFuture</fo:inline> can be combined with
                <fo:basic-link external-destination="url(http://docs.guava-libraries.googlecode.com/git-history/v18.0/javadoc/com/google/common/util/concurrent/Futures.html)"><fo:inline>Futures</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.guava-libraries.googlecode.com/git-history/v18.0/javadoc/com/google/common/util/concurrent/Futures.html)">http://docs.guava-libraries.googlecode.com/git-history/v18.0/javadoc/com/google/common/util/concurrent/Futures.html</fo:basic-link>]</fo:inline> to achieve asynchronous/event-based completion aware processing. <fo:inline font-family="monospace">ListenableFuture</fo:inline>
                is the parameter type in the Guava's extension of <fo:inline font-family="monospace">RxInvoker</fo:inline>, called
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/rx/guava/RxListenableFutureInvoker.html)"><fo:inline>RxListenableFutureInvoker</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/rx/guava/RxListenableFutureInvoker.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/rx/guava/RxListenableFutureInvoker.html</fo:basic-link>]</fo:inline>. This means that the return type of HTTP method calls is
                <fo:inline font-family="monospace">ListenableFuture</fo:inline> in this case (accordingly parametrized).
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Requests are by default invoked immediately. If not said otherwise the <fo:basic-link external-destination="url(http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool--)"><fo:inline>Executors#newCachedThreadPool()</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool--)">http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool--</fo:basic-link>]</fo:inline> pool
                is used to obtain a thread which processed the request. This behavior can be overridden by providing a
                <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ExecutorService.html)"><fo:inline>ExecutorService</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ExecutorService.html)">http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ExecutorService.html</fo:basic-link>]</fo:inline> when a <fo:inline font-family="monospace">Client</fo:inline> is created.
            </fo:block><fo:block id="d0e6062"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">Usage</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The extensibility is built-in JAX-RS Client API, so there are no special dependencies on Jersey Client
                    API other than the extension itself.

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="rx.client.guava.rx"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 6.11. Creating Jersey/Guava Client</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e6070">  1 // New Client
  2 Client client = ClientBuilder.newClient();
  3 client.register(RxListenableFutureInvokerProvider.class);</fo:block></fo:block></fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    An example of obtaining <fo:inline font-family="monospace">ListenableFuture</fo:inline> with JAX-RS <fo:inline font-family="monospace">Response</fo:inline> from a remote
                    service can be seen in <fo:basic-link internal-destination="rx.client.guava.usage"><fo:inline>Example 6.12, “Obtaining ListenableFuture&lt;Response&gt; from Jersey/Guava Client”</fo:inline></fo:basic-link>.

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="rx.client.guava.usage"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 6.12. Obtaining ListenableFuture&lt;Response&gt; from Jersey/Guava Client</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e6086">  1 
  2 ListenableFuture&lt;Response&gt; response = client.target("http://jersey.java.net")
  3                                             .request()
  4                                             .rx(RxListenableFutureInvoker.class)
  5                                             .get();
  6 </fo:block></fo:block></fo:block>
                </fo:block></fo:block><fo:block id="d0e6089"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">Dependencies</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The Reactive Jersey Client with Guava support is available as an extension module in Jersey. For Maven users,
                    simply add the following dependency to your <fo:inline font-family="monospace">pom.xml</fo:inline>:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e6097">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.ext.rx&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-rx-client-guava&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>

                    After this step you can use the extended client right away. The dependency transitively adds the following
                    dependencies to your class-path as well: <fo:inline font-family="monospace">com.google.guava:guava</fo:inline>.
                </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e6103"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        If you're not using Maven (or other dependency management tool) make sure to add also all the transitive
                        dependencies of this extension module (see <fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-rx-client-guava/dependencies.html)"><fo:inline>jersey-rx-client-guava</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-rx-client-guava/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/project/jersey-rx-client-guava/dependencies.html</fo:basic-link>]</fo:inline>) on the class-path.
                    </fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="rx.client.spi"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Implementing Support for Custom Reactive Libraries (SPI)</fo:marker><fo:block font-size="20.735999999999997pt">6.4. Implementing Support for Custom Reactive Libraries (SPI)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In case you want to bring support for some other library providing Reactive Programming Model into your application
            you can extend functionality of Reactive JAX-RS Client by implementing <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvokerProvider.html)"><fo:inline>RxInvokerProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvokerProvider.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvokerProvider.html</fo:basic-link>]</fo:inline>, registering
            that implementation into the client runtime and then using rx(Class&lt;T&gt;) in your code.
        </fo:block><fo:block id="d0e6117"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Implement RxInvoker and RxInvokerProvider interfaces</fo:marker><fo:block font-size="17.28pt">Implement RxInvoker and RxInvokerProvider interfaces</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The first step when implementing support for another reactive library is to implement <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvoker.html)"><fo:inline>RxInvoker</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvoker.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvoker.html</fo:basic-link>]</fo:inline>.
                JAX-RS API itself contains one implementation, which will be used as an example: <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/CompletionStageRxInvoker.html)"><fo:inline>CompletionStageRxInvoker</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/CompletionStageRxInvoker.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/CompletionStageRxInvoker.html</fo:basic-link>]</fo:inline>.

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="rx.client.rxinvoker"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 6.13. Extending RxIvoker</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e6131">  1 public interface CompletionStageRxInvoker extends RxInvoker&lt;CompletionStage&gt; {
  2     @Override
  3     public CompletionStage&lt;Response&gt; get();
  4 
  5     @Override
  6     public &lt;T&gt; CompletionStage&lt;T&gt; get(Class&lt;T&gt; responseType);
  7 
  8     // ...
  9 }</fo:block></fo:block></fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The important fact to notice is that the generic parameter of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvoker.html)"><fo:inline>RxInvoker</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvoker.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvoker.html</fo:basic-link>]</fo:inline> is <fo:basic-link external-destination="url(http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletionStage.html)"><fo:inline>CompletionStage</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletionStage.html)">http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletionStage.html</fo:basic-link>]</fo:inline>
                and also that the return type is overriden to be always <fo:basic-link external-destination="url(http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletionStage.html)"><fo:inline>CompletionStage</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletionStage.html)">http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletionStage.html</fo:basic-link>]</fo:inline> with some generic param (<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html)"><fo:inline>Response</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html</fo:basic-link>]</fo:inline>;
                or T).
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                After having the extended RxInvoker interface, the implementor has to provide <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvokerProvider.html)"><fo:inline>RxInvokerProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvokerProvider.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/RxInvokerProvider.html</fo:basic-link>]</fo:inline>,
                which will be registered as an provider to a client instance.
            </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="rx.client.extend.rxinvoker"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 6.14. Extending RxInvokerProvider</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e6156">  1 public static class CompletionStageRxInvokerProvider implements RxInvokerProvider&lt;CompletionStageRxInvoker&gt; {
  2     @Override
  3     public boolean isProviderFor(Class&lt;?%gt; clazz) {
  4         return CompletionStage.class.equals(clazz);
  5     }
  6 
  7     @Override
  8     public CompletionStageRxInvoker getRxInvoker(SyncInvoker syncInvoker, ExecutorService executorService) {
  9         return new CompletionStageRxInvoker() {
 10             // ...
 11         };
 12     }
 13 }</fo:block></fo:block></fo:block></fo:block><fo:block id="d0e6158"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Example of using custom RxInvokerProvider</fo:marker><fo:block font-size="17.28pt">Example of using custom RxInvokerProvider</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Considering the work above was done and the implementation of custom <fo:inline font-family="monospace">RxInvoker</fo:inline> and
                <fo:inline font-family="monospace">RxInvokerProvider</fo:inline> is available, the client code using those extensions will be:
            </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e6169">  1 Client client = ClientBuilder.newClient();
  2 // register custom RxInvokerProvider
  3 client.register(CompletionStageRxInvokerProvider.class);
  4 
  5 CompletionStage&lt;Response&gt; response =
  6         client.target("http://jersey.java.net")
  7               .request()
  8               .rx(CompletionStageRxInvoker.class)
  9               // Now we have an instance of CompletionStageRxInvoker returned from our registered RxInvokerProvider,
 10               // which is CompletionStageRxInvokerProvider in this particular scenario.
 11               .get();</fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Representations and Responses</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Representations and Responses</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="representations"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 7. Representations and Responses</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="reps-and-types"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Representations and Java Types</fo:marker><fo:block font-size="20.735999999999997pt">7.1. Representations and Java Types</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Previous sections on <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html)"><fo:inline>@Produces</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html</fo:basic-link>]</fo:inline> and <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Consumes.html)"><fo:inline>@Consumes</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Consumes.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Consumes.html</fo:basic-link>]</fo:inline> annotations
            referred to media type of an entity representation. Examples above depicted resource
            methods that could consume and/or produce String Java type for a number of
	    different media types. This approach is easy to understand and relatively
	    straightforward when applied to simple use cases.
	    </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To cover also other cases, handling non-textual data for example or handling data stored in the file system, etc.,
            JAX-RS implementations are required to support also other kinds of media type
            conversions where additional, non-String, Java types are being utilized. Following is a short listing of the Java types
            that are supported out of the box with respect to supported media type:
            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e6188"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e6189"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>All media types (<fo:inline font-family="monospace">*/*</fo:inline>)
            		<fo:list-block provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e6194"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e6195"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">byte[]</fo:inline></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e6198"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">java.lang.String</fo:inline></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e6201"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">java.io.Reader</fo:inline> (inbound only)</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e6205"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">java.io.File</fo:inline></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e6208"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">javax.activation.DataSource</fo:inline></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e6211"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">javax.ws.rs.core.StreamingOutput</fo:inline> (outbound only)</fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e6215"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>XML media types (<fo:inline font-family="monospace">text/xml</fo:inline>, <fo:inline font-family="monospace">application/xml</fo:inline> and <fo:inline font-family="monospace">application/...+xml</fo:inline>)
            		<fo:list-block provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e6226"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e6227"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">javax.xml.transform.Source</fo:inline></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e6230"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">javax.xml.bind.JAXBElement</fo:inline></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e6233"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>Application supplied JAXB classes (types annotated with
	    <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/javax/xml/bind/annotation/XmlRootElement.html)"><fo:inline>@XmlRootElement</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/javax/xml/bind/annotation/XmlRootElement.html)">http://docs.oracle.com/javase/6/docs/api/javax/xml/bind/annotation/XmlRootElement.html</fo:basic-link>]</fo:inline>
	    or<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/javax/xml/bind/annotation/XmlType.html)"><fo:inline>@XmlType</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/javax/xml/bind/annotation/XmlType.html)">http://docs.oracle.com/javase/6/docs/api/javax/xml/bind/annotation/XmlType.html</fo:basic-link>]</fo:inline>)</fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e6241"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>Form content (<fo:inline font-family="monospace">application/x-www-form-urlencoded</fo:inline>)
                        <fo:list-block provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e6246"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e6247"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">MultivaluedMap&lt;String,String&gt;</fo:inline></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e6250"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>Plain text (<fo:inline font-family="monospace">text/plain</fo:inline>)
                        <fo:list-block provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e6255"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e6256"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">java.lang.Boolean</fo:inline></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e6259"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">java.lang.Character</fo:inline></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e6262"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:inline font-family="monospace">java.lang.Number</fo:inline></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Unlike method parameters that are associated with the extraction of
            request parameters, the method parameter associated with the
            representation being consumed does not require annotating. In other words the
            representation (entity) parameter does not require a specific 'entity' annotation. A method parameter
            without a annotation is an entity. A maximum of
            one such unannotated method parameter may exist since there may only be a
            maximum of one such representation sent in a request.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The representation being produced corresponds to what is returned by
            the resource method. For example JAX-RS makes it simple to produce images
            that are instance of
            <fo:inline font-family="monospace">File</fo:inline>
            as follows:
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e6275"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 7.1. Using
                    <fo:inline font-family="monospace">File</fo:inline>
                    with a specific media type to produce a response
                </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e6281">  1 @GET
  2 @Path("/images/{image}")
  3 @Produces("image/*")
  4 public Response getImage(@PathParam("image") String image) {
  5   File f = new File(image);
  6 
  7   if (!f.exists()) {
  8     throw new WebApplicationException(404);
  9   }
 10 
 11   String mt = new MimetypesFileTypeMap().getContentType(f);
 12   return Response.ok(f, mt).build();
 13 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The
            <fo:inline font-family="monospace">File</fo:inline> type can also be used when consuming a representation (request entity).
            In that case a temporary file will be created from the incoming request entity and passed as a
            parameter to the resource method.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The <fo:inline font-family="monospace">Content-Type</fo:inline> response header
            (if not set programmatically as described in the next section)
            will be automatically set based on the media types declared by <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html)"><fo:inline>@Produces</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html</fo:basic-link>]</fo:inline> annotation.
 Given the following method, the most acceptable media type is used when multiple output media types are allowed:
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e6299">  1 @GET
  2 @Produces({"application/xml", "application/json"})
  3 public String doGetAsXmlOrJson() {
  4   ...
  5 }</fo:block>

            If <fo:inline font-family="monospace">application/xml</fo:inline> is the most acceptable media type defined
            by the request (e.g. by header <fo:inline font-family="monospace">Accept: application/xml</fo:inline>), then the
            <fo:inline font-family="monospace">Content-Type</fo:inline> response header
            will be set to <fo:inline font-family="monospace">application/xml</fo:inline>.
        </fo:block></fo:block><fo:block id="d0e6314"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Building Responses</fo:marker><fo:block font-size="20.735999999999997pt">7.2. Building Responses</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Sometimes it is necessary to return additional
            information in response to a HTTP request. Such information may be built
            and returned using <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html)"><fo:inline>Response</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html</fo:basic-link>]</fo:inline> and <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.ResponseBuilder.html)"><fo:inline>Response.ResponseBuilder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.ResponseBuilder.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.ResponseBuilder.html</fo:basic-link>]</fo:inline>.
            For example, a common RESTful pattern for the creation of a new resource
            is to support a POST request that returns a 201 (Created) status code and
            a
            <fo:inline font-family="monospace">Location</fo:inline>
            header whose value is the URI to the newly
            created resource. This may be achieved as follows:
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e6330"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 7.2. Returning 201 status code and adding
                    <fo:inline font-family="monospace">Location</fo:inline>
                    header in response to POST request
                </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e6336">  1 @POST
  2 @Consumes("application/xml")
  3 public Response post(String content) {
  4   URI createdUri = ...
  5   create(content);
  6   return Response.created(createdUri).build();
  7 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">In the above no representation produced is returned, this can be
            achieved by building an entity as part of the response as follows:
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e6343"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 7.3. Adding an entity body to a custom response</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e6346">  1 @POST
  2 @Consumes("application/xml")
  3 public Response post(String content) {
  4   URI createdUri = ...
  5   String createdContent = create(content);
  6   return Response.created(createdUri).entity(Entity.text(createdContent)).build();
  7 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Response building provides other functionality such as setting the
            entity tag and last modified date of the representation.
        </fo:block></fo:block><fo:block id="d0e6351"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">WebApplicationException and Mapping Exceptions to Responses</fo:marker><fo:block font-size="20.735999999999997pt">7.3. WebApplicationException and Mapping Exceptions to Responses</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Previous section shows how to return HTTP responses,
              that are built up programmatically.
            It is possible to use the very same mechanism
            to return HTTP errors directly,
            e.g. when handling exceptions in a try-catch block.
            However, to better align with the Java programming model,
            JAX-RS allows to define direct mapping of Java exceptions to HTTP error responses.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The following example shows throwing
            <fo:inline font-family="monospace">CustomNotFoundException</fo:inline>
            from a resource method in order to return an error HTTP response to the client:
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e6363"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 7.4. Throwing exceptions to control response</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e6366">  1 @Path("items/{itemid}/")
  2 public Item getItem(@PathParam("itemid") String itemid) {
  3   Item i = getItems().get(itemid);
  4   if (i == null) {
  5     throw new CustomNotFoundException("Item, " + itemid + ", is not found");
  6   }
  7 
  8   return i;
  9 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">This exception is an application specific exception that extends <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/WebApplicationException.html)"><fo:inline>WebApplicationException</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/WebApplicationException.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/WebApplicationException.html</fo:basic-link>]</fo:inline>
            and builds a HTTP response with the 404 status code and an optional
            message as the body of the response:
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e6376"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 7.5. Application specific exception implementation</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e6379">  1 public class CustomNotFoundException extends WebApplicationException {
  2 
  3   /**
  4   * Create a HTTP 404 (Not Found) exception.
  5   */
  6   public CustomNotFoundException() {
  7     super(Responses.notFound().build());
  8   }
  9 
 10   /**
 11   * Create a HTTP 404 (Not Found) exception.
 12   * @param message the String that is the entity of the 404 response.
 13   */
 14   public CustomNotFoundException(String message) {
 15     super(Response.status(Responses.NOT_FOUND).
 16     entity(message).type("text/plain").build());
 17   }
 18 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">In other cases it may not be appropriate to throw instances of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/WebApplicationException.html)"><fo:inline>WebApplicationException</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/WebApplicationException.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/WebApplicationException.html</fo:basic-link>]</fo:inline>,
            or classes that extend <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/WebApplicationException.html)"><fo:inline>WebApplicationException</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/WebApplicationException.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/WebApplicationException.html</fo:basic-link>]</fo:inline>, and instead it may be preferable to map an existing exception to a
            response. For such cases it is possible to use a custom exception mapping provider. The provider must implement
            the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/ExceptionMapper.html)"><fo:inline>ExceptionMapper&lt;E extends Throwable&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/ExceptionMapper.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/ExceptionMapper.html</fo:basic-link>]</fo:inline> interface. For example, the following
            maps the
            <fo:basic-link external-destination="url(http://docs.oracle.com/javaee/5/api/javax/persistence/EntityNotFoundException.html)"><fo:inline>EntityNotFoundException</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javaee/5/api/javax/persistence/EntityNotFoundException.html)">http://docs.oracle.com/javaee/5/api/javax/persistence/EntityNotFoundException.html</fo:basic-link>]</fo:inline>
            to a HTTP 404 (Not Found) response:
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e6398"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 7.6. Mapping generic exceptions to responses</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e6401">  1 @Provider
  2 public class EntityNotFoundMapper implements ExceptionMapper&lt;javax.persistence.EntityNotFoundException&gt; {
  3   public Response toResponse(javax.persistence.EntityNotFoundException ex) {
  4     return Response.status(404).
  5       entity(ex.getMessage()).
  6       type("text/plain").
  7       build();
  8   }
  9 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The above class is annotated with <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/Provider.html)"><fo:inline>@Provider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/Provider.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/Provider.html</fo:basic-link>]</fo:inline>, this declares that the class is of interest to the JAX-RS runtime. Such a
            class may be added to the set of classes of the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)"><fo:inline>Application</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html</fo:basic-link>]</fo:inline> instance that is configured. When an application throws an
            <fo:basic-link external-destination="url(http://docs.oracle.com/javaee/6/api/javax/persistence/EntityNotFoundException.html)"><fo:inline>EntityNotFoundException</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javaee/6/api/javax/persistence/EntityNotFoundException.html)">http://docs.oracle.com/javaee/6/api/javax/persistence/EntityNotFoundException.html</fo:basic-link>]</fo:inline>
            the
            <fo:inline font-family="monospace">toResponse</fo:inline>
            method of the
            <fo:inline font-family="monospace">EntityNotFoundMapper</fo:inline>
            instance will be invoked.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Jersey supports extension of the exception mappers. These extended mappers must implement
            the <fo:inline font-family="monospace">org.glassfish.jersey.spi.ExtendedExceptionMapper</fo:inline> interface. This interface additionally
            defines method <fo:inline font-family="monospace">isMappable(Throwable)</fo:inline> which will be invoked by the Jersey runtime
            when exception is thrown and this provider is considered as mappable based on the exception type. Using this
            method the provider can reject mapping of the exception before the method <fo:inline font-family="monospace">toResponse</fo:inline>
            is invoked. The provider can for example check the exception parameters and based on them return false
            and let other provider to be chosen for the exception mapping.
        </fo:block></fo:block><fo:block id="d0e6432"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Conditional GETs and Returning 304 (Not Modified) Responses</fo:marker><fo:block font-size="20.735999999999997pt">7.4. Conditional GETs and Returning 304 (Not Modified) Responses</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Conditional GETs are a great way to reduce bandwidth, and
            potentially improve on the server-side performance, depending on how the information used
            to determine conditions is calculated. A well-designed web site may for example return
            304 (Not Modified) responses for many of static images it serves.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">JAX-RS provides support for conditional GETs using the contextual interface <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Request.html)"><fo:inline>Request</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Request.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Request.html</fo:basic-link>]</fo:inline>.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The following example shows conditional GET support:</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e6446"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 7.7. Conditional GET support</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e6449">  1 public SparklinesResource(
  2   @QueryParam("d") IntegerList data,
  3   @DefaultValue("0,100") @QueryParam("limits") Interval limits,
  4   @Context Request request,
  5   @Context UriInfo ui) {
  6   if (data == null) {
  7     throw new WebApplicationException(400);
  8   }
  9 
 10   this.data = data;
 11   this.limits = limits;
 12 
 13   if (!limits.contains(data)) {
 14     throw new WebApplicationException(400);
 15   }
 16 
 17   this.tag = computeEntityTag(ui.getRequestUri());
 18 
 19   if (request.getMethod().equals("GET")) {
 20     Response.ResponseBuilder rb = request.evaluatePreconditions(tag);
 21     if (rb != null) {
 22       throw new WebApplicationException(rb.build());
 23     }
 24   }
 25 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The constructor of the
            <fo:inline font-family="monospace">SparklinesResouce</fo:inline>
            root
            resource class computes an entity tag from the request URI and then calls
            the
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Request.html#evaluatePreconditions(javax.ws.rs.core.EntityTag))"><fo:inline>request.evaluatePreconditions</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Request.html#evaluatePreconditions(javax.ws.rs.core.EntityTag))">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Request.html#evaluatePreconditions(javax.ws.rs.core.EntityTag)</fo:basic-link>]</fo:inline>
            with that entity tag. If a client request contains an
            <fo:inline font-family="monospace">If-None-Match</fo:inline>
            header with a value that contains the
            same entity tag that was calculated then the
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Request.html#evaluatePreconditions(javax.ws.rs.core.EntityTag))"><fo:inline>evaluatePreconditions</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Request.html#evaluatePreconditions(javax.ws.rs.core.EntityTag))">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Request.html#evaluatePreconditions(javax.ws.rs.core.EntityTag)</fo:basic-link>]</fo:inline>
            returns a pre-filled out response, with the 304 status code and entity tag
            set, that may be built and returned. Otherwise,
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Request.html#evaluatePreconditions(javax.ws.rs.core.EntityTag))"><fo:inline>evaluatePreconditions</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Request.html#evaluatePreconditions(javax.ws.rs.core.EntityTag))">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Request.html#evaluatePreconditions(javax.ws.rs.core.EntityTag)</fo:basic-link>]</fo:inline>
            returns
            <fo:inline font-family="monospace">null</fo:inline>
            and the normal response can be
            returned.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Notice that in this example the constructor of a resource class is used
            to perform actions that may otherwise have to be duplicated to
            invoked for each resource method. The life cycle of resource classes is per-request
            which means that the resource instance is created for each request and therefore
            can work with request parameters and for example make changes to the request processing by
            throwing an exception as it is shown in this example.
        </fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>JAX-RS Entity Providers</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>JAX-RS Entity Providers</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="message-body-workers"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 8. JAX-RS Entity Providers</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e6478"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Introduction</fo:marker><fo:block font-size="20.735999999999997pt">8.1. Introduction</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Entity payload, if present in an received HTTP message, is passed to Jersey from an I/O container as an input stream.
            The stream may, for example, contain data represented as a plain text, XML or JSON document. However, in many JAX-RS
            components that process these inbound data, such as resource methods or client responses, the JAX-RS API user can
            access the inbound entity as an arbitrary Java object that is created from the content of the input stream based on
            the representation type information. For example, an entity created from an input stream that contains data
            represented as a XML document, can be converted to a custom JAXB bean.
            Similar concept is supported for the outbound entities. An entity returned from the resource method in the form
            of an arbitrary Java object can be serialized by Jersey into a container output stream as a specified representation.
            Of course, while JAX-RS implementations do provide default support for most common combinations of Java type and it's
            respective on-the-wire representation formats, JAX-RS implementations do not support the conversion described above
            for any arbitrary Java type and any arbitrary representation format by default. Instead, a generic extension concept
            is exposed in JAX-RS API to allow application-level customizations of this JAX-RS runtime to support for entity
            conversions. The JAX-RS extension API components that provide the user-level extensibility are typically referred to
            by several terms with the same meaning, such as <fo:inline font-style="italic">entity providers</fo:inline>,
            <fo:inline font-style="italic">message body providers</fo:inline>, <fo:inline font-style="italic">message body workers</fo:inline> or
            <fo:inline font-style="italic">message body readers and writers</fo:inline>. You may find all these terms used interchangeably throughout
            the user guide and they all refer to the same concept.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In JAX-RS extension API (or SPI - service provider interface, if you like) the concept is captured in 2 interfaces.
            One for handling inbound entity representation-to-Java de-serialization - <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)"><fo:inline>MessageBodyReader&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html</fo:basic-link>]</fo:inline> and the other
            one for handling the outbound entity Java-to-representation serialization - <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html)"><fo:inline>MessageBodyWriter&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html</fo:basic-link>]</fo:inline>.
            A <fo:inline font-family="monospace">MessageBodyReader&lt;T&gt;</fo:inline>, as the name suggests, is an extension that supports reading the message body
            representation from an input stream and converting the data into an instance of a specific Java type.
            A <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline> is then responsible for converting a message payload from an instance of a
            specific Java type into a specific representation format that is sent over the wire to the other party as part of an
            HTTP message exchange.
            Both of these providers can be used to provide message payload serialization and de-serialization support on the
            server as well as the client side. A message body reader or writer is always used whenever a HTTP request or
            response contains an entity and the entity is either requested by the application code (e.g. injected as a parameter
            of JAX-RS resource method or a response entity read on the client from a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html)"><fo:inline>Response</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html</fo:basic-link>]</fo:inline>) or has to be
            serialized and sent to the other party (e.g. an instance returned from a JAX-RS resource method or a request
            entity sent by a JAX-RS client).
        </fo:block></fo:block><fo:block id="d0e6512"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">How to Write Custom Entity Providers</fo:marker><fo:block font-size="20.735999999999997pt">8.2. How to Write Custom Entity Providers</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            A best way how to learn about entity providers is to walk through an example of writing one. Therefore we will
            describe here the process of implementing a custom <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html)"><fo:inline>MessageBodyWriter&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html</fo:basic-link>]</fo:inline> and
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)"><fo:inline>MessageBodyReader&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html</fo:basic-link>]</fo:inline> using a practical example. Let's first setup the stage by defining a JAX-RS
            resource class for the server side story of our application.

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e6523"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 8.1. Example resource class</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e6526">  1 @Path("resource")
  2 public class MyResource {
  3     @GET
  4     @Produces("application/xml")
  5     public MyBean getMyBean() {
  6         return new MyBean("Hello World!", 42);
  7     }
  8 
  9     @POST
 10     @Consumes("application/xml")
 11     public String postMyBean(MyBean myBean) {
 12         return myBean.anyString;
 13     }
 14 }</fo:block></fo:block></fo:block>

            The resource class defines <fo:inline font-family="monospace">GET</fo:inline> and <fo:inline font-family="monospace">POST</fo:inline> resource methods. Both methods work with an entity
            that is an instance of <fo:inline font-family="monospace">MyBean</fo:inline>.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The <fo:inline font-family="monospace">MyBean</fo:inline> class is defined in the next example:

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e6543"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 8.2. MyBean entity class</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e6546">  1 @XmlRootElement
  2 public class MyBean {
  3     @XmlElement
  4     public String anyString;
  5     @XmlElement
  6     public int anyNumber;
  7 
  8     public MyBean(String anyString, int anyNumber) {
  9         this.anyString = anyString;
 10         this.anyNumber = anyNumber;
 11     }
 12 
 13     // empty constructor needed for deserialization by JAXB
 14     public MyBean() {
 15     }
 16 
 17     @Override
 18     public String toString() {
 19         return "MyBean{" +
 20             "anyString='" + anyString + '\'' +
 21             ", anyNumber=" + anyNumber +
 22             '}';
 23     }
 24 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block id="d0e6549"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">MessageBodyWriter</fo:marker><fo:block font-size="17.28pt">8.2.1. MessageBodyWriter</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The <fo:inline font-family="monospace">MyBean</fo:inline> is a JAXB-annotated POJO. In <fo:inline font-family="monospace">GET</fo:inline> resource method we return
                the instance of MyBean and we would like Jersey runtime to serialize it into XML and write
                it as an entity body to the response output stream. We design a custom <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline>
                that can serialize this POJO into XML. See the following code sample:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e6563"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        Please note, that this is only a demonstration of how to write a custom entity provider.
                        Jersey already contains default support for entity providers that can serialize JAXB beans
                        into XML.
                    </fo:block></fo:block></fo:block>

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e6567"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 8.3. MessageBodyWriter example</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e6570">  1 @Produces("application/xml")
  2 public class MyBeanMessageBodyWriter implements MessageBodyWriter&lt;MyBean&gt; {
  3 
  4     @Override
  5     public boolean isWriteable(Class&lt;?&gt; type, Type genericType,
  6                                Annotation[] annotations, MediaType mediaType) {
  7         return type == MyBean.class;
  8     }
  9 
 10     @Override
 11     public long getSize(MyBean myBean, Class&lt;?&gt; type, Type genericType,
 12                         Annotation[] annotations, MediaType mediaType) {
 13         // deprecated by JAX-RS 2.0 and ignored by Jersey runtime
 14         return -1;
 15     }
 16 
 17     @Override
 18     public void writeTo(MyBean myBean,
 19                         Class&lt;?&gt; type,
 20                         Type genericType,
 21                         Annotation[] annotations,
 22                         MediaType mediaType,
 23                         MultivaluedMap&lt;String, Object&gt; httpHeaders,
 24                         OutputStream entityStream)
 25                         throws IOException, WebApplicationException {
 26 
 27         try {
 28             JAXBContext jaxbContext = JAXBContext.newInstance(MyBean.class);
 29 
 30             // serialize the entity myBean to the entity output stream
 31             jaxbContext.createMarshaller().marshal(myBean, entityStream);
 32         } catch (JAXBException jaxbException) {
 33             throw new ProcessingException(
 34                 "Error serializing a MyBean to the output stream", jaxbException);
 35         }
 36     }
 37 }</fo:block></fo:block></fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The <fo:inline font-family="monospace">MyBeanMessageBodyWriter</fo:inline> implements the <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline>
                interface that contains three methods. In the next sections we'll explore these methods more closely.
            </fo:block><fo:block id="d0e6581"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">8.2.1.1. 
                    <fo:inline font-family="monospace">MessageBodyWriter.isWriteable</fo:inline>
                </fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    A method <fo:inline font-family="monospace">isWriteable</fo:inline>
                    should return true if the <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline> is able to write the given type. Method
                    does not decide only based on the Java type of the entity but also on annotations attached to the entity
                    and the requested representation media type.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Parameters <fo:inline font-family="monospace">type</fo:inline> and <fo:inline font-family="monospace">genericType</fo:inline> both define the entity,
                    where <fo:inline font-family="monospace">type</fo:inline> is a raw Java type
                    (for example, a <fo:inline font-family="monospace">java.util.List</fo:inline> class) and <fo:inline font-family="monospace">genericType</fo:inline> is a
                    <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/lang/reflect/ParameterizedType.html)"><fo:inline>ParameterizedType</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/lang/reflect/ParameterizedType.html)">http://docs.oracle.com/javase/6/docs/api/java/lang/reflect/ParameterizedType.html</fo:basic-link>]</fo:inline> including generic information (for example <fo:inline font-family="monospace">List&lt;String&gt;</fo:inline>).
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Parameter <fo:inline font-family="monospace">annotations</fo:inline> contains annotations that are either attached to the resource
                    method and/or annotations that are attached to the entity by building response like in the following piece
                    of code:

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e6623"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 8.4. Example of assignment of annotations to a response entity</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e6626">  1 @Path("resource")
  2 public static class AnnotatedResource {
  3 
  4     @GET
  5     public Response get() {
  6         Annotation annotation = AnnotatedResource.class
  7                             .getAnnotation(Path.class);
  8         return Response.ok()
  9                 .entity("Entity", new Annotation[] {annotation}).build();
 10     }
 11 }</fo:block></fo:block></fo:block>

                    In the example above, the <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline> would get
                    <fo:inline font-family="monospace">annotations</fo:inline> parameter containing a JAX-RS <fo:inline font-family="monospace">@GET</fo:inline> annotation
                    as it annotates the resource method and also a <fo:inline font-family="monospace">@Path</fo:inline> annotation as it
                    is passed in the response (but not because it annotates the resource; only resource
                    method annotations are included). In the case of <fo:inline font-family="monospace">MyResource</fo:inline>
                    and method <fo:inline font-family="monospace">getMyBean</fo:inline> the annotations would contain the
                    <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/GET.html)"><fo:inline>@GET</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/GET.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/GET.html</fo:basic-link>]</fo:inline> and the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html)"><fo:inline>@Produces</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html</fo:basic-link>]</fo:inline> annotation.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The last parameter of the <fo:inline font-family="monospace">isWriteable</fo:inline> method is the <fo:inline font-family="monospace">mediaType</fo:inline>
                    which is the media type attached to the response entity by annotating the resource method with a
                    <fo:inline font-family="monospace">@Produces</fo:inline> annotation or the request media type specified in the JAX-RS Client API.
                    In our example, the media type passed to providers for the resource <fo:inline font-family="monospace">MyResource</fo:inline> and method
                    <fo:inline font-family="monospace">getMyBean</fo:inline> would be <fo:inline font-family="monospace">"application/xml"</fo:inline>.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    In our implementation of the <fo:inline font-family="monospace">isWriteable</fo:inline> method, we
                    just check that the type is <fo:inline font-family="monospace">MyBean</fo:inline>. Please note, that
                    this method might be executed multiple times by Jersey runtime as Jersey needs to check
                    whether this provider can be used for a particular combination of entity Java type, media type, and attached
                    annotations, which may be potentially a performance hog. You can limit the number of execution by
                    properly defining the <fo:inline font-family="monospace">@Produces</fo:inline> annotation on the <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline>.
                    In our case thanks to <fo:inline font-family="monospace">@Produces</fo:inline> annotation, the provider will be considered
                    as writeable (and the method <fo:inline font-family="monospace">isWriteable</fo:inline> might be executed) only if the
                    media type of the outbound message is <fo:inline font-family="monospace">"application/xml"</fo:inline>. Additionally, the provider
                    will only be considered as possible candidate and its <fo:inline font-family="monospace">isWriteable</fo:inline> method will
                    be executed, if the generic type of the provider is either a sub class or super class of
                    <fo:inline font-family="monospace">type</fo:inline> parameter.
                </fo:block></fo:block><fo:block id="d0e6702"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">8.2.1.2. 
                <fo:inline font-family="monospace">MessageBodyWriter.writeTo</fo:inline>
            </fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Once a message body writer is selected as the most appropriate (see the <fo:basic-link internal-destination="providers-selection"><fo:inline>Section 8.3, “Entity Provider Selection”</fo:inline></fo:basic-link>
                for more details on entity provider selection), its <fo:inline font-family="monospace">writeTo</fo:inline> method is invoked. This method
                receives parameters with the same meaning as in <fo:inline font-family="monospace">isWriteable</fo:inline> as well as a few additional ones.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                In addition to the parameters already introduced, the <fo:inline font-family="monospace">writeTo</fo:inline> method defies also
                <fo:inline font-family="monospace">httpHeaders</fo:inline> parameter, that contains HTTP headers associated with the
                outbound message.

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e6726"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        When a <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline> is invoked, the headers still can be modified in this point
                        and any modification will be reflected in the outbound HTTP message being sent. The modification of
                        headers must however happen before a first byte is written to the supplied output stream.
                    </fo:block></fo:block></fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Another new parameter, <fo:inline font-family="monospace">myBean</fo:inline>, contains the entity instance to be serialized (the type of
                entity corresponds to generic type of <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline>). Related parameter
                <fo:inline font-family="monospace">entityStream</fo:inline> contains the entity output stream to which the method should serialize the entity.
                In our case we use JAXB to marshall the entity into the <fo:inline font-family="monospace">entityStream</fo:inline>. Note, that the
                <fo:inline font-family="monospace">entityStream</fo:inline> is not closed at the end of method; the stream will be closed by Jersey.
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e6750"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Important</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        Do not close the entity output stream in the <fo:inline font-family="monospace">writeTo</fo:inline> method of your
                        <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline> implementation.
                    </fo:block></fo:block></fo:block>
            </fo:block></fo:block><fo:block id="d0e6760"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">8.2.1.3. 
                <fo:inline font-family="monospace">MessageBodyWriter.getSize</fo:inline>
            </fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The method is deprecated since JAX-RS 2.0 and Jersey 2 ignores the return value. In JAX-RS 1.0 the
                method could return the size of the entity that would be then used for "Content-Length" response
                header. In Jersey 2.0 the "Content-Length" parameter is computed automatically using an internal
                outbound entity buffering. For details about configuration options of outbound entity buffering see the javadoc
                of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/MessageProperties.html)"><fo:inline>MessageProperties</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/MessageProperties.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/MessageProperties.html</fo:basic-link>]</fo:inline>, property <fo:inline font-family="monospace">OUTBOUND_CONTENT_LENGTH_BUFFER</fo:inline>
                which configures the size of the buffer.
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e6774"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        You can disable the Jersey outbound entity buffering by setting the buffer size to 0.
                    </fo:block></fo:block></fo:block>
            </fo:block></fo:block><fo:block id="d0e6778"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">8.2.1.4. Testing a <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Before testing the <fo:inline font-family="monospace">MyBeanMessageBodyWriter</fo:inline>, the writer must
                be registered as a custom JAX-RS extension provider. It should either be added to your application
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)"><fo:inline>ResourceConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html</fo:basic-link>]</fo:inline>, or returned from your custom <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)"><fo:inline>Application</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html</fo:basic-link>]</fo:inline> sub-class, or
                annotated with <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/Provider.html)"><fo:inline>@Provider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/Provider.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/Provider.html</fo:basic-link>]</fo:inline> annotation to leverage JAX-RS provider auto-discovery feature.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                After registering the <fo:inline font-family="monospace">MyBeanMessageBodyWriter</fo:inline> and <fo:inline font-family="monospace">MyResource</fo:inline> class
                in our application, the request can be initiated (in this example from Client API).

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="client-get-call"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 8.5. Client code testing MyBeanMessageBodyWriter</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e6808">  1 WebTarget webTarget = // initialize web target to the context root
  2             // of example application
  3 Response response = webTarget.path("resource")
  4                         .request(MediaType.APPLICATION_XML).get();
  5 System.out.println(response.getStatus());
  6 String myBeanXml = response.readEntity(String.class);
  7 System.out.println(myBeanXml);</fo:block></fo:block></fo:block>

                The client code initiates the <fo:inline font-family="monospace">GET</fo:inline> which will be matched to the resource method
                <fo:inline font-family="monospace">MyResource.getMyBean()</fo:inline>. The response entity is de-serialized as a <fo:inline font-family="monospace">String</fo:inline>.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The result of console output is:

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e6822"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 8.6. Result of MyBeanMessageBodyWriter test</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e6825">200
&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;myBean&gt;
&lt;anyString&gt;Hello World!&lt;/anyString&gt;&lt;anyNumber&gt;42&lt;/anyNumber&gt;&lt;/myBean&gt;</fo:block></fo:block></fo:block>

                The returned status is 200 and the entity is stored in the response in a <fo:inline font-family="monospace">XML</fo:inline> format.
                Next, we will look at how the Jersey de-serializes this XML document into a <fo:inline font-family="monospace">MyBean</fo:inline> consumed by
                our <fo:inline font-family="monospace">POST</fo:inline> resource method.
            </fo:block></fo:block></fo:block><fo:block id="d0e6837"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">MessageBodyReader</fo:marker><fo:block font-size="17.28pt">8.2.2. MessageBodyReader</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                In order to de-serialize the entity of <fo:inline font-family="monospace">MyBean</fo:inline> on the server or the client, we need to implement
                a custom <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)"><fo:inline>MessageBodyReader&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html</fo:basic-link>]</fo:inline>.
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e6848"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        Please note, that this is only a demonstration of how to write a custom entity provider.
                        Jersey already contains default support for entity providers that can serialize JAXB beans
                        into XML.
                    </fo:block></fo:block></fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Our <fo:inline font-family="monospace">MessageBodyReader&lt;T&gt;</fo:inline> implementation is listed in <fo:basic-link internal-destination="mbw.ex.mbr"><fo:inline>Example 8.7, “MessageBodyReader example”</fo:inline></fo:basic-link>.

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="mbw.ex.mbr"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 8.7. MessageBodyReader example</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e6862">  1 public static class MyBeanMessageBodyReader
  2         implements MessageBodyReader&lt;MyBean&gt; {
  3 
  4 @Override
  5 public boolean isReadable(Class&lt;?&gt; type, Type genericType,
  6     Annotation[] annotations, MediaType mediaType) {
  7     return type == MyBean.class;
  8 }
  9 
 10 @Override
 11 public MyBean readFrom(Class&lt;MyBean&gt; type,
 12     Type genericType,
 13     Annotation[] annotations, MediaType mediaType,
 14     MultivaluedMap&lt;String, String&gt; httpHeaders,
 15     InputStream entityStream)
 16         throws IOException, WebApplicationException {
 17 
 18     try {
 19         JAXBContext jaxbContext = JAXBContext.newInstance(MyBean.class);
 20         MyBean myBean = (MyBean) jaxbContext.createUnmarshaller()
 21             .unmarshal(entityStream);
 22         return myBean;
 23     } catch (JAXBException jaxbException) {
 24         throw new ProcessingException("Error deserializing a MyBean.",
 25             jaxbException);
 26     }
 27 }
 28 }</fo:block></fo:block></fo:block>

                It is obvious that the <fo:inline font-family="monospace">MessageBodyReader&lt;T&gt;</fo:inline> interface is similar to <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline>.
                In the next couple of sections we will explore it's API methods.
            </fo:block><fo:block id="d0e6871"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">8.2.2.1. <fo:inline font-family="monospace">MessageBodyReader.isReadable</fo:inline></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    It defines the method <fo:inline font-family="monospace">isReadable()</fo:inline> which has a very simliar meaning as method
                    <fo:inline font-family="monospace">isWriteable()</fo:inline> in <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline>. The method returns <fo:inline font-family="monospace">true</fo:inline>
                    if it is able to de-serialize the given type. The <fo:inline font-family="monospace">annotations</fo:inline> parameter contains annotations
                    that are attached to the entity parameter in the resource method. In our <fo:inline font-family="monospace">POST</fo:inline> resource
                    method <fo:inline font-family="monospace">postMyBean</fo:inline> the entity parameter <fo:inline font-family="monospace">myBean</fo:inline> is not
                    annotated, therefore no annotation will be passed to the isReadable. The <fo:inline font-family="monospace">mediaType</fo:inline>
                    parameter contains the entity media type. The media type, in our case, must be consumable by the <fo:inline font-family="monospace">POST</fo:inline>
                    resource method, which is specified by placing a JAX-RS <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Consumes.html)"><fo:inline>@Consumes</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Consumes.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Consumes.html</fo:basic-link>]</fo:inline> annotation to the method.
                    The resource method <fo:inline font-family="monospace">postMyBean()</fo:inline> is annotated with
                    <fo:inline font-family="monospace">@Consumes("application/xml")</fo:inline>,
                    therefore for purpose of de-serialization of entity for the <fo:inline font-family="monospace">postMyBean()</fo:inline> method,
                    only requests with entities represented as <fo:inline font-family="monospace">"application/xml"</fo:inline>
                    media type will match the method. However, this method might be executed for for entity types that are sub classes
                    or super classes of the declared generic type on the <fo:inline font-family="monospace">MessageBodyReader&lt;T&gt;</fo:inline> will be also considered.
                    It is a responsibility of the <fo:inline font-family="monospace">isReadable</fo:inline> method to decide whether it is able
                    to de-serialize the entity and type comparison is one of the basic decision steps.
                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e6928"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Tip</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            In order to reduce number of <fo:inline font-family="monospace">isReadable</fo:inline> executions, always define correctly the consumable
                            media type(s) with the <fo:inline font-family="monospace">@Consumes</fo:inline> annotation on your custom <fo:inline font-family="monospace">MessageBodyReader&lt;T&gt;</fo:inline>.
                        </fo:block></fo:block></fo:block>
                </fo:block></fo:block><fo:block id="d0e6941"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">8.2.2.2. <fo:inline font-family="monospace">MessageBodyReader.readFrom</fo:inline></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The <fo:inline font-family="monospace">readForm()</fo:inline> method gets the parameters with the same meaning as in
                    <fo:inline font-family="monospace">isReadable()</fo:inline>. The additional <fo:inline font-family="monospace">entityStream</fo:inline> parameter provides a handle
                    to the entity input stream from which the entity bytes should be read and de-serialized into a Java entity which
                    is then returned from the method. Our <fo:inline font-family="monospace">MyBeanMessageBodyReader</fo:inline> de-serializes the incoming
                    XML data into an instance of <fo:inline font-family="monospace">MyBean</fo:inline> using JAXB.

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e6962"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Important</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            Do not close the entity input stream in your <fo:inline font-family="monospace">MessageBodyReader&lt;T&gt;</fo:inline> implementation. The stream
                            will be automatically closed by Jersey runtime.
                        </fo:block></fo:block></fo:block>
                </fo:block></fo:block><fo:block id="d0e6969"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">8.2.2.3. Testing a <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Now let's send a test request using the JAX-RS Client API.

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e6976"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 8.8. Testing MyBeanMessageBodyReader</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e6979">  1 final MyBean myBean = new MyBean("posted MyBean", 11);
  2 Response response = webTarget.path("resource").request("application/xml")
  3         .post(Entity.entity(myBean, "application/xml"));
  4 
  5 System.out.println(response.getStatus());
  6 final String responseEntity = response.readEntity(String.class);
  7 System.out.println(responseEntity);
  8 </fo:block></fo:block></fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The console output is:

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e6984"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 8.9. Result of testing MyBeanMessageBodyReader</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e6987">200
posted MyBean</fo:block></fo:block></fo:block>
                </fo:block></fo:block><fo:block id="d0e6990"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">8.2.2.4. Using Entity Providers with JAX-RS Client API</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Both, <fo:inline font-family="monospace">MessageBodyReader&lt;T&gt;</fo:inline> and <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline> can be registered in a
                    configuration of JAX-RS Client API components typically without any need to change their code. The example
                    <fo:basic-link internal-destination="mbw.ex.client.mbr.reg"><fo:inline>Example 8.10, “MessageBodyReader registered on a JAX-RS client”</fo:inline></fo:basic-link> is a variation on the <fo:basic-link internal-destination="client-get-call"><fo:inline>Example 8.5, “Client code testing MyBeanMessageBodyWriter”</fo:inline></fo:basic-link>
                    listed in one of the previous sections.

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="mbw.ex.client.mbr.reg"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 8.10. MessageBodyReader registered on a JAX-RS client</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e7008">  1 Client client = ClientBuilder.newBuilder()
  2     .register(MyBeanMessageBodyReader.class).build();
  3 
  4 Response response = client.target("http://example/comm/resource")
  5     .request(MediaType.APPLICATION_XML).get();
  6 System.out.println(response.getStatus());
  7 MyBean myBean = response.readEntity(MyBean.class);
  8 System.out.println(myBean);</fo:block></fo:block></fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The code above registers <fo:inline font-family="monospace">MyBeanMessageBodyReader</fo:inline> to the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)"><fo:inline>Client</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html</fo:basic-link>]</fo:inline> configuration
                    using a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html)"><fo:inline>ClientBuilder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html</fo:basic-link>]</fo:inline> which means that the provider will be used for any <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html)"><fo:inline>WebTarget</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html</fo:basic-link>]</fo:inline>
                    produced by the <fo:inline font-family="monospace">client</fo:inline> instance.
                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e7028"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            You could also register the JAX-RS entity (and any other) providers to individual
                            <fo:inline font-family="monospace">WebTarget</fo:inline> instances produced by the client.
                        </fo:block></fo:block></fo:block>

                    Then, using the fluent chain of method invocations, a resource target pointing to our
                    <fo:inline font-family="monospace">MyResource</fo:inline> is defined, a HTTP <fo:inline font-family="monospace">GET</fo:inline> request is invoked.
                    The response entity is then read as an instance of a <fo:inline font-family="monospace">MyBean</fo:inline> type by invoking the
                    <fo:inline font-family="monospace">response.readEntity</fo:inline> method, that internally locates the registered
                    <fo:inline font-family="monospace">MyBeanMessageBodyReader</fo:inline> and uses it for entity de-serialization.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The console output for the example is:
                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e7052"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 8.11. Result of client code execution</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e7055">200
MyBean{anyString='Hello World!', anyNumber=42}</fo:block></fo:block></fo:block>
                </fo:block></fo:block></fo:block></fo:block><fo:block id="providers-selection"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Entity Provider Selection</fo:marker><fo:block font-size="20.735999999999997pt">8.3. Entity Provider Selection</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Usually there are many entity providers registered on the server or client side (be default there must be
            at least providers mandated by the JAX-RS specification, such as providers for primitive types, byte array,
            JAXB beans, etc.).
            JAX-RS defines an algorithm for selecting the most suitable provider for entity processing. This algorithm
            works with information such as entity Java type and on-the-wire media type representation of entity, and searches
            for the most suitable entity provider from the list of available providers based on the supported media type
            declared on each provider (defined by <fo:inline font-family="monospace">@Produces</fo:inline> or <fo:inline font-family="monospace">@Consumes</fo:inline> on the provider class)
            as well as based on the generic type declaration of the available providers. When a list of suitable candidate
            entity providers is selected and sorted based on the rules defined in JAX-RS specification, a JAX-RS runtime
            then it invokes <fo:inline font-family="monospace">isReadable</fo:inline> or <fo:inline font-family="monospace">isWriteable</fo:inline> method respectively on each
            provider in the list until a first provider is found that returns <fo:inline font-family="monospace">true</fo:inline>. This provider is then used to
            process the entity.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The following steps describe the algorithm for selecting a <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline> (extracted
            from JAX-RS with little modifications). The steps refer to the previously discussed example application.
            The <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline> is searched for purpose of deserialization of <fo:inline font-family="monospace">MyBean</fo:inline>
            entity returned from the method <fo:inline font-family="monospace">getMyBean</fo:inline>. So, <fo:inline font-style="italic">type is <fo:inline font-family="monospace">MyBean</fo:inline>
            and media type <fo:inline font-family="monospace">"application/xml"</fo:inline></fo:inline>. Let's assume the runtime contains also
            registered providers, namely:

            <fo:table space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e7100" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>
                    <fo:inline font-family="monospace">A</fo:inline>: <fo:inline font-family="monospace">@Produces("application/*")</fo:inline> with generic type
                    <fo:inline font-family="monospace">&lt;Object&gt;</fo:inline>
                </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>
                    <fo:inline font-family="monospace">B</fo:inline>: <fo:inline font-family="monospace">@Produces("*/*")</fo:inline> with generic type <fo:inline font-family="monospace">&lt;MyBean&gt;</fo:inline>
                </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>
                    <fo:inline font-family="monospace">C</fo:inline>: <fo:inline font-family="monospace">@Produces("text/plain")</fo:inline> with generic type
                    <fo:inline font-family="monospace">&lt;MyBean&gt;</fo:inline>
                </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>
                    <fo:inline font-family="monospace">D</fo:inline>: <fo:inline font-family="monospace">@Produces("application/xml")</fo:inline> with generic type
                    <fo:inline font-family="monospace">&lt;Object&gt;</fo:inline>
                </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>
                    <fo:inline font-family="monospace">MyBeanMessageBodyWriter</fo:inline>: <fo:inline font-family="monospace">@Produces("application/xml")</fo:inline> with generic
                    type <fo:inline font-family="monospace">&lt;MyBean&gt;</fo:inline>
                </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The algorithm executed by a JAX-RS runtime to select a proper <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline> implementation
            is illustrated in <fo:basic-link internal-destination="mbw.writer.selection.algorithm"><fo:inline>Procedure 8.1, “<fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline> Selection Algorithm”</fo:inline></fo:basic-link>.
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" keep-together.within-column="auto" id="mbw.writer.selection.algorithm"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Procedure 8.1. <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline> Selection Algorithm</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-distance-between-starts="2em" provisional-label-separation="0.2em"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block id="d0e7169">1.
          </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                    Obtain the object that will be mapped to the message entity body. For a return type of Response
                    or subclasses, the object is the value of the entity property, for other return types it is the returned
                    object.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    So in our case, for the resource method <fo:inline font-family="monospace">getMyBean</fo:inline> the type will
                    be <fo:inline font-family="monospace">MyBean</fo:inline>.
                </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block id="d0e7180">2.
          </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                    Determine the media type of the response.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    In our case. for resource method <fo:inline font-family="monospace">getMyBean</fo:inline>
                    annotated with <fo:inline font-family="monospace">@Produces("application/xml")</fo:inline>, the media type will be
                    <fo:inline font-family="monospace">"application/xml"</fo:inline>.
                </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block id="d0e7194">3.
          </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                    Select the set of MessageBodyWriter providers that support the object and media
                    type of the message entity body.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    In our case, for entity media type <fo:inline font-family="monospace">"application/xml"</fo:inline>
                    and type <fo:inline font-family="monospace">MyBean</fo:inline>, the appropriate <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline> will
                    be the <fo:inline font-family="monospace">A</fo:inline>, <fo:inline font-family="monospace">B</fo:inline>, <fo:inline font-family="monospace">D</fo:inline>
                    and <fo:inline font-family="monospace">MyBeanMessageBodyWriter</fo:inline>. The provider <fo:inline font-family="monospace">C</fo:inline> does
                    not define the appropriate
                    media type. <fo:inline font-family="monospace">A</fo:inline> and <fo:inline font-family="monospace">B</fo:inline> are fine as
                    their type is more generic and compatible with <fo:inline font-family="monospace">"application/xml"</fo:inline>.
                </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block id="mbw.writer.selection.algorithm.sortStep">4.
          </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                    Sort the selected MessageBodyWriter providers with a primary key of generic type where providers
                    whose generic type is the nearest superclass of the object class are sorted first and a secondary key of
                    media type. Additionally, JAX-RS specification mandates that custom, user registered providers have to
                    be sorted ahead of default providers provided by JAX-RS implementation. This is used as a tertiary
                    comparison key. User providers are places prior to Jersey internal providers in to the final ordered list.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The sorted providers will be: <fo:inline font-family="monospace">MyBeanMessageBodyWriter</fo:inline>,
                    <fo:inline font-family="monospace">B</fo:inline>. <fo:inline font-family="monospace">D</fo:inline>, <fo:inline font-family="monospace">A</fo:inline>.
                </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block id="d0e7249">5.
          </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                    Iterate through the sorted <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline> providers and, utilizing the
                    <fo:inline font-family="monospace">isWriteable</fo:inline> method of each until you find a <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline> that
                    returns <fo:inline font-family="monospace">true</fo:inline>.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The first provider in the list - our <fo:inline font-family="monospace">MyBeanMessageBodyWriter</fo:inline> returns <fo:inline font-family="monospace">true</fo:inline> as
                    it compares types and the types matches. If it would return <fo:inline font-family="monospace">false</fo:inline>, the next provider
                    <fo:inline font-family="monospace">B</fo:inline> would by check by invoking its <fo:inline font-family="monospace">isWriteable</fo:inline> method.
                </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block id="d0e7281">6.
          </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                    If step 5 locates a suitable <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline> then use its writeTo method to map the
                    object to the entity body.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    <fo:inline font-family="monospace">MyBeanMessageBodyWriter.writeTo</fo:inline> will be executed and it will serialize the
                    entity.
                </fo:block><fo:list-block provisional-distance-between-starts="2em" provisional-label-separation="0.2em"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block id="d0e7294">•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            Otherwise, the server runtime MUST generate a generate an
                            <fo:inline font-family="monospace">InternalServerErrorException</fo:inline>, a subclass of
                            <fo:inline font-family="monospace">WebApplicationException</fo:inline> with its status set to 500, and no entity and the client
                            runtime MUST generate a <fo:inline font-family="monospace">ProcessingException</fo:inline>.
                        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            We have successfully found a provider, thus no exception is generated.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e7309"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                JAX-RS 2.0 is incompatible with JAX-RS 1.x in one step of the entity provider selection algorithm.
                JAX-RS 1.x defines sorting keys priorities in the <fo:basic-link internal-destination="mbw.writer.selection.algorithm.sortStep"><fo:inline>Step 4</fo:inline></fo:basic-link>
                in exactly opposite order. So, in JAX-RS 1.x the keys are defined in the order: primary media type,
                secondary type declaration distance where custom providers have always precedence to internal providers.
                If you want to force Jersey to use the algorithm compatible with JAX-RS 1.x, setup the property
                (to <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)"><fo:inline>ResourceConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html</fo:basic-link>]</fo:inline> or return from <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)"><fo:inline>Application</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html</fo:basic-link>]</fo:inline> from its
                <fo:inline font-family="monospace">getProperties</fo:inline> method):

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e7323">jersey.config.workers.legacyOrdering=true</fo:block>

                Documentation of this property can be found in the javadoc of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/MessageProperties.html)"><fo:inline>MessageProperties</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/MessageProperties.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/MessageProperties.html</fo:basic-link>]</fo:inline>.
            </fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The algorithm for selection of <fo:inline font-family="monospace">MessageBodyReader&lt;T&gt;</fo:inline> is similar, including the incompatibility
            between JAX-RS 2.0 and JAX-RS 1.x and the property to workaround it. The algorithm is defined as follows:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" keep-together.within-column="auto" id="mbw.reader.selection.algorithm"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Procedure 8.2. <fo:inline font-family="monospace">MessageBodyReader&lt;T&gt;</fo:inline> Selection Algorithm</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-distance-between-starts="2em" provisional-label-separation="0.2em"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block id="d0e7339">1.
          </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                    Obtain the media type of the request. If the request does not contain a <fo:inline font-family="monospace">Content-Type</fo:inline>
                    header then use <fo:inline font-family="monospace">application/octet-stream</fo:inline> media type.
                </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block id="d0e7348">2.
          </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                    Identify the Java type of the parameter whose value will be mapped from the entity body. The
                    Java type on the server is the type of the entity parameter of the resource method. On the client
                    it is the <fo:inline font-family="monospace">Class</fo:inline> passed to <fo:inline font-family="monospace">readFrom</fo:inline> method.
                </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block id="d0e7357">3.
          </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                    Select the set of available <fo:inline font-family="monospace">MessageBodyReader&lt;T&gt;</fo:inline> providers that support the media type
                    of the request.
                </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block id="mbw.reader.selection.algorithm.selectStep">4.
          </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                    Iterate through the selected <fo:inline font-family="monospace">MessageBodyReader&lt;T&gt;</fo:inline> classes and, utilizing their
                    <fo:inline font-family="monospace">isReadable</fo:inline> method, choose the first <fo:inline font-family="monospace">MessageBodyReader&lt;T&gt;</fo:inline> provider that
                    supports the desired combination of Java type/media type/annotations parameters.
                </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block id="d0e7375">5.
          </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                    If <fo:basic-link internal-destination="mbw.reader.selection.algorithm.selectStep"><fo:inline>Step 4</fo:inline></fo:basic-link> locates a suitable
                    <fo:inline font-family="monospace">MessageBodyReader&lt;T&gt;</fo:inline>, then use its <fo:inline font-family="monospace">readFrom</fo:inline> method to map the entity
                    body to the desired Java type.
                </fo:block><fo:list-block provisional-distance-between-starts="2em" provisional-label-separation="0.2em"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block id="d0e7388">•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            Otherwise, the server runtime MUST generate a <fo:inline font-family="monospace">NotSupportedException</fo:inline>
                            (HTTP 415 status code) and no entity and the client runtime MUST generate an instance
                            of <fo:inline font-family="monospace">ProcessingException</fo:inline>.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block></fo:block><fo:block id="d0e7398"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Jersey <fo:inline font-family="monospace">MessageBodyWorkers</fo:inline> API</fo:marker><fo:block font-size="20.735999999999997pt">8.4. Jersey <fo:inline font-family="monospace">MessageBodyWorkers</fo:inline> API</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In case you need to directly work with JAX-RS entity providers, for example to serialize an entity in your resource
            method, filter or in a composite entity provider, you would need to perform quite a lot of steps.
            You would need to choose the appropriate <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline> based on the type, media type and
            other parameters. Then you would need to instantiate it, check it by <fo:inline font-family="monospace">isWriteable</fo:inline> method and
            basically perform all the steps that are normally performed by Jersey
            (see <fo:basic-link internal-destination="mbw.reader.selection.algorithm"><fo:inline>Procedure 8.2, “<fo:inline font-family="monospace">MessageBodyReader&lt;T&gt;</fo:inline> Selection Algorithm”</fo:inline></fo:basic-link>).
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            To remove this burden from developers, Jersey exposes a proprietary public API that simplifies the manipulation
            of entity providers. The API is defined by <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/MessageBodyWorkers.html)"><fo:inline>MessageBodyWorkers</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/MessageBodyWorkers.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/MessageBodyWorkers.html</fo:basic-link>]</fo:inline> interface and Jersey provides an
            implementation that can be injected using the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html)"><fo:inline>@Context</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html</fo:basic-link>]</fo:inline> injection annotation. The interface declares
            methods for selection of most appropriate <fo:inline font-family="monospace">MessageBodyReader&lt;T&gt;</fo:inline> and <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline>
            based on the rules defined in JAX-RS spec, methods for writing and reading entity that ensure proper and timely
            invocation of interceptors and other useful methods.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            See the following example of usage of <fo:inline font-family="monospace">MessageBodyWorkers</fo:inline>.

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e7433"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 8.12. Usage of MessageBodyWorkers interface</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e7436">  1 @Path("workers")
  2 public static class WorkersResource {
  3 
  4     @Context
  5     private MessageBodyWorkers workers;
  6 
  7     @GET
  8     @Produces("application/xml")
  9     public String getMyBeanAsString() {
 10 
 11         final MyBean myBean = new MyBean("Hello World!", 42);
 12 
 13         // buffer into which myBean will be serialized
 14         ByteArrayOutputStream baos = new ByteArrayOutputStream();
 15 
 16         // get most appropriate MBW
 17         final MessageBodyWriter&lt;MyBean&gt; messageBodyWriter =
 18                 workers.getMessageBodyWriter(MyBean.class, MyBean.class,
 19                         new Annotation[]{}, MediaType.APPLICATION_XML_TYPE);
 20 
 21         try {
 22             // use the MBW to serialize myBean into baos
 23             messageBodyWriter.writeTo(myBean,
 24                 MyBean.class, MyBean.class, new Annotation[] {},
 25                 MediaType.APPLICATION_XML_TYPE, new MultivaluedHashMap&lt;String, Object&gt;(),
 26                 baos);
 27         } catch (IOException e) {
 28             throw new RuntimeException(
 29                 "Error while serializing MyBean.", e);
 30         }
 31 
 32         final String stringXmlOutput = baos.toString();
 33         // stringXmlOutput now contains XML representation:
 34         // "&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
 35         // &lt;myBean&gt;&lt;anyString&gt;Hello World!&lt;/anyString&gt;
 36         // &lt;anyNumber&gt;42&lt;/anyNumber&gt;&lt;/myBean&gt;"
 37 
 38         return stringXmlOutput;
 39     }
 40 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In the example a resource injects <fo:inline font-family="monospace">MessageBodyWorkers</fo:inline> and uses it for selection
            of the most appropriate <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline>. Then the writer is utilized to serialize the entity
            into the buffer as XML document. The <fo:inline font-family="monospace">String</fo:inline> content of the buffer is then returned.
            This will cause that Jersey will not use <fo:inline font-family="monospace">MyBeanMessageBodyWriter</fo:inline>
            to serialize the entity as it is already in the <fo:inline font-family="monospace">String</fo:inline> type
            (<fo:inline font-family="monospace">MyBeanMessageBodyWriter</fo:inline> does not support <fo:inline font-family="monospace">String</fo:inline>). Instead, a simple
            <fo:inline font-family="monospace">String</fo:inline>-based  <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline> will be chosen and it will only serialize the
            <fo:inline font-family="monospace">String</fo:inline> with XML to the output entity stream by writing out the bytes of the
            <fo:inline font-family="monospace">String</fo:inline>.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Of course, the code in the example does not bring any benefit as the entity could
            have been serialized by <fo:inline font-family="monospace">MyBeanMessageBodyWriter</fo:inline> by Jersey as in previous examples;
            the purpose of the example was to show how to use <fo:inline font-family="monospace">MessageBodyWorkers</fo:inline> in a resource method.
        </fo:block></fo:block><fo:block id="d0e7482"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Default Jersey Entity Providers</fo:marker><fo:block font-size="20.735999999999997pt">8.5. Default Jersey Entity Providers</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Jersey internally contains entity providers for these types with combination of media types (in brackets):
        </fo:block><fo:table space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e7487" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>
                <fo:inline font-family="monospace">byte[]</fo:inline> (<fo:inline font-family="monospace">*/*</fo:inline>)
            </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>
                <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/io/String.html)"><fo:inline>String</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/io/String.html)">http://docs.oracle.com/javase/6/docs/api/java/io/String.html</fo:basic-link>]</fo:inline> (<fo:inline font-family="monospace">*/*</fo:inline>)
            </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>
                <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/io/InputStream.html)"><fo:inline>InputStream</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/io/InputStream.html)">http://docs.oracle.com/javase/6/docs/api/java/io/InputStream.html</fo:basic-link>]</fo:inline> (<fo:inline font-family="monospace">*/*</fo:inline>)
            </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>
                <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/io/Reader.html)"><fo:inline>Reader</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/io/Reader.html)">http://docs.oracle.com/javase/6/docs/api/java/io/Reader.html</fo:basic-link>]</fo:inline> (<fo:inline font-family="monospace">*/*</fo:inline>)
            </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>
                <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/io/File.html)"><fo:inline>File</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/io/File.html)">http://docs.oracle.com/javase/6/docs/api/java/io/File.html</fo:basic-link>]</fo:inline> (<fo:inline font-family="monospace">*/*</fo:inline>)
            </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>
                <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/javax/activation/DataSource.html)"><fo:inline>DataSource</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/javax/activation/DataSource.html)">http://docs.oracle.com/javase/6/docs/api/javax/activation/DataSource.html</fo:basic-link>]</fo:inline> (<fo:inline font-family="monospace">*/*</fo:inline>)
            </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>
                <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/javax/xml/transform/Source.html)"><fo:inline>Source</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/javax/xml/transform/Source.html)">http://docs.oracle.com/javase/6/docs/api/javax/xml/transform/Source.html</fo:basic-link>]</fo:inline> (<fo:inline font-family="monospace">text/xml</fo:inline>, <fo:inline font-family="monospace">application/xml</fo:inline> and media types of the form
                <fo:inline font-family="monospace">application/*+xml</fo:inline>)
            </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>
                <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/javax/xml/bind/JAXBElement.html)"><fo:inline>JAXBElement</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/javax/xml/bind/JAXBElement.html)">http://docs.oracle.com/javase/6/docs/api/javax/xml/bind/JAXBElement.html</fo:basic-link>]</fo:inline> (<fo:inline font-family="monospace">text/xml</fo:inline>, <fo:inline font-family="monospace">application/xml</fo:inline> and media types of the form
                <fo:inline font-family="monospace">application/*+xml</fo:inline>)
            </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/MultivaluedMap.html)"><fo:inline>MultivaluedMap&lt;K,V&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/MultivaluedMap.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/MultivaluedMap.html</fo:basic-link>]</fo:inline> (<fo:inline font-family="monospace">application/x-www-form-urlencoded</fo:inline>)
            </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Form.html)"><fo:inline>Form</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Form.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Form.html</fo:basic-link>]</fo:inline> (<fo:inline font-family="monospace">application/x-www-form-urlencoded</fo:inline>)
            </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/StreamingOutput.html)"><fo:inline>StreamingOutput</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/StreamingOutput.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/StreamingOutput.html</fo:basic-link>]</fo:inline> ((<fo:inline font-family="monospace">*/*</fo:inline>)) - this class can be used as an lightweight
                <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline> that can be returned from a resource method
            </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>
                <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/lang/Boolean.html)"><fo:inline>Boolean</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/lang/Boolean.html)">http://docs.oracle.com/javase/6/docs/api/java/lang/Boolean.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/lang/Character.html)"><fo:inline>Character</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/lang/Character.html)">http://docs.oracle.com/javase/6/docs/api/java/lang/Character.html</fo:basic-link>]</fo:inline> and <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/lang/Number.html)"><fo:inline>Number</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/lang/Number.html)">http://docs.oracle.com/javase/6/docs/api/java/lang/Number.html</fo:basic-link>]</fo:inline> (<fo:inline font-family="monospace">text/plain</fo:inline>) - corresponding
                primitive types supported via boxing/unboxing conversion
            </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            For other media type supported in jersey please see the <fo:basic-link internal-destination="media"><fo:inline>Chapter 9, <fo:inline font-style="italic">Support for Common Media Type Representations</fo:inline></fo:inline></fo:basic-link> which describes
            additional Jersey entity provider extensions for serialization to JSON, XML, serialization of collections,
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/package-summary.html)"><fo:inline>Multi Part</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/package-summary.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/package-summary.html</fo:basic-link>]</fo:inline> and others.
        </fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Support for Common Media Type Representations</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Support for Common Media Type Representations</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="media"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 9. Support for Common Media Type Representations</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="json"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">JSON</fo:marker><fo:block font-size="20.735999999999997pt">9.1. JSON</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Jersey JSON support comes as a set of extension modules where each of these modules contains an implementation of
            a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Feature.html)"><fo:inline>Feature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Feature.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Feature.html</fo:basic-link>]</fo:inline> that needs to be registered into your <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html)"><fo:inline>Configurable</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html</fo:basic-link>]</fo:inline> instance (client/server).
            There are multiple frameworks that provide support for JSON processing and/or JSON-to-Java binding.
            The modules listed below provide support for JSON representations by integrating the individual JSON frameworks into
            Jersey. At present, Jersey integrates with the following modules to provide JSON support:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e7627"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e7628"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        <fo:basic-link internal-destination="json.moxy"><fo:inline>MOXy</fo:inline></fo:basic-link> - JSON binding support via MOXy is a default and preferred way of supporting JSON binding
                        in your Jersey applications since Jersey 2.0. When JSON MOXy module is on the class-path, Jersey will
                        automatically discover the module and seamlessly enable JSON binding support via MOXy in your
                        applications. (See <fo:basic-link internal-destination="deployment.autodiscoverable"><fo:inline>Section 4.3, “Auto-Discoverable Features”</fo:inline></fo:basic-link>.)
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e7636"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link internal-destination="json.json-p"><fo:inline>Java API for JSON Processing (JSON-P)</fo:inline></fo:basic-link></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e7640"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link internal-destination="json.jackson"><fo:inline>Jackson</fo:inline></fo:basic-link></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e7644"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link internal-destination="json.jettison"><fo:inline>Jettison</fo:inline></fo:basic-link></fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
        </fo:block><fo:block id="d0e7649"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Approaches to JSON Support</fo:marker><fo:block font-size="17.28pt">9.1.1. Approaches to JSON Support</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Each of the aforementioned extension modules uses one or more of the three basic approaches available when
                working with JSON representations:

                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e7654"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e7655"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>POJO based JSON binding support</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e7658"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>JAXB based JSON binding support</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e7661"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Low-level JSON parsing &amp; processing support</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

                The first method is pretty generic and allows you to map any Java Object to JSON and vice versa.
                The other two approaches limit you in Java types your resource methods could produce and/or consume.
                JAXB based approach is useful if you plan to utilize certain JAXB features and support both XML and JSON
                representations. The last, low-level, approach gives you the best fine-grained control over the out-coming
                JSON data format.
            </fo:block><fo:block id="json-pojo"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">9.1.1.1. POJO support</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">POJO support represents the easiest way to convert your Java Objects to JSON and back.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Media modules that support this approach are <fo:basic-link internal-destination="json.moxy"><fo:inline>MOXy</fo:inline></fo:basic-link> and <fo:basic-link internal-destination="json.jackson"><fo:inline>Jackson</fo:inline></fo:basic-link></fo:block></fo:block><fo:block id="json-jaxb"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">9.1.1.2. JAXB based JSON support</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Taking this approach will save you a lot of time, if you want to easily produce/consume both JSON and XML
                    data format. With JAXB beans you will be able to use the same Java model to generate JSON as well as XML
                    representations.
                    Another advantage is simplicity of working with such a model and availability of the API in Java SE Platform.
                    JAXB leverages annotated POJOs and these could be handled as simple Java beans.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    A disadvantage of JAXB based approach could be if you need to work with a very specific JSON format. Then it
                    might be difficult to find a proper way to get such a format produced and consumed. This is a reason why a
                    lot of configuration options are provided, so that you can control how JAXB beans get serialized and
                    de-serialized. The extra configuration options however requires you to learn more details about the framework
                    you are using.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Following is a very simple example of how a JAXB bean could look like.

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e7686"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.1. Simple JAXB bean implementation</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e7689">  1 @XmlRootElement
  2 public class MyJaxbBean {
  3     public String name;
  4     public int age;
  5 
  6     public MyJaxbBean() {} // JAXB needs this
  7 
  8     public MyJaxbBean(String name, int age) {
  9         this.name = name;
 10         this.age = age;
 11     }
 12 }</fo:block></fo:block></fo:block>

                    Using the above JAXB bean for producing JSON data format from you resource method, is then as simple as:

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e7692"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.2. JAXB bean used to generate JSON representation</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e7695">  1 @GET
  2 @Produces("application/json")
  3 public MyJaxbBean getMyBean() {
  4     return new MyJaxbBean("Agamemnon", 32);
  5 }</fo:block></fo:block></fo:block>

                    Notice, that JSON specific mime type is specified in <fo:inline font-family="monospace">@Produces</fo:inline> annotation, and the method returns
                    an instance of <fo:inline font-family="monospace">MyJaxbBean</fo:inline>, which JAXB is able to process. Resulting JSON in this case
                    would look like:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e7704">{"name":"Agamemnon", "age":"32"}</fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    A proper use of JAXB annotations itself enables you to control output JSON format to certain extent.
                    Specifically, renaming and omitting items is easy to do directly just by using JAXB annotations.
                    For example, the following example depicts changes in the above mentioned MyJaxbBean that will result in
                    <fo:inline font-family="monospace">{"king":"Agamemnon"}</fo:inline> JSON output.

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e7712"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.3. Tweaking JSON format using JAXB</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e7715">  1 @XmlRootElement
  2 public class MyJaxbBean {
  3 
  4     @XmlElement(name="king")
  5     public String name;
  6 
  7     @XmlTransient
  8     public int age;
  9 
 10     // several lines removed
 11 }</fo:block></fo:block></fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Media modules that support this approach are <fo:basic-link internal-destination="json.moxy"><fo:inline>MOXy</fo:inline></fo:basic-link>, <fo:basic-link internal-destination="json.jackson"><fo:inline>Jackson</fo:inline></fo:basic-link>, <fo:basic-link internal-destination="json.jettison"><fo:inline>Jettison</fo:inline></fo:basic-link></fo:block></fo:block><fo:block id="json-lowlevel"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">9.1.1.3. Low-level based JSON support</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    JSON Processing API is a new standard API for parsing and processing JSON structures in similar way to what
                    SAX and StAX parsers provide for XML. The API is part of Java EE 7 and later. Another such JSON
                    parsing/processing API is provided by Jettison framework. Both APIs provide a low-level access to producing
                    and consuming JSON data structures. By adopting this low-level approach you would be working with
                    <fo:inline font-family="monospace">JsonObject</fo:inline> (or <fo:inline font-family="monospace">JSONObject</fo:inline> respectively) and/or
                    <fo:inline font-family="monospace">JsonArray</fo:inline> (or <fo:inline font-family="monospace">JSONArray</fo:inline> respectively) classes when processing your
                    JSON data representations.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The biggest advantage of these low-level APIs is that you will gain full control over the JSON format
                    produced and consumed. You will also be able to produce and consume very large JSON structures using
                    streaming JSON parser/generator APIs.
                    On the other hand, dealing with your data model objects will probably be a lot more complex, compared
                    to the POJO or JAXB based binding approach. Differences are depicted at the following code snippets.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Let's start with JAXB-based approach.

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e7749"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.4. JAXB bean creation</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e7752">  1 MyJaxbBean myBean = new MyJaxbBean("Agamemnon", 32);</fo:block></fo:block></fo:block>

                    Above you construct a simple JAXB bean, which could be written in JSON as
                    <fo:inline font-family="monospace">{"name":"Agamemnon", "age":32}</fo:inline>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Now to build an equivalent <fo:inline font-family="monospace">JsonObject</fo:inline>/<fo:inline font-family="monospace">JSONObject</fo:inline> (in terms of
                    resulting JSON expression), you would need several more lines of code. The following example illustrates
                    how to construct the same JSON data using the standard Java EE 7 JSON-Processing API.
                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e7766"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.5. Constructing a <fo:inline font-family="monospace">JsonObject</fo:inline> (JSON-Processing)</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e7772">  1 JsonObject myObject = Json.createObjectBuilder()
  2         .add("name", "Agamemnon")
  3         .add("age", 32)
  4         .build();</fo:block></fo:block></fo:block>

                    And at last, here's how the same work can be done with Jettison API.
                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e7775"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.6. Constructing a <fo:inline font-family="monospace">JSONObject</fo:inline> (Jettison)</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e7781">  1 JSONObject myObject = new JSONObject();
  2 try {
  3     myObject.put("name", "Agamemnon");
  4     myObject.put("age", 32);
  5 } catch (JSONException ex) {
  6     LOGGER.log(Level.SEVERE, "Error ...", ex);
  7 }</fo:block></fo:block></fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Media modules that support the low-level JSON parsing and generating approach are <fo:basic-link internal-destination="json.json-p"><fo:inline>Java API for JSON Processing (JSON-P)</fo:inline></fo:basic-link>
                    and <fo:basic-link internal-destination="json.jettison"><fo:inline>Jettison</fo:inline></fo:basic-link>. Unless you have a strong reason for using the non-standard <fo:basic-link internal-destination="json.jettison"><fo:inline>Jettison</fo:inline></fo:basic-link> API,
                    we recommend you to use the new standard <fo:basic-link internal-destination="json.json-p"><fo:inline>Java API for JSON Processing (JSON-P)</fo:inline></fo:basic-link> API instead.
                </fo:block></fo:block></fo:block><fo:block id="json.moxy"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">MOXy</fo:marker><fo:block font-size="17.28pt">9.1.2. MOXy</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e7801"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">9.1.2.1. Dependency</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    To use MOXy as your JSON provider you need to add <fo:inline font-family="monospace">jersey-media-moxy</fo:inline> module to your <fo:inline font-family="monospace">pom.xml</fo:inline> file:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e7812">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.media&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-media-moxy&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>

                    If you're not using Maven make sure to have all needed dependencies (see <fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-moxy/dependencies.html)"><fo:inline>jersey-media-moxy</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-moxy/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-moxy/dependencies.html</fo:basic-link>]</fo:inline>) on the classpath.
                </fo:block></fo:block><fo:block id="moxy-registration"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">9.1.2.2. Configure and register</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    As stated in the <fo:basic-link internal-destination="deployment.autodiscoverable"><fo:inline>Section 4.3, “Auto-Discoverable Features”</fo:inline></fo:basic-link> as well as earlier in this chapter, MOXy media
                    module is one of the modules where you don't need to explicitly register it's <fo:inline font-family="monospace">Feature</fo:inline>s
                    (<fo:inline font-family="monospace">MoxyJsonFeature</fo:inline>) in your client/server <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html)"><fo:inline>Configurable</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html</fo:basic-link>]</fo:inline> as this feature is
                    automatically discovered and registered when you add <fo:inline font-family="monospace">jersey-media-moxy</fo:inline> module to your class-path.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The auto-discoverable <fo:inline font-family="monospace">jersey-media-moxy</fo:inline> module defines a few properties that can be used to control the
                    automatic registration of <fo:inline font-family="monospace">MoxyJsonFeature</fo:inline> (besides the generic
                    <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE)"><fo:inline>CommonProperties.FEATURE_AUTO_DISCOVERY_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE</fo:basic-link>]</fo:inline> an the its client/server variants):

                    <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e7848"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e7849"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#MOXY_JSON_FEATURE_DISABLE)"><fo:inline>CommonProperties.MOXY_JSON_FEATURE_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#MOXY_JSON_FEATURE_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#MOXY_JSON_FEATURE_DISABLE</fo:basic-link>]</fo:inline></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e7853"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MOXY_JSON_FEATURE_DISABLE)"><fo:inline>ServerProperties.MOXY_JSON_FEATURE_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MOXY_JSON_FEATURE_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MOXY_JSON_FEATURE_DISABLE</fo:basic-link>]</fo:inline></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e7857"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#MOXY_JSON_FEATURE_DISABLE)"><fo:inline>ClientProperties.MOXY_JSON_FEATURE_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#MOXY_JSON_FEATURE_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#MOXY_JSON_FEATURE_DISABLE</fo:basic-link>]</fo:inline></fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
                </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e7862"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        A manual registration of any other Jersey JSON provider feature (except for <fo:basic-link internal-destination="json.json-p"><fo:inline>Java API for JSON Processing (JSON-P)</fo:inline></fo:basic-link>)
                        disables the automated enabling and configuration of <fo:inline font-family="monospace">MoxyJsonFeature</fo:inline>.
                    </fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    To configure <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)"><fo:inline>MessageBodyReader&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html</fo:basic-link>]</fo:inline>s / <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html)"><fo:inline>MessageBodyWriter&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html</fo:basic-link>]</fo:inline>s provided by MOXy you can simply
                    create an instance of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/moxy/json/MoxyJsonConfig.html)"><fo:inline>MoxyJsonConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/moxy/json/MoxyJsonConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/moxy/json/MoxyJsonConfig.html</fo:basic-link>]</fo:inline> and set values of needed properties. For most common
                    properties you can use a particular method to set the value of the property or you can use more generic
                    methods to set the property:

                    <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e7882"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e7883"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/moxy/json/MoxyJsonConfig.html#property(java.lang.String, java.lang.Object))"><fo:inline>MoxyJsonConfig#property(java.lang.String, java.lang.Object)</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/moxy/json/MoxyJsonConfig.html#property(java.lang.String, java.lang.Object))">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/moxy/json/MoxyJsonConfig.html#property(java.lang.String, java.lang.Object)</fo:basic-link>]</fo:inline> - sets a property value for both Marshaller and Unmarshaller.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e7889"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/moxy/json/MoxyJsonConfig.html#marshallerProperty(java.lang.String, java.lang.Object))"><fo:inline>MoxyJsonConfig#marshallerProperty(java.lang.String, java.lang.Object)</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/moxy/json/MoxyJsonConfig.html#marshallerProperty(java.lang.String, java.lang.Object))">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/moxy/json/MoxyJsonConfig.html#marshallerProperty(java.lang.String, java.lang.Object)</fo:basic-link>]</fo:inline> - sets a property value for Marshaller.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e7895"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/moxy/json/MoxyJsonConfig.html#unmarshallerProperty(java.lang.String, java.lang.Object))"><fo:inline>MoxyJsonConfig#unmarshallerProperty(java.lang.String, java.lang.Object)</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/moxy/json/MoxyJsonConfig.html#unmarshallerProperty(java.lang.String, java.lang.Object))">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/moxy/json/MoxyJsonConfig.html#unmarshallerProperty(java.lang.String, java.lang.Object)</fo:basic-link>]</fo:inline> - sets a property value for Unmarshaller.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e7902"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.7. <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/moxy/json/MoxyJsonConfig.html)"><fo:inline>MoxyJsonConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/moxy/json/MoxyJsonConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/moxy/json/MoxyJsonConfig.html</fo:basic-link>]</fo:inline> - Setting properties.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e7907">final Map&lt;String, String&gt; namespacePrefixMapper = new HashMap&lt;String, String&gt;();
namespacePrefixMapper.put("http://www.w3.org/2001/XMLSchema-instance", "xsi");

final MoxyJsonConfig configuration = new MoxyJsonConfig()
        .setNamespacePrefixMapper(namespacePrefixMapper)
        .setNamespaceSeparator(':');
                        </fo:block></fo:block></fo:block>

                    In order to make <fo:inline font-family="monospace">MoxyJsonConfig</fo:inline> visible for MOXy you need to create and register
                    <fo:inline font-family="monospace">ContextResolver&lt;T&gt;</fo:inline> in your client/server code.

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e7916"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.8. Creating <fo:inline font-family="monospace">ContextResolver&lt;MoxyJsonConfig&gt;</fo:inline></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e7921">final Map&lt;String, String&gt; namespacePrefixMapper = new HashMap&lt;String, String&gt;();
namespacePrefixMapper.put("http://www.w3.org/2001/XMLSchema-instance", "xsi");

final MoxyJsonConfig moxyJsonConfig = MoxyJsonConfig()
            .setNamespacePrefixMapper(namespacePrefixMapper)
            .setNamespaceSeparator(':');

final ContextResolver&lt;MoxyJsonConfig&gt; jsonConfigResolver = moxyJsonConfig.resolver();
</fo:block></fo:block></fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Another way to pass configuration properties to the underlying <fo:inline font-family="monospace">MOXyJsonProvider</fo:inline> is to set
                    them directly into your <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html)"><fo:inline>Configurable</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html</fo:basic-link>]</fo:inline> instance (see an example below). These are overwritten by
                    properties set into the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/moxy/json/MoxyJsonConfig.html)"><fo:inline>MoxyJsonConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/moxy/json/MoxyJsonConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/moxy/json/MoxyJsonConfig.html</fo:basic-link>]</fo:inline>.

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e7935"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.9. Setting properties for MOXy providers into <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html)"><fo:inline>Configurable</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html</fo:basic-link>]</fo:inline></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e7940">new ResourceConfig()
                            .property(MarshallerProperties.JSON_NAMESPACE_SEPARATOR, ".")
                            // further configuration</fo:block></fo:block></fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    There are some properties for which Jersey sets the default value when
                    <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)"><fo:inline>MessageBodyReader&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html</fo:basic-link>]</fo:inline> / <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html)"><fo:inline>MessageBodyWriter&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html</fo:basic-link>]</fo:inline> from MOXy is used and they are:

                    <fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e7951"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 9.1. Default property values for MOXy <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)"><fo:inline>MessageBodyReader&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html</fo:basic-link>]</fo:inline> / <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html)"><fo:inline>MessageBodyWriter&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html</fo:basic-link>]</fo:inline></fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-start-style="solid" border-end-style="solid" border-top-style="solid" border-bottom-style="solid" border-start-width="0.5pt" border-end-width="0.5pt" border-top-width="0.5pt" border-bottom-width="0.5pt" border-start-color="black" border-end-color="black" border-top-color="black" border-bottom-color="black" width="auto"><fo:table-column column-number="1" column-width="50%"/><fo:table-column column-number="2" column-width="50%"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block><fo:inline font-family="monospace">javax.xml.bind.Marshaller#JAXB_FORMATTED_OUTPUT</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block><fo:inline font-family="monospace">false</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
                                        <fo:inline font-family="monospace">org.eclipse.persistence.jaxb.JAXBContextProperties#JSON_INCLUDE_ROOT</fo:inline>
                                    </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block><fo:inline font-family="monospace">false</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
                                        <fo:inline font-family="monospace">org.eclipse.persistence.jaxb.MarshallerProperties#JSON_MARSHAL_EMPTY_COLLECTIONS</fo:inline>
                                    </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block><fo:inline font-family="monospace">true</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
                                        <fo:inline font-family="monospace">org.eclipse.persistence.jaxb.JAXBContextProperties#JSON_NAMESPACE_SEPARATOR</fo:inline>
                                    </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block><fo:inline font-family="monospace">org.eclipse.persistence.oxm.XMLConstants#DOT</fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block>
                </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="ex-moxy-client"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.10. Building client with MOXy JSON feature enabled.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e7999">final Client client = ClientBuilder.newBuilder()
        // The line below that registers MOXy feature can be
        // omitted if FEATURE_AUTO_DISCOVERY_DISABLE is
        // not disabled.
        .register(MoxyJsonFeature.class)
        .register(jsonConfigResolver)
        .build();</fo:block></fo:block></fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="ex-moxy-server"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.11. Creating JAX-RS application with MOXy JSON feature enabled.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8004">// Create JAX-RS application.
final Application application = new ResourceConfig()
        .packages("org.glassfish.jersey.examples.jsonmoxy")
        // The line below that registers MOXy feature can be
        // omitted if FEATURE_AUTO_DISCOVERY_DISABLE is
        // not disabled.
        .register(MoxyJsonFeature.class)
        .register(jsonConfigResolver);</fo:block></fo:block></fo:block></fo:block><fo:block id="d0e8006"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">9.1.2.3. Examples</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Jersey provides a <fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/json-moxy)"><fo:inline>JSON MOXy example</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/json-moxy)">https://github.com/jersey/jersey/tree/2.28/examples/json-moxy</fo:basic-link>]</fo:inline>
                    on how to use MOXy to consume/produce JSON.
                </fo:block></fo:block></fo:block><fo:block id="json.json-p"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Java API for JSON Processing (JSON-P)</fo:marker><fo:block font-size="17.28pt">9.1.3. Java API for JSON Processing (JSON-P)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e8017"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">9.1.3.1. Dependency</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    To use JSON-P as your JSON provider you need to add <fo:inline font-family="monospace">jersey-media-json-processing</fo:inline> module to your
                    <fo:inline font-family="monospace">pom.xml</fo:inline> file:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8028">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.media&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-media-json-processing&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>

                    If you're not using Maven make sure to have all needed dependencies (see <fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-processing/dependencies.html)"><fo:inline>jersey-media-json-processing</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-processing/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-processing/dependencies.html</fo:basic-link>]</fo:inline>)
                    on the class-path.
                </fo:block></fo:block><fo:block id="jsonp-registration"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">9.1.3.2. Configure and register</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    As stated in <fo:basic-link internal-destination="deployment.autodiscoverable"><fo:inline>Section 4.3, “Auto-Discoverable Features”</fo:inline></fo:basic-link> JSON-Processing media module is one of the
                    modules where you don't need to explicitly register it's
                    <fo:inline font-family="monospace">Feature</fo:inline>s (<fo:inline font-family="monospace">JsonProcessingFeature</fo:inline>) in your client/server
                    <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html)"><fo:inline>Configurable</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html</fo:basic-link>]</fo:inline> as this feature is automatically discovered and registered when you add
                    <fo:inline font-family="monospace">jersey-media-json-processing</fo:inline> module to your classpath.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    As for the other modules, <fo:inline font-family="monospace">jersey-media-json-processing</fo:inline> has also few properties that can affect the
                    registration of <fo:inline font-family="monospace">JsonProcessingFeature</fo:inline>
                    (besides <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE)"><fo:inline>CommonProperties.FEATURE_AUTO_DISCOVERY_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE</fo:basic-link>]</fo:inline> and the like):

                    <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e8064"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e8065"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#JSON_PROCESSING_FEATURE_DISABLE)"><fo:inline>CommonProperties.JSON_PROCESSING_FEATURE_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#JSON_PROCESSING_FEATURE_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#JSON_PROCESSING_FEATURE_DISABLE</fo:basic-link>]</fo:inline></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e8069"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#JSON_PROCESSING_FEATURE_DISABLE)"><fo:inline>ServerProperties.JSON_PROCESSING_FEATURE_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#JSON_PROCESSING_FEATURE_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#JSON_PROCESSING_FEATURE_DISABLE</fo:basic-link>]</fo:inline></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e8073"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#JSON_PROCESSING_FEATURE_DISABLE)"><fo:inline>ClientProperties.JSON_PROCESSING_FEATURE_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#JSON_PROCESSING_FEATURE_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#JSON_PROCESSING_FEATURE_DISABLE</fo:basic-link>]</fo:inline></fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    To configure <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)"><fo:inline>MessageBodyReader&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html</fo:basic-link>]</fo:inline>s / <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html)"><fo:inline>MessageBodyWriter&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html</fo:basic-link>]</fo:inline>s provided by JSON-P you can simply
                    add values for supported properties into the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configuration.html)"><fo:inline>Configuration</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configuration.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configuration.html</fo:basic-link>]</fo:inline> instance (client/server). Currently
                    supported are these properties:

                    <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e8089"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e8090"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:inline font-family="monospace">JsonGenerator.PRETTY_PRINTING</fo:inline>
                                ("<fo:inline font-family="monospace">javax.json.stream.JsonGenerator.prettyPrinting</fo:inline>")
                            </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
                </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8100"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.12. Building client with JSON-Processing JSON feature enabled.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8103">ClientBuilder.newClient(new ClientConfig()
        // The line below that registers JSON-Processing feature can be
        // omitted if FEATURE_AUTO_DISCOVERY_DISABLE is not disabled.
        .register(JsonProcessingFeature.class)
        .property(JsonGenerator.PRETTY_PRINTING, true)
);</fo:block></fo:block></fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8105"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.13. Creating JAX-RS application with JSON-Processing JSON feature enabled.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8108">// Create JAX-RS application.
final Application application = new ResourceConfig()
        // The line below that registers JSON-Processing feature can be
        // omitted if FEATURE_AUTO_DISCOVERY_DISABLE is not disabled.
        .register(JsonProcessingFeature.class)
        .packages("org.glassfish.jersey.examples.jsonp")
        .property(JsonGenerator.PRETTY_PRINTING, true);</fo:block></fo:block></fo:block></fo:block><fo:block id="d0e8110"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">9.1.3.3. Examples</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Jersey provides a
                    <fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/json-processing-webapp)"><fo:inline>JSON Processing example</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/json-processing-webapp)">https://github.com/jersey/jersey/tree/2.28/examples/json-processing-webapp</fo:basic-link>]</fo:inline>
                    on how to use JSON-Processing to consume/produce JSON.</fo:block></fo:block></fo:block><fo:block id="json.jackson"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Jackson (1.x and 2.x)</fo:marker><fo:block font-size="17.28pt">9.1.4. Jackson (1.x and 2.x)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e8121"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">9.1.4.1. Dependency</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    To use Jackson 2.x as your JSON provider you need to add <fo:inline font-family="monospace">jersey-media-json-jackson</fo:inline> module to your
                    <fo:inline font-family="monospace">pom.xml</fo:inline> file:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8132">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.media&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-media-json-jackson&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>

                    To use Jackson 1.x it'll look like:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8135">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.media&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-media-json-jackson1&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>

                    If you're not using Maven make sure to have all needed dependencies (see <fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-jackson/dependencies.html)"><fo:inline>jersey-media-json-jackson</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-jackson/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-jackson/dependencies.html</fo:basic-link>]</fo:inline> or
                    <fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-jackson1/dependencies.html)"><fo:inline>jersey-media-json-jackson1</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-jackson1/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-jackson1/dependencies.html</fo:basic-link>]</fo:inline>) on the classpath.
                </fo:block></fo:block><fo:block id="jackson-registration"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">9.1.4.2. Configure and register</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e8147"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        Note that there is a difference in namespaces between Jackson 1.x (<fo:inline font-family="monospace">org.codehaus.jackson</fo:inline>)
                        and Jackson 2.x (<fo:inline font-family="monospace">com.fasterxml.jackson</fo:inline>).
                    </fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Jackson JSON processor could be controlled via providing a custom Jackson 2 <fo:basic-link external-destination="url(http://fasterxml.github.io/jackson-databind/javadoc/2.3.0/com/fasterxml/jackson/databind/ObjectMapper.html)"><fo:inline>ObjectMapper</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://fasterxml.github.io/jackson-databind/javadoc/2.3.0/com/fasterxml/jackson/databind/ObjectMapper.html)">http://fasterxml.github.io/jackson-databind/javadoc/2.3.0/com/fasterxml/jackson/databind/ObjectMapper.html</fo:basic-link>]</fo:inline> (or
                    <fo:basic-link external-destination="url(http://jackson.codehaus.org/1.9.9/javadoc/org/codehaus/jackson/map/ObjectMapper.html)"><fo:inline>ObjectMapper</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://jackson.codehaus.org/1.9.9/javadoc/org/codehaus/jackson/map/ObjectMapper.html)">http://jackson.codehaus.org/1.9.9/javadoc/org/codehaus/jackson/map/ObjectMapper.html</fo:basic-link>]</fo:inline> for Jackson 1) instance.
                    This could be handy if you need to redefine the default Jackson behaviour and to fine-tune how your JSON data
                    structures look like. Detailed description of all Jackson features is out of scope of this guide. The example
                    below gives you a hint on how to wire your <fo:inline font-family="monospace">ObjectMapper</fo:inline> (<fo:basic-link external-destination="url(http://jackson.codehaus.org/1.9.9/javadoc/org/codehaus/jackson/map/ObjectMapper.html)"><fo:inline>ObjectMapper</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://jackson.codehaus.org/1.9.9/javadoc/org/codehaus/jackson/map/ObjectMapper.html)">http://jackson.codehaus.org/1.9.9/javadoc/org/codehaus/jackson/map/ObjectMapper.html</fo:basic-link>]</fo:inline>)
                    instance into your Jersey application.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    In order to use Jackson as your JSON (JAXB/POJO) provider you need to register <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jackson/JacksonFeature.html)"><fo:inline>JacksonFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jackson/JacksonFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jackson/JacksonFeature.html</fo:basic-link>]</fo:inline>
                    (<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jackson1/Jackson1Feature.html)"><fo:inline>Jackson1Feature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jackson1/Jackson1Feature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jackson1/Jackson1Feature.html</fo:basic-link>]</fo:inline>) and a <fo:inline font-family="monospace">ContextResolver&lt;T&gt;</fo:inline> for <fo:inline font-family="monospace">ObjectMapper</fo:inline>,
                    if needed, in your <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html)"><fo:inline>Configurable</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html</fo:basic-link>]</fo:inline> (client/server).

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8187"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.14. <fo:inline font-family="monospace">ContextResolver&lt;ObjectMapper&gt;</fo:inline></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8191">  1 @Provider
  2 public class MyObjectMapperProvider implements ContextResolver&lt;ObjectMapper&gt; {
  3 
  4     final ObjectMapper defaultObjectMapper;
  5 
  6     public MyObjectMapperProvider() {
  7         defaultObjectMapper = createDefaultMapper();
  8     }
  9 
 10     @Override
 11     public ObjectMapper getContext(Class&lt;?&gt; type) {
 12             return defaultObjectMapper;
 13         }
 14     }
 15 
 16     private static ObjectMapper createDefaultMapper() {
 17         final ObjectMapper result = new ObjectMapper();
 18         result.configure(Feature.INDENT_OUTPUT, true);
 19 
 20         return result;
 21     }
 22 
 23     // ...
 24 }</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To view the complete example source code, see
    <fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/json-jackson/src/main/java/org/glassfish/jersey/examples/jackson/MyObjectMapperProvider.java)"><fo:inline>
    MyObjectMapperProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/json-jackson/src/main/java/org/glassfish/jersey/examples/jackson/MyObjectMapperProvider.java)">https://github.com/jersey/jersey/tree/2.28/examples/json-jackson/src/main/java/org/glassfish/jersey/examples/jackson/MyObjectMapperProvider.java</fo:basic-link>]</fo:inline> class from the
    <fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/json-jackson)"><fo:inline>JSON-Jackson</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/json-jackson)">https://github.com/jersey/jersey/tree/2.28/examples/json-jackson</fo:basic-link>]</fo:inline> example.</fo:block></fo:block></fo:block>

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8202"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.15. Building client with Jackson JSON feature enabled.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8205">  1 final Client client = ClientBuilder.newBuilder()
  2         .register(MyObjectMapperProvider.class)  // No need to register this provider if no special configuration is required.
  3         .register(JacksonFeature.class)
  4         .build();</fo:block></fo:block></fo:block>

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8208"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.16. Creating JAX-RS application with Jackson JSON feature enabled.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8211">  1 // Create JAX-RS application.
  2 final Application application = new ResourceConfig()
  3         .packages("org.glassfish.jersey.examples.jackson")
  4         .register(MyObjectMapperProvider.class)  // No need to register this provider if no special configuration is required.
  5         .register(JacksonFeature.class);</fo:block></fo:block></fo:block>
                </fo:block></fo:block><fo:block id="d0e8214"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">9.1.4.3. Examples</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Jersey provides <fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/json-jackson)"><fo:inline>JSON Jackson (2.x) example</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/json-jackson)">https://github.com/jersey/jersey/tree/2.28/examples/json-jackson</fo:basic-link>]</fo:inline>
                    and <fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/json-jackson1)"><fo:inline>JSON Jackson (1.x) example</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/json-jackson1)">https://github.com/jersey/jersey/tree/2.28/examples/json-jackson1</fo:basic-link>]</fo:inline> showing
                    how to use Jackson to consume/produce JSON.
                </fo:block></fo:block></fo:block><fo:block id="json.jettison"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Jettison</fo:marker><fo:block font-size="17.28pt">9.1.5. Jettison</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                JAXB approach for (de)serializing JSON in Jettison module provides, in addition to using pure JAXB,
                configuration options that could be set on an <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jettison/JettisonConfig.html)"><fo:inline>JettisonConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jettison/JettisonConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jettison/JettisonConfig.html</fo:basic-link>]</fo:inline> instance. The instance could be then
                further used to create a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jettison/JettisonJaxbContext.html)"><fo:inline>JettisonJaxbContext</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jettison/JettisonJaxbContext.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jettison/JettisonJaxbContext.html</fo:basic-link>]</fo:inline>, which serves as a main configuration point in this
                area.
                To pass your specialized <fo:inline font-family="monospace">JettisonJaxbContext</fo:inline> to Jersey, you will finally need to implement
                a JAXBContext <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/ContextResolver.html)"><fo:inline>ContextResolver&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/ContextResolver.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/ContextResolver.html</fo:basic-link>]</fo:inline> (see below).
            </fo:block><fo:block id="d0e8242"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">9.1.5.1. Dependency</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    To use Jettison as your JSON provider you need to add <fo:inline font-family="monospace">jersey-media-json-jettison</fo:inline> module to your
                    <fo:inline font-family="monospace">pom.xml</fo:inline> file:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8253">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.media&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-media-json-jettison&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>

                    If you're not using Maven make sure to have all needed dependencies (see <fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-jettison/dependencies.html)"><fo:inline>jersey-media-json-jettison</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-jettison/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-json-jettison/dependencies.html</fo:basic-link>]</fo:inline>) on
                    the classpath.
                </fo:block></fo:block><fo:block id="d0e8259"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">9.1.5.2. JSON Notations</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    <fo:inline font-family="monospace">JettisonConfig</fo:inline> allows you to use two JSON notations. Each of these notations serializes
                    JSON in a different way. Following is a list of supported notations:

                    <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e8267"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e8268"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>JETTISON_MAPPED (default notation)</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e8271"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>BADGERFISH</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

                    You might want to use one of these notations, when working with more complex XML documents. Namely when you
                    deal with multiple XML namespaces in your JAXB beans.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Individual notations and their further configuration options are described below. Rather then explaining
                    rules for mapping XML constructs into JSON, the notations will be described using a simple example. Following
                    are JAXB beans, which will be used.

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8277"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.17. JAXB beans for JSON supported notations description, simple address bean</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8280">  1 @XmlRootElement
  2 public class Address {
  3     public String street;
  4     public String town;
  5 
  6     public Address(){}
  7 
  8     public Address(String street, String town) {
  9         this.street = street;
 10         this.town = town;
 11     }
 12 }</fo:block></fo:block></fo:block>

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8283"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.18. JAXB beans for JSON supported notations description, contact bean</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8286">  1 @XmlRootElement
  2 public class Contact {
  3 
  4     public int id;
  5     public String name;
  6     public List&lt;Address&gt; addresses;
  7 
  8     public Contact() {};
  9 
 10     public Contact(int id, String name, List&lt;Address&gt; addresses) {
 11         this.name = name;
 12         this.id = id;
 13         this.addresses =
 14             (addresses != null) ? new LinkedList&lt;Address&gt;(addresses) : null;
 15     }
 16 }</fo:block></fo:block></fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Following text will be mainly working with a contact bean initialized with:

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8291"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.19. JAXB beans for JSON supported notations description, initialization</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8294">  1 Address[] addresses = {new Address("Long Street 1", "Short Village")};
  2 Contact contact = new Contact(2, "Bob", Arrays.asList(addresses));</fo:block></fo:block></fo:block>

                    I.e. contact bean with <fo:inline font-family="monospace">id=2</fo:inline>, <fo:inline font-family="monospace">name="Bob"</fo:inline> containing
                    a single address (<fo:inline font-family="monospace">street="Long Street 1"</fo:inline>, <fo:inline font-family="monospace">town="Short Village"</fo:inline>).
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    All below described configuration options are documented also in api-docs at <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jettison/JettisonConfig.html)"><fo:inline>JettisonConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jettison/JettisonConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jettison/JettisonConfig.html</fo:basic-link>]</fo:inline>.
                </fo:block><fo:block id="d0e8314"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="12pt">9.1.5.2.1. Jettison mapped notation</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        If you need to deal with various XML namespaces, you will find Jettison <fo:inline font-family="monospace">mapped</fo:inline>
                        notation pretty useful. Lets define a particular namespace for <fo:inline font-family="monospace">id</fo:inline> item:

                        <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8325">  1 ...
  2 @XmlElement(namespace="http://example.com")
  3 public int id;
  4 ...</fo:block>

                        Then you simply configure a mapping from XML namespace into JSON prefix as follows:

                        <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="json.jaxb.jettison.mapped.ns.def"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.20. 
                                XML namespace to JSON mapping configuration for Jettison based <fo:inline font-family="monospace">mapped</fo:inline> notation
                            </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8334">  1 Map&lt;String,String&gt; ns2json = new HashMap&lt;String, String&gt;();
  2 ns2json.put("http://example.com", "example");
  3 context = new JettisonJaxbContext(
  4     JettisonConfig.mappedJettison().xml2JsonNs(ns2json).build(),
  5     types);</fo:block></fo:block></fo:block>

                        Resulting JSON will look like in the example below.

                        <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8337"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.21. JSON expression with XML namespaces mapped into JSON</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8340">  1 {
  2    "contact":{
  3       "example.id":2,
  4       "name":"Bob",
  5       "addresses":{
  6          "street":"Long Street 1",
  7          "town":"Short Village"
  8       }
  9    }
 10 }</fo:block></fo:block></fo:block>

                        Please note, that <fo:inline font-family="monospace">id</fo:inline> item became <fo:inline font-family="monospace">example.id</fo:inline> based on the XML namespace mapping.
                        If you have more XML namespaces in your XML, you will need to configure appropriate mapping for all of
                        them.
                    </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        Another configurable option introduced in Jersey version 2.2 is related to serialization of JSON arrays with Jettison's
                        mapped notation. When serializing elements representing single item lists/arrays, you might want to utilise
                        the following Jersey configuration method to explicitly name which elements to treat as arrays no matter what the actual content is.

                        <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="json.jaxb.jettison.mapped.array.def"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.22. 
                                JSON Array configuration for Jettison based <fo:inline font-family="monospace">mapped</fo:inline> notation
                            </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8357">  1 context = new JettisonJaxbContext(
  2     JettisonConfig.mappedJettison().serializeAsArray("name").build(),
  3     types);</fo:block></fo:block></fo:block>

                        Resulting JSON will look like in the example below, unimportant lines removed for sanity.

                        <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8360"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.23. JSON expression with JSON arrays explicitly configured via Jersey</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8363">  1 {
  2    "contact":{
  3       ...
  4       "name":["Bob"],
  5       ...
  6    }
  7 }</fo:block></fo:block></fo:block>

                    </fo:block></fo:block><fo:block id="d0e8366"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="12pt">9.1.5.2.2. Badgerfish notation</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        From JSON and JavaScript perspective, this notation is definitely the worst readable one.
                        You will probably not want to use it, unless you need to make sure your JAXB beans could be flawlessly
                        written and read back to and from JSON, without bothering with any formatting configuration, namespaces,
                        etc.
                    </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        <fo:inline font-family="monospace">JettisonConfig</fo:inline> instance using <fo:inline font-family="monospace">badgerfish</fo:inline> notation could be built
                        with

                        <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8379">JettisonConfig.badgerFish().build()</fo:block>

                        and the JSON output JSON will be as follows.

                        <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8382"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.24. JSON expression produced using <fo:inline font-family="monospace">badgerfish</fo:inline> notation</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8388">  1 {
  2    "contact":{
  3       "id":{
  4          "$":"2"
  5       },
  6       "name":{
  7          "$":"Bob"
  8       },
  9       "addresses":{
 10          "street":{
 11             "$":"Long Street 1"
 12          },
 13          "town":{
 14             "$":"Short Village"
 15          }
 16       }
 17    }
 18 }</fo:block></fo:block></fo:block>
                    </fo:block></fo:block></fo:block><fo:block id="jettison-registration"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">9.1.5.3. Configure and register</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    In order to use Jettison as your JSON (JAXB/POJO) provider you need to register <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jettison/JettisonFeature.html)"><fo:inline>JettisonFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jettison/JettisonFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jettison/JettisonFeature.html</fo:basic-link>]</fo:inline>
                    and a <fo:inline font-family="monospace">ContextResolver&lt;T&gt;</fo:inline> for <fo:inline font-family="monospace">JAXBContext</fo:inline> (if needed) in your <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html)"><fo:inline>Configurable</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html</fo:basic-link>]</fo:inline>
                    (client/server).

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8408"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.25. <fo:inline font-family="monospace">ContextResolver&lt;ObjectMapper&gt;</fo:inline></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8412">@Provider
public class JaxbContextResolver implements ContextResolver&lt;JAXBContext&gt; {

    private final JAXBContext context;
    private final Set&lt;Class&lt;?&gt;&gt; types;
    private final Class&lt;?&gt;[] cTypes = {Flights.class, FlightType.class, AircraftType.class};

    public JaxbContextResolver() throws Exception {
        this.types = new HashSet&lt;Class&lt;?&gt;&gt;(Arrays.asList(cTypes));
        this.context = new JettisonJaxbContext(JettisonConfig.DEFAULT, cTypes);
    }

    @Override
    public JAXBContext getContext(Class&lt;?&gt; objectType) {
        return (types.contains(objectType)) ? context : null;
    }
}</fo:block></fo:block></fo:block>

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8415"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.26. Building client with Jettison JSON feature enabled.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8418">final Client client = ClientBuilder.newBuilder()
        .register(JaxbContextResolver.class)  // No need to register this provider if no special configuration is required.
        .register(JettisonFeature.class)
        .build();</fo:block></fo:block></fo:block>

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8421"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.27. Creating JAX-RS application with Jettison JSON feature enabled.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8424">// Create JAX-RS application.
final Application application = new ResourceConfig()
        .packages("org.glassfish.jersey.examples.jettison")
        .register(JaxbContextResolver.class)  // No need to register this provider if no special configuration is required.
        .register(JettisonFeature.class);</fo:block></fo:block></fo:block>
                </fo:block></fo:block><fo:block id="d0e8427"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">9.1.5.4. Examples</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Jersey provides an <fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/json-jettison)"><fo:inline>JSON Jettison example</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/json-jettison)">https://github.com/jersey/jersey/tree/2.28/examples/json-jettison</fo:basic-link>]</fo:inline>
                    on how to use Jettison to consume/produce JSON.
                </fo:block></fo:block></fo:block><fo:block id="d0e8435"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker"><fo:inline font-family="monospace">@JSONP</fo:inline> - JSON with Padding Support</fo:marker><fo:block font-size="17.28pt">9.1.6. <fo:inline font-family="monospace">@JSONP</fo:inline> - JSON with Padding Support</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Jersey provides out-of-the-box support for <fo:basic-link external-destination="url(http://en.wikipedia.org/wiki/JSONP)"><fo:inline>JSONP</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://en.wikipedia.org/wiki/JSONP)">http://en.wikipedia.org/wiki/JSONP</fo:basic-link>]</fo:inline>
                - JSON with padding. The following conditions has to be met to take advantage of this capability:

                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e8445"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e8446"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            Resource method, which should return wrapped JSON, needs to be annotated with <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/JSONP.html)"><fo:inline>@JSONP</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/JSONP.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/JSONP.html</fo:basic-link>]</fo:inline>
                            annotation.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e8452"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html)"><fo:inline>MessageBodyWriter&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html</fo:basic-link>]</fo:inline> for <fo:inline font-family="monospace">application/json</fo:inline> media type, which also accepts
                            the return type of the resource method, needs to be registered (see <fo:basic-link internal-destination="json"><fo:inline>JSON</fo:inline></fo:basic-link>
                            section of this chapter).
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e8464"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            User's request has to contain <fo:inline font-family="monospace">Accept</fo:inline> header with one of the JavaScript media types
                            defined (see below).
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

                Acceptable media types compatible with <fo:inline font-family="monospace">@JSONP</fo:inline> are: <fo:inline font-family="monospace">application/javascript</fo:inline>,
                <fo:inline font-family="monospace">application/x-javascript</fo:inline>, <fo:inline font-family="monospace">application/ecmascript</fo:inline>,
                <fo:inline font-family="monospace">text/javascript</fo:inline>, <fo:inline font-family="monospace">text/x-javascript</fo:inline>, <fo:inline font-family="monospace">text/ecmascript</fo:inline>,
                <fo:inline font-family="monospace">text/jscript</fo:inline>.

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8495"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.28. Simplest case of using <fo:inline font-family="monospace">@JSONP</fo:inline></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8500">@GET
@JSONP
@Produces({"application/json", "application/javascript"})
public JaxbBean getSimpleJSONP() {
    return new JaxbBean("jsonp");
}</fo:block></fo:block></fo:block>

                Assume that we have registered a JSON providers and that the <fo:inline font-family="monospace">JaxbBean</fo:inline> looks like:

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8506"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.29. JaxbBean for @JSONP example</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8509">@XmlRootElement
public class JaxbBean {

    private String value;

    public JaxbBean() {}

    public JaxbBean(final String value) {
        this.value = value;
    }

    public String getValue() {
        return value;
    }

    public void setValue(final String value) {
        this.value = value;
    }
}</fo:block></fo:block></fo:block>

                When you send a <fo:inline font-family="monospace">GET</fo:inline> request with <fo:inline font-family="monospace">Accept</fo:inline> header set to
                <fo:inline font-family="monospace">application/javascript</fo:inline> you'll get a result entity that look like:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8521">callback({
    "value" : "jsonp",
})</fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                There are, of course, ways to configure wrapping method of the returned entity which defaults to
                <fo:inline font-family="monospace">callback</fo:inline> as you can see in the previous example.
                <fo:inline font-family="monospace">@JSONP</fo:inline> has two parameters that can be configured: <fo:inline font-family="monospace">callback</fo:inline> and
                <fo:inline font-family="monospace">queryParam</fo:inline>.
                <fo:inline font-family="monospace">callback</fo:inline> stands for the name of the JavaScript callback function defined by the application.
                The second parameter, <fo:inline font-family="monospace">queryParam</fo:inline>, defines the name of the query parameter holding the name of
                the callback function to be used (if present in the request). Value of <fo:inline font-family="monospace">queryParam</fo:inline> defaults to
                <fo:inline font-family="monospace">__callback</fo:inline> so even if you do not set the name of the query parameter yourself, client can
                always affect the result name of the wrapping JavaScript callback method.

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e8550"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        <fo:inline font-family="monospace">queryParam</fo:inline> value (if set) always takes precedence over <fo:inline font-family="monospace">callback</fo:inline>
                        value.
                    </fo:block></fo:block></fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Lets modify our example a little bit:

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8562"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.30. Example of <fo:inline font-family="monospace">@JSONP</fo:inline> with configured parameters.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8568">@GET
@Produces({"application/json", "application/javascript"})
@JSONP(callback = "eval", queryParam = "jsonpCallback")
public JaxbBean getSimpleJSONP() {
    return new JaxbBean("jsonp");
}</fo:block></fo:block></fo:block>

                And make two requests:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8571">curl -X GET http://localhost:8080/jsonp</fo:block>

                will return

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8574">eval({
    "value" : "jsonp",
})</fo:block>

                and the

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8577">curl -X GET http://localhost:8080/jsonp?jsonpCallback=alert</fo:block>

                will return

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8580">alert({
    "value" : "jsonp",
})</fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:inline font-weight="bold" keep-with-next.within-line="always" padding-end="1em">Example. </fo:inline>
                    You can take a look at a provided
                    <fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/json-with-padding)"><fo:inline>JSON with Padding example</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/json-with-padding)">https://github.com/jersey/jersey/tree/2.28/examples/json-with-padding</fo:basic-link>]</fo:inline>.
                </fo:block></fo:block></fo:block><fo:block id="xml"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">XML</fo:marker><fo:block font-size="20.735999999999997pt">9.2. XML</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            As you probably already know, Jersey uses <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline>s and <fo:inline font-family="monospace">MessageBodyReader&lt;T&gt;</fo:inline>s to
            parse incoming requests and create outgoing responses. Every user can create its own representation but... this is not
            recommended way how to do things. XML is proven standard for interchanging information, especially in web services.
            Jerseys supports low level data types used for direct manipulation and JAXB XML entities.
        </fo:block><fo:block id="d0e8602"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Low level XML support</fo:marker><fo:block font-size="17.28pt">9.2.1. Low level XML support</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Jersey currently support several low level data types: <fo:basic-link external-destination="url(http://docs.oracle.com/javase/7/docs/api/javax/xml/transform/stream/StreamSource.html)"><fo:inline>StreamSource</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/7/docs/api/javax/xml/transform/stream/StreamSource.html)">http://docs.oracle.com/javase/7/docs/api/javax/xml/transform/stream/StreamSource.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(http://docs.oracle.com/javase/7/docs/api/javax/xml/transform/sax/SAXSource.html)"><fo:inline>SAXSource</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/7/docs/api/javax/xml/transform/sax/SAXSource.html)">http://docs.oracle.com/javase/7/docs/api/javax/xml/transform/sax/SAXSource.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(http://docs.oracle.com/javase/7/docs/api/javax/xml/transform/dom/DOMSource.html)"><fo:inline>DOMSource</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/7/docs/api/javax/xml/transform/dom/DOMSource.html)">http://docs.oracle.com/javase/7/docs/api/javax/xml/transform/dom/DOMSource.html</fo:basic-link>]</fo:inline>
                and <fo:basic-link external-destination="url(http://docs.oracle.com/javase/7/docs/api/org/w3c/dom/Document.html)"><fo:inline>Document</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/7/docs/api/org/w3c/dom/Document.html)">http://docs.oracle.com/javase/7/docs/api/org/w3c/dom/Document.html</fo:basic-link>]</fo:inline>. You can use these types as the return type or as a method (resource) parameter.
                Lets say we want to test this feature and we have
                <fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/helloworld)"><fo:inline>helloworld example</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/helloworld)">https://github.com/jersey/jersey/tree/2.28/examples/helloworld</fo:basic-link>]</fo:inline> as a starting point.
                All we need to do is add methods (resources) which consumes and produces XML and types mentioned above will be
                used.
            </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8622"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.31. Low level XML test - methods added to <fo:inline font-family="monospace">HelloWorldResource.java</fo:inline></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8627">  1 @POST
  2 @Path("StreamSource")
  3 public StreamSource getStreamSource(StreamSource streamSource) {
  4     return streamSource;
  5 }
  6 
  7 @POST
  8 @Path("SAXSource")
  9 public SAXSource getSAXSource(SAXSource saxSource) {
 10     return saxSource;
 11 }
 12 
 13 @POST
 14 @Path("DOMSource")
 15 public DOMSource getDOMSource(DOMSource domSource) {
 16     return domSource;
 17 }
 18 
 19 @POST
 20 @Path("Document")
 21 public Document getDocument(Document document) {
 22     return document;
 23 }</fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Both <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline> and <fo:inline font-family="monospace">MessageBodyReader&lt;T&gt;</fo:inline> are used in this case, all we need is
                a <fo:inline font-family="monospace">POST</fo:inline> request with some XML document as a request entity. To keep this as simple as possible only root
                element with no content will be sent: <fo:inline font-family="monospace">"&lt;test /&gt;"</fo:inline>. You can create JAX-RS client to do that
                or use some other tool, for example <fo:inline font-family="monospace">curl</fo:inline>:
                <fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" id="d0e8646"><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8647">curl -v http://localhost:8080/base/helloworld/StreamSource -d "&lt;test/&gt;"</fo:block></fo:block>
                You should get exactly the same XML from our service as is present in the request; in this case, XML headers are
                added to response but content stays. Feel free to iterate through all resources.
            </fo:block></fo:block><fo:block id="d0e8650"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Getting started with JAXB</fo:marker><fo:block font-size="17.28pt">9.2.2. Getting started with JAXB</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Good start for people which already have some experience with JAXB annotations
                is <fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/jaxb)"><fo:inline>JAXB example</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/jaxb)">https://github.com/jersey/jersey/tree/2.28/examples/jaxb</fo:basic-link>]</fo:inline>. You can see various use-cases there.
                This text is mainly meant for those who don't have prior experience with JAXB. Don't expect that all possible
                annotations and their combinations will be covered in this chapter,
                <fo:basic-link external-destination="url(http://jaxb.java.net)"><fo:inline>JAXB (JSR 222 implementation)</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://jaxb.java.net)">http://jaxb.java.net</fo:basic-link>]</fo:inline>
                is pretty complex and comprehensive. But if you just want to know how you can interchange XML messages with your
                REST service, you are looking at the right chapter.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Lets start with simple example. Lets say we have class <fo:inline font-family="monospace">Planet</fo:inline> and service which produces
                "Planets".
            </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8666"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.32. Planet class</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8669">  1 @XmlRootElement
  2 public class Planet {
  3     public int id;
  4     public String name;
  5     public double radius;
  6 }</fo:block></fo:block></fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8671"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.33. Resource class</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8674">  1 @Path("planet")
  2 public class Resource {
  3 
  4     @GET
  5     @Produces(MediaType.APPLICATION_XML)
  6     public Planet getPlanet() {
  7         final Planet planet = new Planet();
  8 
  9         planet.id = 1;
 10         planet.name = "Earth";
 11         planet.radius = 1.0;
 12 
 13         return planet;
 14     }
 15 }</fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                You can see there is some extra annotation declared on <fo:inline font-family="monospace">Planet</fo:inline> class, particularly
                <fo:basic-link external-destination="url(http://jaxb.java.net/nonav/2.3.2/docs/api/javax/xml/bind/annotation/XmlRootElement.html)"><fo:inline>@XmlRootElement</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://jaxb.java.net/nonav/2.3.2/docs/api/javax/xml/bind/annotation/XmlRootElement.html)">http://jaxb.java.net/nonav/2.3.2/docs/api/javax/xml/bind/annotation/XmlRootElement.html</fo:basic-link>]</fo:inline>. This is an JAXB annotation which maps java classes
                to XML elements. We don't need to specify anything else, because <fo:inline font-family="monospace">Planet</fo:inline> is very simple class
                and all fields are public. In this case, XML element name will be derived from the class name or
                you can set the name property: <fo:inline font-family="monospace">@XmlRootElement(name="yourName")</fo:inline>.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Our resource class will respond to <fo:inline font-family="monospace">GET /planet</fo:inline> with

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8695">&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;planet&gt;
    &lt;id&gt;1&lt;/id&gt;
    &lt;name&gt;Earth&lt;/name&gt;
    &lt;radius&gt;1.0&lt;/radius&gt;
&lt;/planet&gt;</fo:block>

                which might be exactly what we want... or not. Or we might not really care, because we
                can use JAX-RS client for making requests to this resource and this is easy as:
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8698">
                    Planet planet = webTarget.path("planet").request(MediaType.APPLICATION_XML_TYPE).get(Planet.class);
                </fo:block>
                There is pre-created <fo:inline font-family="monospace">WebTarget</fo:inline> object which points to our applications context root and
                we simply add path (in our case its <fo:inline font-family="monospace">planet</fo:inline>), accept header (not mandatory, but service could
                provide different content based on this header; for example <fo:inline font-family="monospace">text/html</fo:inline> can be served for web
                browsers) and at the end we specify that we are expecting <fo:inline font-family="monospace">Planet</fo:inline> class via <fo:inline font-family="monospace">GET</fo:inline>
                request.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                There may be need for not just producing XML, we might want to consume it as well.

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8718"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.34. Method for consuming Planet</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8721">  1 @POST
  2 @Consumes(MediaType.APPLICATION_XML)
  3 public void setPlanet(Planet planet) {
  4     System.out.println("setPlanet " + planet);
  5 }</fo:block></fo:block></fo:block>

                After valid request is made, service will print out string representation of <fo:inline font-family="monospace">Planet</fo:inline>, which can
                look like <fo:inline font-family="monospace">Planet{id=2, name='Mars', radius=1.51}</fo:inline>. With JAX-RS client you can do:
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8730">
                    webTarget.path("planet").request().post(Entity.xml(planet));
                </fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                If there is a need for some other (non default) XML representation, other JAXB annotations would
                need to be used. This process is usually simplified by generating java source from XML Schema which is
                done by <fo:inline font-family="monospace">xjc</fo:inline> which is XML to java compiler and it is part of JAXB.
            </fo:block></fo:block><fo:block id="d0e8738"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">POJOs</fo:marker><fo:block font-size="17.28pt">9.2.3. POJOs</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Sometimes you can't / don't want to add JAXB annotations to source code and you still want to have resources
                consuming and producing XML representation of your classes. In this case, <fo:basic-link external-destination="url(http://jaxb.java.net/nonav/2.3.2/docs/api/javax/xml/bind/JAXBElement.html)"><fo:inline>JAXBElement</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://jaxb.java.net/nonav/2.3.2/docs/api/javax/xml/bind/JAXBElement.html)">http://jaxb.java.net/nonav/2.3.2/docs/api/javax/xml/bind/JAXBElement.html</fo:basic-link>]</fo:inline> class should help
                you. Let's redo planet resource but this time we won't have an <fo:basic-link external-destination="url(http://jaxb.java.net/nonav/2.3.2/docs/api/javax/xml/bind/annotation/XmlRootElement.html)"><fo:inline>@XmlRootElement</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://jaxb.java.net/nonav/2.3.2/docs/api/javax/xml/bind/annotation/XmlRootElement.html)">http://jaxb.java.net/nonav/2.3.2/docs/api/javax/xml/bind/annotation/XmlRootElement.html</fo:basic-link>]</fo:inline> annotation on
                <fo:inline font-family="monospace">Planet</fo:inline> class.
            </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8752"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.35. Resource class - JAXBElement</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8755">  1 @Path("planet")
  2 public class Resource {
  3 
  4     @GET
  5     @Produces(MediaType.APPLICATION_XML)
  6     public JAXBElement&lt;Planet&gt; getPlanet() {
  7         Planet planet = new Planet();
  8 
  9         planet.id = 1;
 10         planet.name = "Earth";
 11         planet.radius = 1.0;
 12 
 13         return new JAXBElement&lt;Planet&gt;(new QName("planet"), Planet.class, planet);
 14     }
 15 
 16     @POST
 17     @Consumes(MediaType.APPLICATION_XML)
 18     public void setPlanet(JAXBElement&lt;Planet&gt; planet) {
 19         System.out.println("setPlanet " + planet.getValue());
 20     }
 21 }</fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                As you can see, everything is little more complicated with <fo:inline font-family="monospace">JAXBElement</fo:inline>. This is because now you need
                to explicitly set element name for <fo:inline font-family="monospace">Planet</fo:inline> class XML representation. Client side is even more
                complicated than server side because you can't do <fo:inline font-family="monospace">JAXBElement&lt;Planet&gt;</fo:inline> so JAX-RS client
                API provides way how to workaround it by declaring subclass of <fo:inline font-family="monospace">GenericType&lt;T&gt;</fo:inline>.
            </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8771"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.36. Client side - JAXBElement</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8774">  1 // GET
  2 GenericType&lt;JAXBElement&lt;Planet&gt;&gt; planetType = new GenericType&lt;JAXBElement&lt;Planet&gt;&gt;() {};
  3 
  4 Planet planet = (Planet) webTarget.path("planet").request(MediaType.APPLICATION_XML_TYPE).get(planetType).getValue();
  5 System.out.println("### " + planet);
  6 
  7 // POST
  8 planet = new Planet();
  9 
 10 // ...
 11 
 12 webTarget.path("planet").post(new JAXBElement&lt;Planet&gt;(new QName("planet"), Planet.class, planet));</fo:block></fo:block></fo:block></fo:block><fo:block id="d0e8776"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Using custom JAXBContext</fo:marker><fo:block font-size="17.28pt">9.2.4. Using custom JAXBContext</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">In some scenarios you can take advantage of using custom <fo:basic-link external-destination="url(http://jaxb.java.net/nonav/2.3.2/docs/api/javax/xml/bind/JAXBContext.html)"><fo:inline>JAXBContext</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://jaxb.java.net/nonav/2.3.2/docs/api/javax/xml/bind/JAXBContext.html)">http://jaxb.java.net/nonav/2.3.2/docs/api/javax/xml/bind/JAXBContext.html</fo:basic-link>]</fo:inline>. Creating
                <fo:inline font-family="monospace">JAXBContext</fo:inline> is an expensive operation and if you already have one created, same instance
                can be used by Jersey. Other possible use-case for this is when you need to set some specific things
                to <fo:inline font-family="monospace">JAXBContext</fo:inline>, for example to set a different class loader.
            </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8790"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.37. PlanetJAXBContextProvider</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8793">  1 @Provider
  2 public class PlanetJAXBContextProvider implements ContextResolver&lt;JAXBContext&gt; {
  3     private JAXBContext context = null;
  4 
  5     public JAXBContext getContext(Class&lt;?&gt; type) {
  6         if (type != Planet.class) {
  7             return null; // we don't support nothing else than Planet
  8         }
  9 
 10         if (context == null) {
 11             try {
 12                 context = JAXBContext.newInstance(Planet.class);
 13             } catch (JAXBException e) {
 14                 // log warning/error; null will be returned which indicates that this
 15                 // provider won't/can't be used.
 16             }
 17         }
 18 
 19         return context;
 20     }
 21 }</fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Sample above shows simple <fo:inline font-family="monospace">JAXBContext</fo:inline> creation, all you need to do is put
                this <fo:inline font-family="monospace">@Provider</fo:inline> annotated class somewhere where Jersey can find it. Users sometimes
                have problems with using provider classes on client side, so just to reminder - you have to
                declare them in the client config (client does not do anything like package scanning done by server).
            </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8803"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.38. Using Provider with JAX-RS client</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8806">  1 
  2 ClientConfig config = new ClientConfig();
  3 config.register(PlanetJAXBContextProvider.class);
  4 
  5 Client client = ClientBuilder.newClient(config);
  6                 </fo:block></fo:block></fo:block></fo:block><fo:block id="d0e8808"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">MOXy</fo:marker><fo:block font-size="17.28pt">9.2.5. MOXy</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                If you want to use <fo:basic-link external-destination="url(http://www.eclipse.org/eclipselink/moxy.php)"><fo:inline>MOXy</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://www.eclipse.org/eclipselink/moxy.php)">http://www.eclipse.org/eclipselink/moxy.php</fo:basic-link>]</fo:inline> as your JAXB
                implementation instead of JAXB RI you have two options. You can either use the standard JAXB mechanisms to define
                the <fo:inline font-family="monospace">JAXBContextFactory</fo:inline> from which a <fo:inline font-family="monospace">JAXBContext</fo:inline> instance would be obtained (for more
                on this topic, read JavaDoc on <fo:basic-link external-destination="url(http://jaxb.java.net/nonav/2.3.2/docs/api/javax/xml/bind/JAXBContext.html)"><fo:inline>JAXBContext</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://jaxb.java.net/nonav/2.3.2/docs/api/javax/xml/bind/JAXBContext.html)">http://jaxb.java.net/nonav/2.3.2/docs/api/javax/xml/bind/JAXBContext.html</fo:basic-link>]</fo:inline>) or you can add <fo:inline font-family="monospace">jersey-media-moxy</fo:inline> module to
                your project and register/configure
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/moxy/xml/MoxyXmlFeature.html)"><fo:inline>MoxyXmlFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/moxy/xml/MoxyXmlFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/moxy/xml/MoxyXmlFeature.html</fo:basic-link>]</fo:inline> class/instance in
                the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html)"><fo:inline>Configurable</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html</fo:basic-link>]</fo:inline>.
            </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8834"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.39. Add <fo:inline font-family="monospace">jersey-media-moxy</fo:inline> dependency.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8840">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.media&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-media-moxy&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block></fo:block></fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8842"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.40. Register the <fo:inline font-family="monospace">MoxyXmlFeature</fo:inline> class.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8848">  1 final ResourceConfig config = new ResourceConfig()
  2     .packages("org.glassfish.jersey.examples.xmlmoxy")
  3     .register(MoxyXmlFeature.class);</fo:block></fo:block></fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8850"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.41. Configure and register an <fo:inline font-family="monospace">MoxyXmlFeature</fo:inline> instance.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8856">  1 // Configure Properties.
  2 final Map&lt;String, Object&gt; properties = new HashMap&lt;String, Object&gt;();
  3 // ...
  4 
  5 // Obtain a ClassLoader you want to use.
  6 final ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
  7 
  8 final ResourceConfig config = new ResourceConfig()
  9     .packages("org.glassfish.jersey.examples.xmlmoxy")
 10     .register(new MoxyXmlFeature(
 11         properties,
 12         classLoader,
 13         true, // Flag to determine whether eclipselink-oxm.xml file should be used for lookup.
 14         CustomClassA.class, CustomClassB.class  // Classes to be bound.
 15     ));</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="multipart"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Multipart</fo:marker><fo:block font-size="20.735999999999997pt">9.3. Multipart</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e8863"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Overview</fo:marker><fo:block font-size="17.28pt">9.3.1. Overview</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The classes in this module provide an integration of <fo:inline font-family="monospace">multipart/*</fo:inline> request and response bodies
                in a JAX-RS runtime environment. The set of registered providers is leveraged, in that the content type for a body
                part of such a message reuses the same <fo:inline font-family="monospace">MessageBodyReader&lt;T&gt;</fo:inline>/<fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline>
                implementations as would be used for that content type as a standalone entity.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The following list of general MIME MultiPart features is currently supported:

                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e8879"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e8880"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            The <fo:inline font-family="monospace">MIME-Version: 1.0</fo:inline> HTTP header is included on generated responses.
                            It is accepted, but not required, on processed requests.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e8886"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            A <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)"><fo:inline>MessageBodyReader&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html</fo:basic-link>]</fo:inline> implementation for consuming MIME MultiPart entities.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e8892"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            A <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline> implementation for producing MIME MultiPart entities.
                            The appropriate <fo:inline font-family="monospace">@Provider</fo:inline> is used to serialize each body part, based on its media type.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e8901"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            Optional creation of an appropriate <fo:inline font-family="monospace">boundary</fo:inline> parameter on a generated
                            <fo:inline font-family="monospace">Content-Type</fo:inline> header, if not already present.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                For more information refer to <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/package-summary.html)"><fo:inline>Multi Part</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/package-summary.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/package-summary.html</fo:basic-link>]</fo:inline>.
            </fo:block><fo:block id="d0e8916"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">9.3.1.1. Dependency</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    To use multipart features you need to add <fo:inline font-family="monospace">jersey-media-multipart</fo:inline> module to your <fo:inline font-family="monospace">pom.xml</fo:inline> file:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8927">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.media&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-media-multipart&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>

                    If you're not using Maven make sure to have all needed dependencies (see <fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-multipart/dependencies.html)"><fo:inline>jersey-media-multipart</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-multipart/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-media-multipart/dependencies.html</fo:basic-link>]</fo:inline>) on the
                    class-path.
                </fo:block></fo:block><fo:block id="d0e8933"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">9.3.1.2. Registration</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Before you can use capabilities of the <fo:inline font-family="monospace">jersey-media-multipart</fo:inline> module in your client/server code, you
                    need to register <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/MultiPartFeature.html)"><fo:inline>MultiPartFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/MultiPartFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/MultiPartFeature.html</fo:basic-link>]</fo:inline>.

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8944"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.42. Building client with MultiPart feature enabled.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8947">final Client client = ClientBuilder.newBuilder()
    .register(MultiPartFeature.class)
    .build();</fo:block></fo:block></fo:block>

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8950"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.43. Creating JAX-RS application with MultiPart feature enabled.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8953">// Create JAX-RS application.
final Application application = new ResourceConfig()
    .packages("org.glassfish.jersey.examples.multipart")
    .register(MultiPartFeature.class)</fo:block></fo:block></fo:block>
                </fo:block></fo:block><fo:block id="d0e8956"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">9.3.1.3. Examples</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Jersey provides a
                    <fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/multipart-webapp)"><fo:inline>Multipart Web Application Example</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/multipart-webapp)">https://github.com/jersey/jersey/tree/2.28/examples/multipart-webapp</fo:basic-link>]</fo:inline>
                    on how to use multipart features.</fo:block></fo:block></fo:block><fo:block id="d0e8964"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Client</fo:marker><fo:block font-size="17.28pt">9.3.2. Client</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/MultiPart.html)"><fo:inline>MultiPart</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/MultiPart.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/MultiPart.html</fo:basic-link>]</fo:inline> class (or it's subclasses) can be used as an entry point to using
                <fo:inline font-family="monospace">jersey-media-multipart</fo:inline> module on the client side. This class represents a
                <fo:basic-link external-destination="url(http://en.wikipedia.org/wiki/MIME#Multipart_messages)"><fo:inline>MIME multipart message</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://en.wikipedia.org/wiki/MIME#Multipart_messages)">http://en.wikipedia.org/wiki/MIME#Multipart_messages</fo:basic-link>]</fo:inline> and is able
                to hold an arbitrary number of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/BodyPart.html)"><fo:inline>BodyPart</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/BodyPart.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/BodyPart.html</fo:basic-link>]</fo:inline>s. Default media type is
                <fo:basic-link external-destination="url(http://en.wikipedia.org/wiki/MIME#Mixed)"><fo:inline>multipart/mixed</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://en.wikipedia.org/wiki/MIME#Mixed)">http://en.wikipedia.org/wiki/MIME#Mixed</fo:basic-link>]</fo:inline>
                for <fo:inline font-family="monospace">MultiPart</fo:inline> entity and <fo:inline font-family="monospace">text/plain</fo:inline> for
                <fo:inline font-family="monospace">BodyPart</fo:inline>.

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e8993"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.44. <fo:inline font-family="monospace">MultiPart</fo:inline> entity</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e8998">final MultiPart multiPartEntity = new MultiPart()
        .bodyPart(new BodyPart().entity("hello"))
        .bodyPart(new BodyPart(new JaxbBean("xml"), MediaType.APPLICATION_XML_TYPE))
        .bodyPart(new BodyPart(new JaxbBean("json"), MediaType.APPLICATION_JSON_TYPE));

final WebTarget target = // Create WebTarget.
final Response response = target
        .request()
        .post(Entity.entity(multiPartEntity, multiPartEntity.getMediaType()));</fo:block></fo:block></fo:block>

                If you send a <fo:inline font-family="monospace">multiPartEntity</fo:inline> to the server the entity with <fo:inline font-family="monospace">Content-Type</fo:inline>
                header in HTTP message would look like (don't forget to register a JSON provider):

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e9007"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.45. <fo:inline font-family="monospace">MultiPart</fo:inline> entity in HTTP message.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e9012"><fo:inline font-style="italic">Content-Type: multipart/mixed; boundary=Boundary_1_829077776_1369128119878</fo:inline>

--Boundary_1_829077776_1369128119878
Content-Type: text/plain

hello
--Boundary_1_829077776_1369128119878
Content-Type: application/xml

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;jaxbBean&gt;&lt;value&gt;xml&lt;/value&gt;&lt;/jaxbBean&gt;
--Boundary_1_829077776_1369128119878
Content-Type: application/json

{"value":"json"}
--Boundary_1_829077776_1369128119878--</fo:block></fo:block></fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                When working with forms (e.g. media type <fo:inline font-family="monospace">multipart/form-data</fo:inline>) and various fields in them,
                there is a more convenient class to be used - <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/FormDataMultiPart.html)"><fo:inline>FormDataMultiPart</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/FormDataMultiPart.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/FormDataMultiPart.html</fo:basic-link>]</fo:inline>. It automatically sets
                the media type for the <fo:inline font-family="monospace">FormDataMultiPart</fo:inline> entity to
                <fo:inline font-family="monospace">multipart/form-data</fo:inline> and <fo:inline font-family="monospace">Content-Disposition</fo:inline> header to
                <fo:inline font-family="monospace">FormDataBodyPart</fo:inline> body parts.

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e9037"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.46. <fo:inline font-family="monospace">FormDataMultiPart</fo:inline> entity</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e9042">final FormDataMultiPart multipart = new FormDataMultiPart()
    .field("hello", "hello")
    .field("xml", new JaxbBean("xml"))
    .field("json", new JaxbBean("json"), MediaType.APPLICATION_JSON_TYPE);

final WebTarget target = // Create WebTarget.
final Response response = target.request().post(Entity.entity(multipart, multipart.getMediaType()));</fo:block></fo:block></fo:block>

                To illustrate the difference when using <fo:inline font-family="monospace">FormDataMultiPart</fo:inline> instead of
                <fo:inline font-family="monospace">FormDataBodyPart</fo:inline> you can take a look at the
                <fo:inline font-family="monospace">FormDataMultiPart</fo:inline> entity from HTML message:

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e9054"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.47. <fo:inline font-family="monospace">FormDataMultiPart</fo:inline> entity in HTTP message.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e9059"><fo:inline font-style="italic">Content-Type: multipart/form-data; boundary=Boundary_1_511262261_1369143433608</fo:inline>

--Boundary_1_511262261_1369143433608
Content-Type: text/plain
Content-Disposition: form-data; name="hello"

hello
--Boundary_1_511262261_1369143433608
Content-Type: application/xml
Content-Disposition: form-data; name="xml"

&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;jaxbBean&gt;&lt;value&gt;xml&lt;/value&gt;&lt;/jaxbBean&gt;
--Boundary_1_511262261_1369143433608
Content-Type: application/json
Content-Disposition: form-data; name="json"

{"value":"json"}
--Boundary_1_511262261_1369143433608--</fo:block></fo:block></fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                A common use-case for many users is sending files from client to server. For this purpose you can use classes from
                <fo:inline font-family="monospace">org.glassfish.jersey.jersey.media.multipart</fo:inline> package, such as
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/file/FileDataBodyPart.html)"><fo:inline>FileDataBodyPart</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/file/FileDataBodyPart.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/file/FileDataBodyPart.html</fo:basic-link>]</fo:inline> or <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/file/StreamDataBodyPart.html)"><fo:inline>StreamDataBodyPart</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/file/StreamDataBodyPart.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/file/StreamDataBodyPart.html</fo:basic-link>]</fo:inline>.

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e9075"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.48. Multipart - sending files.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e9078">// MediaType of the body part will be derived from the file.
final FileDataBodyPart filePart = new FileDataBodyPart("my_pom", new File("pom.xml"));

final FormDataMultiPart multipart = new FormDataMultiPart()
    .field("foo", "bar")
    .bodyPart(filePart);

final WebTarget target = // Create WebTarget.
final Response response = target.request()
    .post(Entity.entity(multipart, multipart.getMediaType()));</fo:block></fo:block></fo:block>
            </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e9081"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Warning</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Do not use <fo:inline font-family="monospace">ApacheConnectorProvider</fo:inline> nor <fo:inline font-family="monospace">GrizzlyConnectorProvider</fo:inline>
                    neither <fo:inline font-family="monospace">JettyConnectorProvider</fo:inline> connector implementations with Jersey Multipart
                    features. See <fo:basic-link internal-destination="connectors.warning"><fo:inline>Header modification issue</fo:inline></fo:basic-link> warning for more details.
                </fo:block></fo:block></fo:block></fo:block><fo:block id="d0e9095"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Server</fo:marker><fo:block font-size="17.28pt">9.3.3. Server</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Returning a multipart response from server to client is not much different from the parts described in the client
                section above. To obtain a multipart entity, sent by a client, in the application you can use two approaches:

                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e9100"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9101"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Injecting the whole <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/MultiPart.html)"><fo:inline>MultiPart</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/MultiPart.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/MultiPart.html</fo:basic-link>]</fo:inline> entity.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9107"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            Injecting particular parts of a <fo:inline font-family="monospace">form-data</fo:inline> multipart request via
                            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/FormDataParam.html)"><fo:inline>@FormDataParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/FormDataParam.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/FormDataParam.html</fo:basic-link>]</fo:inline> annotation.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block><fo:block id="d0e9117"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">9.3.3.1. Injecting and returning the <fo:inline font-family="monospace">MultiPart</fo:inline> entity</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Working with <fo:inline font-family="monospace">MultiPart</fo:inline> types is no different from injecting/returning other
                    entity types.
                    Jersey provides <fo:inline font-family="monospace">MessageBodyReader&lt;T&gt;</fo:inline> for reading the request entity and injecting this entity
                    into a method parameter of a resource method and <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline> for writing output entities.
                    You can expect that either <fo:inline font-family="monospace">MultiPart</fo:inline> or
                    <fo:inline font-family="monospace">FormDataMultiPart</fo:inline> (<fo:inline font-family="monospace">multipart/form-data</fo:inline> media type) object
                    to be injected into a resource method.
                </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e9143"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.49. Resource method using <fo:inline font-family="monospace">MultiPart</fo:inline> as input parameter / return value.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e9149">@POST
@Produces("multipart/mixed")
public MultiPart post(final FormDataMultiPart multiPart) {
    return multiPart;
}</fo:block></fo:block></fo:block></fo:block><fo:block id="d0e9151"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">9.3.3.2. Injecting with <fo:inline font-family="monospace">@FormDataParam</fo:inline></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    If you just need to bin the named body part(s) of a <fo:inline font-family="monospace">multipart/form-data</fo:inline> request
                    entity body to a resource method parameter you can use <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/FormDataParam.html)"><fo:inline>@FormDataParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/FormDataParam.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/FormDataParam.html</fo:basic-link>]</fo:inline> annotation.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    This annotation in conjunction with the media type <fo:inline font-family="monospace">multipart/form-data</fo:inline> should be used for
                    submitting and consuming forms that contain files, non-ASCII data, and binary data.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The type of the annotated parameter can be one of the following (for more detailed description see
                    javadoc to <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/FormDataParam.html)"><fo:inline>@FormDataParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/FormDataParam.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/multipart/FormDataParam.html</fo:basic-link>]</fo:inline>):

                    <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e9174"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9175"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:inline font-family="monospace">FormDataBodyPart</fo:inline> - The value of the parameter will be the first
                                named body part or <fo:inline font-family="monospace">null</fo:inline> if such a named body part is not present.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9184"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                A <fo:inline font-family="monospace">List</fo:inline> or <fo:inline font-family="monospace">Collection</fo:inline> of
                                <fo:inline font-family="monospace">FormDataBodyPart</fo:inline>.
                                The value of the parameter will one or more named body parts with the same name or
                                <fo:inline font-family="monospace">null</fo:inline> if such a named body part is not present.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9199"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:inline font-family="monospace">FormDataContentDisposition</fo:inline> - The value of the parameter will be the
                                content disposition of the first named body part part or <fo:inline font-family="monospace">null</fo:inline> if such a named body part
                                is not present.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9208"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                A <fo:inline font-family="monospace">List</fo:inline> or <fo:inline font-family="monospace">Collection</fo:inline> of
                                <fo:inline font-family="monospace">FormDataContentDisposition</fo:inline>.
                                The value of the parameter will one or more content dispositions of the named body parts with the
                                same name or <fo:inline font-family="monospace">null</fo:inline> if such a named body part is not present.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9223"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                A type for which a message body reader is available given the media type of the first named body
                                part. The value of the parameter will be the result of reading using the message body reader given
                                the type <fo:inline font-family="monospace">T</fo:inline>, the media type of the named part, and the bytes of the named body
                                part as input.
                            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                If there is no named part present and there is a default value present as declared by
                                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/DefaultValue.html)"><fo:inline>@DefaultValue</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/DefaultValue.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/DefaultValue.html</fo:basic-link>]</fo:inline> then the media type will be set to <fo:inline font-family="monospace">text/plain</fo:inline>.
                                The value of the parameter will be the result of reading using the message body reader given the
                                type <fo:inline font-family="monospace">T</fo:inline>, the media type <fo:inline font-family="monospace">text/plain</fo:inline>, and the UTF-8 encoded
                                bytes of the default value as input.
                            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                If there is no message body reader available and the type <fo:inline font-family="monospace">T</fo:inline> conforms
                                to a type specified by <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/FormParam.html)"><fo:inline>@FormParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/FormParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/FormParam.html</fo:basic-link>]</fo:inline> then processing is performed as specified by
                                <fo:inline font-family="monospace">@FormParam</fo:inline>, where the values of the form parameter are <fo:inline font-family="monospace">String</fo:inline>
                                instances produced by reading the bytes of the named body parts utilizing a message body reader
                                for the <fo:inline font-family="monospace">String</fo:inline> type and the media type <fo:inline font-family="monospace">text/plain</fo:inline>.
                            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                If there is no named part present then processing is performed as specified by
                                <fo:inline font-family="monospace">@FormParam</fo:inline>.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
                </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e9269"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 9.50. Use of <fo:inline font-family="monospace">@FormDataParam</fo:inline> annotation</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e9275">@POST
@Consumes(MediaType.MULTIPART_FORM_DATA)
public String postForm(
    @DefaultValue("true") @FormDataParam("enabled") boolean enabled,
    @FormDataParam("data") FileData bean,
    @FormDataParam("file") InputStream file,
    @FormDataParam("file") FormDataContentDisposition fileDisposition) {

    // ...
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    In the example above the server consumes a <fo:inline font-family="monospace">multipart/form-data</fo:inline> request entity body that
                    contains one optional named body part <fo:inline font-family="monospace">enabled</fo:inline> and two required named body parts
                    <fo:inline font-family="monospace">data</fo:inline> and <fo:inline font-family="monospace">file</fo:inline>.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The optional part <fo:inline font-family="monospace">enabled</fo:inline> is processed
                    as a <fo:inline font-family="monospace">boolean</fo:inline> value, if the part is absent then the value will be <fo:inline font-family="monospace">true</fo:inline>.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The part <fo:inline font-family="monospace">data</fo:inline> is processed as a JAXB bean and contains some meta-data about the following
                    part.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The part <fo:inline font-family="monospace">file</fo:inline> is a file that is uploaded, this is processed as an
                    <fo:inline font-family="monospace">InputStream</fo:inline>. Additional information about the file from the
                    <fo:inline font-family="monospace">Content-Disposition</fo:inline> header can be accessed by the parameter
                    <fo:inline font-family="monospace">fileDisposition</fo:inline>.
                </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e9321"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Tip</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:inline font-family="monospace">@FormDataParam</fo:inline> annotation can be also used on fields.</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Filters and Interceptors</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Filters and Interceptors</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="filters-and-interceptors"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 10. Filters and Interceptors</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e9330"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Introduction</fo:marker><fo:block font-size="20.735999999999997pt">10.1. Introduction</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">This chapter describes filters, interceptors and their configuration. Filters and interceptors
            can be used on both sides, on the client and the server side. Filters can modify inbound and outbound requests
            and responses including modification of headers, entity and other request/response parameters. Interceptors
            are used primarily for modification of entity input and output streams. You can use interceptors for example
            to zip and unzip output and input entity streams.
        </fo:block></fo:block><fo:block id="d0e9335"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Filters</fo:marker><fo:block font-size="20.735999999999997pt">10.2. Filters</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Filters can be used when you want to modify any request or response parameters like headers. For example
            you would like to add a response header "X-Powered-By" to each generated response. Instead of adding this header
            in each resource method you would use a response filter to add this header.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            There are filters on the server side and the client side.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Server filters:
            <fo:table space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9344" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerRequestFilter.html)"><fo:inline>ContainerRequestFilter</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerRequestFilter.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerRequestFilter.html</fo:basic-link>]</fo:inline>
                </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerResponseFilter.html)"><fo:inline>ContainerResponseFilter</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerResponseFilter.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerResponseFilter.html</fo:basic-link>]</fo:inline>
                </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>
            Client filters:
            <fo:table space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9354" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientRequestFilter.html)"><fo:inline>ClientRequestFilter</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientRequestFilter.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientRequestFilter.html</fo:basic-link>]</fo:inline>
                </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientResponseFilter.html)"><fo:inline>ClientResponseFilter</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientResponseFilter.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientResponseFilter.html</fo:basic-link>]</fo:inline>
                </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>
        </fo:block><fo:block id="d0e9364"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Server filters</fo:marker><fo:block font-size="17.28pt">10.2.1. Server filters</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block>
            The following example shows a simple container response filter adding a header to each response.

            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e9370"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 10.1. Container response filter</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e9373">  1 import java.io.IOException;
  2 import javax.ws.rs.container.ContainerRequestContext;
  3 import javax.ws.rs.container.ContainerResponseContext;
  4 import javax.ws.rs.container.ContainerResponseFilter;
  5 import javax.ws.rs.core.Response;
  6 
  7 public class PoweredByResponseFilter implements ContainerResponseFilter {
  8 
  9     @Override
 10     public void filter(ContainerRequestContext requestContext, ContainerResponseContext responseContext)
 11         throws IOException {
 12 
 13             responseContext.getHeaders().add("X-Powered-By", "Jersey :-)");
 14     }
 15 }</fo:block></fo:block></fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                In the example above the <fo:inline font-family="monospace">PoweredByResponseFilter</fo:inline>
                always adds a header "X-Powered-By" to the
                response. The filter must inherit from the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerResponseFilter.html)"><fo:inline>ContainerResponseFilter</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerResponseFilter.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerResponseFilter.html</fo:basic-link>]</fo:inline> and must be registered
                as a provider. The filter will be executed for every response which is in most cases after the resource method
                is executed. Response filters are executed even if the resource method is not run, for example when
                the resource method is not found and 404 "Not found" response code is returned by the Jersey runtime. In this case
                the filter will be executed and will process the 404 response.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The <fo:inline font-family="monospace">filter()</fo:inline> method has two arguments, the container request and container response. The
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerRequestContext.html)"><fo:inline>ContainerRequestContext</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerRequestContext.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerRequestContext.html</fo:basic-link>]</fo:inline> is accessible only for read only purposes as the filter is executed already
                in response phase. The modifications can be done in the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerResponseContext.html)"><fo:inline>ContainerResponseContext</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerResponseContext.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerResponseContext.html</fo:basic-link>]</fo:inline>.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The following example shows the usage of a request filter.
            </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e9397"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 10.2. Container request filter</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e9400">  1 import java.io.IOException;
  2 import javax.ws.rs.container.ContainerRequestContext;
  3 import javax.ws.rs.container.ContainerRequestFilter;
  4 import javax.ws.rs.core.Response;
  5 import javax.ws.rs.core.SecurityContext;
  6 
  7 public class AuthorizationRequestFilter implements ContainerRequestFilter {
  8 
  9     @Override
 10     public void filter(ContainerRequestContext requestContext)
 11                     throws IOException {
 12 
 13         final SecurityContext securityContext =
 14                     requestContext.getSecurityContext();
 15         if (securityContext == null ||
 16                     !securityContext.isUserInRole("privileged")) {
 17 
 18                 requestContext.abortWith(Response
 19                     .status(Response.Status.UNAUTHORIZED)
 20                     .entity("User cannot access the resource.")
 21                     .build());
 22         }
 23     }
 24 }</fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The request filter is similar to the response filter but does not have access to the ContainerResponseContext
                as no response is accessible yet. Response filter inherits from <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerResponseFilter.html)"><fo:inline>ContainerResponseFilter</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerResponseFilter.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerResponseFilter.html</fo:basic-link>]</fo:inline>.
                Request filter is executed before the resource method is run and before the
                response is created. The filter has possibility to manipulate the request parameters including request
                headers or entity.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The <fo:inline font-family="monospace">AuthorizationRequestFilter</fo:inline> in the example checks whether the
                authenticated user is in the privileged role. If it is not then the request is <fo:inline font-style="italic">aborted</fo:inline>
                by calling <fo:inline font-family="monospace">ContainerRequestContext.abortWith(Response response)</fo:inline> method. The method
                is intended to be called from the request filter in situation when the request should not be processed further in the standard processing chain.
                When the <fo:inline font-family="monospace">filter</fo:inline> method is finished the response passed as a parameter to the
                <fo:inline font-family="monospace">abortWith</fo:inline> method is used to respond to the request. Response filters, if any are registered,
                will be executed and will have possibility to process the aborted response.
            </fo:block><fo:block id="d0e9424"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">10.2.1.1. Pre-matching and post-matching filters</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                All the request filters shown above was implemented as post-matching filters. It means that the filters
                would be applied only after a suitable resource method has been selected to process the actual request
                i.e. after request matching happens. Request matching is the process of finding a resource method that
                should be executed based on the request path and other request parameters. Since post-matching request
                filters are invoked when a particular resource method has already been selected, such filters can not
                influence the resource method matching process.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                To overcome the above described limitation, there is a possibility to mark
                a server request filter as a <fo:inline font-style="italic">pre-matching</fo:inline> filter,
                i.e. to annotate the filter class with the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/PreMatching.html)"><fo:inline>@PreMatching</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/PreMatching.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/PreMatching.html</fo:basic-link>]</fo:inline> annotation.
                Pre-matching filters are request filters that are executed before
                the request matching is started. Thanks to this, pre-matching request filters have
                the possibility to influence which method will be matched. Such a pre-matching request filter example is shown
                here:
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e9439"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 10.3. Pre-matching request filter</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e9442">  1 ...
  2 import javax.ws.rs.container.ContainerRequestContext;
  3 import javax.ws.rs.container.ContainerRequestFilter;
  4 import javax.ws.rs.container.PreMatching;
  5 ...
  6 
  7 @PreMatching
  8 public class PreMatchingFilter implements ContainerRequestFilter {
  9 
 10     @Override
 11     public void filter(ContainerRequestContext requestContext)
 12                         throws IOException {
 13         // change all PUT methods to POST
 14         if (requestContext.getMethod().equals("PUT")) {
 15             requestContext.setMethod("POST");
 16         }
 17     }
 18 }</fo:block></fo:block></fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The <fo:inline font-family="monospace">PreMatchingFilter</fo:inline> is a simple pre-matching filter which changes all PUT HTTP
                methods to POST. This might be useful when you want to always handle these PUT and POST HTTP methods
                with the same Java code. After the <fo:inline font-family="monospace">PreMatchingFilter</fo:inline> has been invoked, the rest
                of the request processing will behave as if the POST HTTP method was originally used.
                You cannot do this in post-matching filters
                (standard filters without <fo:inline font-family="monospace">@PreMatching</fo:inline> annotation)
                as the resource method is already matched (selected). An attempt to tweak the original HTTP method in
                a post-matching filter would cause an <fo:inline font-family="monospace">IllegalArgumentException</fo:inline>.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                As written above, pre-matching filters can fully influence the request matching process, which means
                you can even modify request URI in a pre-matching filter by invoking
                the <fo:inline font-family="monospace">setRequestUri(URI)</fo:inline> method of <fo:inline font-family="monospace">ContainerRequestFilter</fo:inline>
                so that a different resource would be matched.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Like in post-matching filters you can abort a response in pre-matching filters too.
            </fo:block></fo:block><fo:block id="d0e9469"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Client filters</fo:marker><fo:block font-size="17.28pt">10.2.2. Client filters</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Client filters are similar to container filters. The response can also be aborted
                in the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientRequestFilter.html)"><fo:inline>ClientRequestFilter</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientRequestFilter.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientRequestFilter.html</fo:basic-link>]</fo:inline> which would cause that no request will actually be sent to the server at all.
                A new response is passed to the <fo:inline font-family="monospace">abort</fo:inline> method. This response will be used and delivered
                as a result of the request invocation. Such a response goes through the client response filters.
                This is similar to what happens on the server side. The process is shown in the following example:
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e9482"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 10.4. Client request filter</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e9485">  1 public class CheckRequestFilter implements ClientRequestFilter {
  2 
  3     @Override
  4     public void filter(ClientRequestContext requestContext)
  5                         throws IOException {
  6         if (requestContext.getHeaders(
  7                         ).get("Client-Name") == null) {
  8             requestContext.abortWith(
  9                         Response.status(Response.Status.BAD_REQUEST)
 10                 .entity("Client-Name header must be defined.")
 11                         .build());
 12          }
 13     }
 14 }</fo:block></fo:block></fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The <fo:inline font-family="monospace">CheckRequestFilter</fo:inline> validates the outgoing request. It is checked for presence of
                a <fo:inline font-family="monospace">Client-Name</fo:inline> header. If the header is not present the request will be aborted
                with a made up response with an appropriate code and message in the entity body. This will cause that
                the original request will not be effectively sent to the server but the actual invocation
                will still end up with a response as if it would be generated by the
                server side. If there would be any client response filter it would be executed on this response.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                To summarize the workflow, for any client request invoked from the client API
                the client request filters (<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientRequestFilter.html)"><fo:inline>ClientRequestFilter</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientRequestFilter.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientRequestFilter.html</fo:basic-link>]</fo:inline>)
                are executed that could manipulate the request.
                If not aborted, the outcoming request is then physically sent over to the server side
                and once a response is received back from the server the client response
                filters (<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientResponseFilter.html)"><fo:inline>ClientResponseFilter</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientResponseFilter.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientResponseFilter.html</fo:basic-link>]</fo:inline>)
                are executed that might again manipulate the returned response.
                Finally the response is passed back to the code that invoked the request.
                If the request was aborted in any client request filter then the
                client/server communication is skipped and the aborted response
                is used in the response filters.
            </fo:block></fo:block></fo:block><fo:block id="d0e9504"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Interceptors</fo:marker><fo:block font-size="20.735999999999997pt">10.3. Interceptors</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Interceptors share a common API for the server and the client side. Whereas filters are primarily intended to manipulate
            request and response parameters like HTTP headers, URIs and/or HTTP methods, interceptors are intended to manipulate entities, via manipulating
            entity input/output streams. If you for example need to encode entity body of a client request then you could
            implement an interceptor to do the work for you.
         </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            There are two kinds of interceptors, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/ReaderInterceptor.html)"><fo:inline>ReaderInterceptor</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/ReaderInterceptor.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/ReaderInterceptor.html</fo:basic-link>]</fo:inline> and <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/WriterInterceptor.html)"><fo:inline>WriterInterceptor</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/WriterInterceptor.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/WriterInterceptor.html</fo:basic-link>]</fo:inline>.
            Reader interceptors are used to manipulate inbound entity streams. These are the streams coming from
            the "wire". So, using a reader interceptor you
            can manipulate request entity stream on the server side (where
            an entity is read from the client request) and response entity stream on the client side (where an entity
            is read from the server response). Writer interceptors are used for cases where entity is written to the
            "wire" which on the server means when writing out a response entity and on the client side when writing
            request entity for a request to be sent out to the server. Writer and reader interceptors are executed before message body
            readers or writers are executed and their primary intention is to wrap the entity streams that will be used in message body
            reader and writers.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The following example shows a writer interceptor that enables GZIP compression of the whole entity body.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e9521"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 10.5. GZIP writer interceptor</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e9524">  1 public class GZIPWriterInterceptor implements WriterInterceptor {
  2 
  3     @Override
  4     public void aroundWriteTo(WriterInterceptorContext context)
  5                     throws IOException, WebApplicationException {
  6         final OutputStream outputStream = context.getOutputStream();
  7         context.setOutputStream(new GZIPOutputStream(outputStream));
  8         context.proceed();
  9     }
 10 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The interceptor gets a output stream from the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/WriterInterceptorContext.html)"><fo:inline>WriterInterceptorContext</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/WriterInterceptorContext.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/WriterInterceptorContext.html</fo:basic-link>]</fo:inline> and sets
            a new one which is a GZIP wrapper of the original output stream. After all interceptors are executed the
            output stream lastly set to the <fo:inline font-family="monospace">WriterInterceptorContext</fo:inline> will be used for serialization of the entity. In the
            example above the entity bytes will be written to the GZIPOutputStream which will compress the stream data
            and write them to the original output stream. The original stream is always the stream which writes the data to
            the "wire". When the interceptor is used on the server, the original output stream is the stream into which writes
            data to the underlying server container stream that sends the response to the client.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The interceptors wrap the streams and they itself work as wrappers. This means that each interceptor is a wrapper
            of another interceptor and it is responsibility of each interceptor implementation to call the wrapped interceptor.
            This is achieved by calling the <fo:inline font-family="monospace">proceed()</fo:inline> method on the <fo:inline font-family="monospace">WriterInterceptorContext</fo:inline>.
            This method will call the next registered interceptor in the chain, so effectivelly this will call all remaining registered interceptors. Calling <fo:inline font-family="monospace">proceed()</fo:inline> from the last
            interceptor in the chain will call the appropriate message body reader. Therefore every interceptor must call the
            <fo:inline font-family="monospace">proceed()</fo:inline> method otherwise the entity would not be written. The wrapping principle is reflected
            also in the method name, aroundWriteTo, which says that the method is wrapping the writing of the entity.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The method aroundWriteTo() gets <fo:inline font-family="monospace">WriterInterceptorContext</fo:inline> as a parameter. This context contains getters
            and setters for header parameters, request properties, entity, entity stream and other properties. These are the
            properties which will be passed to the final <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline>. Interceptors are allowed to modify
            all these properties. This could influence writing of an entity by <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline> and even
            selection of such a writer. By changing media type (<fo:inline font-family="monospace">WriterInterceptorContext</fo:inline>.setMediaType())
            the interceptor can cause that different message body writer will be chosen. The interceptor can also
            completely replace the entity if it is needed. However, for modification of headers, request
            properties and such, the filters are usually more preferable choice. Interceptors are executed
            only when there is any entity and when the entity is to be written. So, when you always want to add a new
            header to a response no matter what, use filters as interceptors might not be executed when no entity is
            present. Interceptors should modify properties only for entity serialization
            and deserialization purposes.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Let's now look at an example of a <fo:inline font-family="monospace">ReaderInterceptor</fo:inline>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e9570"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 10.6. GZIP reader interceptor</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e9573">  1 public class GZIPReaderInterceptor implements ReaderInterceptor {
  2 
  3     @Override
  4     public Object aroundReadFrom(ReaderInterceptorContext context)
  5                     throws IOException, WebApplicationException {
  6         final InputStream originalInputStream = context.getInputStream();
  7         context.setInputStream(new GZIPInputStream(originalInputStream));
  8         return context.proceed();
  9     }
 10 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The <fo:inline font-family="monospace">GZIPReaderInterceptor</fo:inline> wraps the original input stream with the
            <fo:inline font-family="monospace">GZIPInputStream</fo:inline>. All further reads from the entity stream will cause that data will be decompressed
            by this stream. The interceptor method <fo:inline font-family="monospace">aroundReadFrom()</fo:inline> must return an entity. The entity
            is returned from the <fo:inline font-family="monospace">proceed</fo:inline> method of the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/ReaderInterceptorContext.html)"><fo:inline>ReaderInterceptorContext</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/ReaderInterceptorContext.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/ReaderInterceptorContext.html</fo:basic-link>]</fo:inline>. The
            <fo:inline font-family="monospace">proceed</fo:inline> method internally calls the wrapped interceptor which must also return an entity.
            The <fo:inline font-family="monospace">proceed</fo:inline> method invoked from the last interceptor in the chain calls message body reader which deserializes
            the entity end returns it. Every interceptor can change this entity if there is a need but in the most cases
            interceptors will just return the entity as returned from the <fo:inline font-family="monospace">proceed</fo:inline> method.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            As already mentioned above, interceptors should be primarily used to manipulate entity body.
            Similar to methods exposed by <fo:inline font-family="monospace">WriterInterceptorContext</fo:inline> the <fo:inline font-family="monospace">ReaderInterceptorContext</fo:inline>
            introduces a set of methods for modification of request/response properties like HTTP headers,
            URIs and/or HTTP methods (excluding getters and setters for entity as entity has not been read yet).
            Again the same rules as for <fo:inline font-family="monospace">WriterInterceptor</fo:inline> applies for changing these properties (change only
            properties in order to influence reading of an entity).
        </fo:block></fo:block><fo:block id="d0e9613"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Filter and interceptor execution order</fo:marker><fo:block font-size="20.735999999999997pt">10.4. Filter and interceptor execution order</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Let's look closer at the context of execution of filters and interceptors. The following steps describes scenario
            where a JAX-RS client makes a POST request to the server. The server receives an entity and sends a response back
            with the same entity. GZIP reader and writer interceptors are registered on the
            client and the server. Also filters are registered on client and server which change the headers of request
            and response.
            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.2em" id="d0e9618"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9619"><fo:list-item-label end-indent="label-end()"><fo:block>1.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>Client request invoked: The POST request with attached entity is built on the client and invoked.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9621"><fo:list-item-label end-indent="label-end()"><fo:block>2.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>ClientRequestFilters: client request filters are executed on the client and they
                    manipulate the request headers.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9623"><fo:list-item-label end-indent="label-end()"><fo:block>3.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>Client <fo:inline font-family="monospace">WriterInterceptor</fo:inline>: As the request contains an entity, writer interceptor registered on the client is executed before
                    a MessageBodyWriter is executed. It wraps the entity output stream with the GZipOutputStream.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9628"><fo:list-item-label end-indent="label-end()"><fo:block>4.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>Client MessageBodyWriter: message body writer is executed on the client which serializes the entity
                    into the new GZipOutput stream. This stream zips the data and sends it to the "wire".</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9630"><fo:list-item-label end-indent="label-end()"><fo:block>5.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>Server: server receives a request. Data of entity is compressed which means that pure read from
                    the entity input stream would return compressed data.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9632"><fo:list-item-label end-indent="label-end()"><fo:block>6.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>Server pre-matching ContainerRequestFilters: ContainerRequestFilters are executed that can manipulate
                    resource method matching process.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9634"><fo:list-item-label end-indent="label-end()"><fo:block>7.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>Server: matching: resource method matching is done.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9636"><fo:list-item-label end-indent="label-end()"><fo:block>8.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>Server: post-matching ContainerRequestFilters: ContainerRequestFilters post matching filters are executed.
                    This include execution of all global filters (without name binding) and filters name-bound to the matched
                    method.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9638"><fo:list-item-label end-indent="label-end()"><fo:block>9.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>Server <fo:inline font-family="monospace">ReaderInterceptor</fo:inline>: reader interceptors are executed on the server. The GZIPReaderInterceptor
                    wraps the input stream (the stream from the "wire") into the GZipInputStream and set it to context.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9643"><fo:list-item-label end-indent="label-end()"><fo:block>10.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>Server MessageBodyReader: server message body reader is executed and it deserializes the entity
                    from new GZipInputStream (get from the context). This means the reader will read unzipped data and not
                    the compressed data from the "wire".</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9645"><fo:list-item-label end-indent="label-end()"><fo:block>11.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>Server resource method is executed: the deserialized entity object is passed to the matched resource
                    method as a parameter. The method returns this entity as a response entity.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9647"><fo:list-item-label end-indent="label-end()"><fo:block>12.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>Server ContainerResponseFilters are executed: response filters are executed on the server and
                    they manipulate the response headers. This include all global bound filters (without name binding) and all filters name-bound to the resource method.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9649"><fo:list-item-label end-indent="label-end()"><fo:block>13.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>Server <fo:inline font-family="monospace">WriterInterceptor</fo:inline>: is executed on the server. It wraps the original
                    output stream with a new GZIPOuptutStream. The original stream is the stream that "goes to the wire" (output
                    stream for response from the underlying server container).
                </fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9654"><fo:list-item-label end-indent="label-end()"><fo:block>14.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>Server MessageBodyWriter: message body writer is executed on the server which serializes the entity
                    into the GZIPOutputStream. This stream compresses the data and writes it to the original stream which sends
                    this compressed data back to the client.
                </fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9656"><fo:list-item-label end-indent="label-end()"><fo:block>15.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>Client receives the response: the response contains compressed entity data.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9658"><fo:list-item-label end-indent="label-end()"><fo:block>16.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>Client ClientResponseFilters: client response filters are executed and they manipulate the response headers.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9660"><fo:list-item-label end-indent="label-end()"><fo:block>17.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>Client response is returned: the javax.ws.rs.core.Response is returned from the request invocation.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9662"><fo:list-item-label end-indent="label-end()"><fo:block>18.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>Client code calls response.readEntity(): read entity is executed on the client to extract the entity from the response.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9664"><fo:list-item-label end-indent="label-end()"><fo:block>19.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>Client <fo:inline font-family="monospace">ReaderInterceptor</fo:inline>: the client reader interceptor is executed when readEntity(Class) is called. The interceptor
                        wraps the entity input stream with GZIPInputStream. This will decompress the data from the original input stream.
                </fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9669"><fo:list-item-label end-indent="label-end()"><fo:block>20.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>Client MessageBodyReaders: client message body reader is invoked which reads decompressed data from
                    GZIPInputStream and deserializes the entity.</fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e9671"><fo:list-item-label end-indent="label-end()"><fo:block>21.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>Client: The entity is returned from the readEntity().</fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            It is worth to mention that in the scenario above the reader and writer interceptors are invoked only if the
            entity is present (it does not make sense to wrap entity stream when no entity will be written). The same behaviour
            is there for message body readers and writers. As mentioned above, interceptors are executed before
            the message body reader/writer as a part of their execution and they can wrap the input/output stream
            before the entity is read/written. There are exceptions when interceptors are not run before message body
            reader/writers but this is not the case of simple scenario above. This happens for example when the entity is
            read many times from client response using internal buffering. Then the data are intercepted only once and kept
            'decoded' in the buffer.
        </fo:block></fo:block><fo:block id="d0e9674"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Name binding</fo:marker><fo:block font-size="20.735999999999997pt">10.5. Name binding</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Filters and interceptors can be <fo:inline font-style="italic">name-bound</fo:inline>. Name binding is a concept that allows to say to a JAX-RS
            runtime that a specific filter or interceptor will be executed only for a specific resource method. When a filter or
            an interceptor is limited only to a specific resource method we say that it is <fo:inline font-style="italic">name-bound</fo:inline>.
            Filters and interceptors that do not have such a limitation are called <fo:inline font-style="italic">global</fo:inline>.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Filter or interceptor can be assigned to a resource method using the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/NameBinding.html)"><fo:inline>@NameBinding</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/NameBinding.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/NameBinding.html</fo:basic-link>]</fo:inline> annotation. The annotation
            is used as meta annotation for other user implemented annotations that are applied to a providers and resource
            methods. See the following example:
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e9695"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 10.7. <fo:inline font-family="monospace">@NameBinding</fo:inline> example</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e9700">  1 ...
  2 import java.lang.annotation.Retention;
  3 import java.lang.annotation.RetentionPolicy;
  4 import java.util.zip.GZIPInputStream;
  5 
  6 import javax.ws.rs.GET;
  7 import javax.ws.rs.NameBinding;
  8 import javax.ws.rs.Path;
  9 import javax.ws.rs.Produces;
 10 ...
 11 
 12 
 13 // @Compress annotation is the name binding annotation
 14 @NameBinding
 15 @Retention(RetentionPolicy.RUNTIME)
 16 public @interface Compress {}
 17 
 18 
 19 @Path("helloworld")
 20 public class HelloWorldResource {
 21 
 22     @GET
 23     @Produces("text/plain")
 24     public String getHello() {
 25         return "Hello World!";
 26     }
 27 
 28     @GET
 29     @Path("too-much-data")
 30     @Compress
 31     public String getVeryLongString() {
 32         String str = ... // very long string
 33         return str;
 34     }
 35 }
 36 
 37 // interceptor will be executed only when resource methods
 38 // annotated with @Compress annotation will be executed
 39 @Compress
 40 public class GZIPWriterInterceptor implements WriterInterceptor {
 41     @Override
 42     public void aroundWriteTo(WriterInterceptorContext context)
 43                     throws IOException, WebApplicationException {
 44         final OutputStream outputStream = context.getOutputStream();
 45         context.setOutputStream(new GZIPOutputStream(outputStream));
 46         context.proceed();
 47     }
 48 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The example above defines a new <fo:inline font-family="monospace">@Compress</fo:inline> annotation which is a name binding annotation as
            it is annotated with <fo:inline font-family="monospace">@NameBinding</fo:inline>. The <fo:inline font-family="monospace">@Compress</fo:inline> is applied on the
            resource method <fo:inline font-family="monospace">getVeryLongString()</fo:inline> and on the interceptor
            <fo:inline font-family="monospace">GZIPWriterInterceptor</fo:inline>. The interceptor will be executed only if any resource method
            with such a annotation will be executed. In our example case the interceptor will be executed only for
            the <fo:inline font-family="monospace">getVeryLongString()</fo:inline> method. The interceptor will not be executed for method
            <fo:inline font-family="monospace">getHello()</fo:inline>. In this example the reason is probably clear. We would like to compress
            only long data and we do not need to compress the short response of "Hello World!".
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Name binding can be applied on a resource class. In the example <fo:inline font-family="monospace">HelloWorldResource</fo:inline>
            would be annotated with <fo:inline font-family="monospace">@Compress</fo:inline>. This would mean that all resource
            methods will use compression in this case.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            There might be many name binding annotations defined in an application. When any provider (filter
            or interceptor) is annotated with more than one name binding annotation, then it will be executed for
            resource methods which contain ALL these annotations. So, for example if our interceptor would be
            annotated with another name binding annotation @GZIP then the resource method would need to have both annotations attached,
            @Compress and @GZIP, otherwise the interceptor would not be executed. Based on the previous paragraph we can
            even use the combination when the
            resource method <fo:inline font-family="monospace">getVeryLongString()</fo:inline> would be annotated with @Compress and resource class
            <fo:inline font-family="monospace">HelloWorldResource</fo:inline> would be annotated from with @GZIP. This would also trigger the interceptor as
            annotations of resource methods are aggregated from resource method and from resource class. But this is probably
            just an edge case which will not be used so often.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Note that <fo:inline font-style="italic">global filters are executed always</fo:inline>, so even for resource methods
            which have any name binding annotations.
        </fo:block></fo:block><fo:block id="d0e9747"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Dynamic binding</fo:marker><fo:block font-size="20.735999999999997pt">10.6. Dynamic binding</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Dynamic binding is a way how to assign filters and interceptors to the resource methods in a dynamic
        manner. Name binding from the previous chapter uses a static approach and changes to binding require source
        code change and recompilation. With dynamic binding you can implement code which defines bindings during the application
        initialization time. The following example shows how to implement dynamic binding.</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e9754"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 10.8. Dynamic binding example</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e9757">  1 ...
  2 import javax.ws.rs.core.FeatureContext;
  3 import javax.ws.rs.container.DynamicFeature;
  4 ...
  5 
  6 @Path("helloworld")
  7 public class HelloWorldResource {
  8 
  9     @GET
 10     @Produces("text/plain")
 11     public String getHello() {
 12         return "Hello World!";
 13     }
 14 
 15     @GET
 16     @Path("too-much-data")
 17     public String getVeryLongString() {
 18         String str = ... // very long string
 19         return str;
 20     }
 21 }
 22 
 23 // This dynamic binding provider registers GZIPWriterInterceptor
 24 // only for HelloWorldResource and methods that contain
 25 // "VeryLongString" in their name. It will be executed during
 26 // application initialization phase.
 27 public class CompressionDynamicBinding implements DynamicFeature {
 28 
 29     @Override
 30     public void configure(ResourceInfo resourceInfo, FeatureContext context) {
 31         if (HelloWorldResource.class.equals(resourceInfo.getResourceClass())
 32                 &amp;&amp; resourceInfo.getResourceMethod()
 33                     .getName().contains("VeryLongString")) {
 34             context.register(GZIPWriterInterceptor.class);
 35         }
 36     }
 37 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The example contains one <fo:inline font-family="monospace">HelloWorldResource</fo:inline> which is known from the previous name binding example.
            The difference is in the <fo:inline font-family="monospace">getVeryLongString</fo:inline> method, which now does not define
            the <fo:inline font-family="monospace">@Compress</fo:inline> name binding annotations. The binding is done
            using the provider which implements <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/DynamicFeature.html)"><fo:inline>DynamicFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/DynamicFeature.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/DynamicFeature.html</fo:basic-link>]</fo:inline> interface. The interface defines
            one <fo:inline font-family="monospace">configure</fo:inline>
            method with two arguments, <fo:inline font-family="monospace">ResourceInfo</fo:inline> and <fo:inline font-family="monospace">FeatureContext</fo:inline>.
            <fo:inline font-family="monospace">ResourceInfo</fo:inline> contains information about the resource and method to which the binding can be done.
            The <fo:inline font-family="monospace">configure</fo:inline> method will be executed once for each resource method that is defined in the application.
            In the example above the provider will be executed twice, once for the <fo:inline font-family="monospace">getHello()</fo:inline> method
            and once for <fo:inline font-family="monospace">getVeryLongString()</fo:inline> (
            once the resourceInfo will contain information about getHello() method and once it will point to
            getVeryLongString()). If a dynamic binding provider wants to register any provider for the actual resource method
            it will do that using provided <fo:inline font-family="monospace">FeatureContext</fo:inline> which extends
            JAX-RS <fo:inline font-family="monospace">Configurable</fo:inline> API. All methods for registration of filter or interceptor classes or instances can be used.
            Such dynamically registered filters or interceptors will be bound only to the actual resource method. In the example above the
            <fo:inline font-family="monospace">GZIPWriterInterceptor</fo:inline> will be bound only to the method <fo:inline font-family="monospace">getVeryLongString()</fo:inline>
            which will cause that data will be compressed only for this method and not for the method
            <fo:inline font-family="monospace">getHello()</fo:inline>. The code of <fo:inline font-family="monospace">GZIPWriterInterceptor</fo:inline> is in the examples above.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Note that filters and interceptors registered using dynamic binding are only additional filters run for the
            resource method. If there are any name bound providers or global providers they will still be executed.
        </fo:block></fo:block><fo:block id="d0e9815"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Priorities</fo:marker><fo:block font-size="20.735999999999997pt">10.7. Priorities</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">In case you register more filters and interceptors you might want to define an exact order in which
            they should be invoked. The order can be controlled by the <fo:inline font-family="monospace">@Priority</fo:inline> annotation defined
            by the <fo:inline font-family="monospace">javax.annotation.Priority</fo:inline> class. The annotation accepts an integer parameter of priority.
            Providers used in request processing (<fo:inline font-family="monospace">ContainerRequestFilter</fo:inline>,
            <fo:inline font-family="monospace">ClientRequestFilter</fo:inline>) as well as entity interceptors (<fo:inline font-family="monospace">ReaderInterceptor</fo:inline>,
            <fo:inline font-family="monospace">WriterInterceptor</fo:inline>) are sorted based on the priority in an ascending manner. So, a request filter with
            priority defined with <fo:inline font-family="monospace">@Priority(1000)</fo:inline>
            will be executed before another request filter with priority  defined as <fo:inline font-family="monospace">@Priority(2000)</fo:inline>. Providers
            used during response processing (<fo:inline font-family="monospace">ContainerResponseFilter</fo:inline>,
            <fo:inline font-family="monospace">ClientResponseFilter</fo:inline>) are executed
            in the reverse order (using descending manner), so a provider with the priority defined with
            <fo:inline font-family="monospace">@Priority(2000)</fo:inline> will be executed before another provider with
             priority defined with <fo:inline font-family="monospace">@Priority(1000)</fo:inline>.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            It's a good practice to assign a priority to filters and interceptors. Use <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Priorities.html)"><fo:inline>Priorities</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Priorities.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Priorities.html</fo:basic-link>]</fo:inline> class which
            defines standardized priorities in JAX-RS for different usages, rather than inventing your
            own priorities. So, when you for example write an authentication filter you would assign a priority 1000 which
            is the value of <fo:inline font-family="monospace">Priorities</fo:inline><fo:inline font-family="monospace">.AUTHENTICATION</fo:inline>. The following example
            shows the filter from the beginning
            of this chapter with a priority assigned.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e9868"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 10.9. Priorities example</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e9871">  1 ...
  2 import javax.annotation.Priority;
  3 import javax.ws.rs.Priorities;
  4 ...
  5 
  6 @Priority(Priorities.HEADER_DECORATOR)
  7 public class ResponseFilter implements ContainerResponseFilter {
  8 
  9     @Override
 10     public void filter(ContainerRequestContext requestContext,
 11                     ContainerResponseContext responseContext)
 12                     throws IOException {
 13 
 14         responseContext.getHeaders().add("X-Powered-By", "Jersey :-)");
 15     }
 16 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            As this is a response filter and response filters are executed in the reverse order,
            any other filter with priority lower than 3000 (<fo:inline font-family="monospace">Priorities.HEADER_DECORATOR</fo:inline> is 3000) will be executed after
            this filter. So, for example <fo:inline font-family="monospace">AUTHENTICATION</fo:inline> filter (priority 1000) would be run after this filter.
        </fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Asynchronous Services and Clients</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Asynchronous Services and Clients</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="async"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 11. Asynchronous Services and Clients</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        This chapter describes the usage of asynchronous API on the client and server side. The term <fo:inline font-style="italic">async</fo:inline>
        will be sometimes used interchangeably with the term <fo:inline font-style="italic">asynchronous</fo:inline> in this chapter.
    </fo:block><fo:block id="d0e9894"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Asynchronous Server API</fo:marker><fo:block font-size="20.735999999999997pt">11.1. Asynchronous Server API</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Request processing on the server works by default in a synchronous processing mode, which means that a client
            connection of a request is processed in a single I/O container thread. Once the thread processing the request
            returns to the I/O container, the container can safely assume that the request processing is finished and that
            the client connection can be safely released including all the resources associated with the connection. This model
            is typically sufficient for processing of requests for which the processing resource method execution takes
            a relatively short time. However, in cases where a resource method execution is known to take a long time to compute
            the result, server-side asynchronous processing model should be used. In this model, the association between a
            request processing thread and client connection is broken. I/O container that handles incoming request may no longer
            assume that a client connection can be safely closed when a request processing thread returns. Instead a facility for
            explicitly suspending, resuming and closing client connections needs to be exposed.
            Note that the use of server-side asynchronous processing model will not improve the request processing time perceived
            by the client. It will however increase the throughput of the server, by releasing the
            initial request processing thread back to the I/O container while the request may still be waiting in a queue for
            processing or the processing may still be running on another dedicated thread. The released I/O container thread
            can be used to accept and process new incoming request connections.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The following example shows a simple asynchronous resource method defined using the new JAX-RS async API:
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e9901"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 11.1. Simple async resource</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e9904">  1 @Path("/resource")
  2 public class AsyncResource {
  3     @GET
  4     public void asyncGet(@Suspended final AsyncResponse asyncResponse) {
  5 
  6         new Thread(new Runnable() {
  7             @Override
  8             public void run() {
  9                 String result = veryExpensiveOperation();
 10                 asyncResponse.resume(result);
 11             }
 12 
 13             private String veryExpensiveOperation() {
 14                 // ... very expensive operation
 15             }
 16         }).start();
 17     }
 18 }</fo:block></fo:block></fo:block>
            In the example above, a resource <fo:inline font-family="monospace">AsyncResource</fo:inline>
            with one <fo:inline font-family="monospace">GET</fo:inline> method <fo:inline font-family="monospace">asyncGet</fo:inline> is defined. The <fo:inline font-family="monospace">asyncGet</fo:inline> method
            injects a JAX-RS <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/AsyncResponse.html)"><fo:inline>AsyncResponse</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/AsyncResponse.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/AsyncResponse.html</fo:basic-link>]</fo:inline> instance using a JAX-RS <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/Suspended.html)"><fo:inline>@Suspended</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/Suspended.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/Suspended.html</fo:basic-link>]</fo:inline> annotation.
            Please note that <fo:inline font-family="monospace">AsyncResponse</fo:inline> must be injected by the <fo:inline font-family="monospace">@Suspended</fo:inline>
            annotation and not by <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html)"><fo:inline>@Context</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html</fo:basic-link>]</fo:inline> as <fo:inline font-family="monospace">@Suspended</fo:inline> does not only inject response but also
            says that the method is executed in the asynchronous mode. By the <fo:inline font-family="monospace">AsyncResponse</fo:inline> parameter into
            a resource method we tell the Jersey runtime that the method is supposed to be invoked using the asynchronous
            processing mode, that is the client connection should not be automatically closed by the underlying I/O container
            when the method returns. Instead, the injected <fo:inline font-family="monospace">AsyncResponse</fo:inline> instance (that represents the
            suspended client request connection) will be used to explicitly send the response back to the client using some other
            thread. In other words, Jersey runtime knows that when the <fo:inline font-family="monospace">asyncGet</fo:inline> method completes, the response
            to the client may not be ready yet and the processing must be suspended and wait to be explictly resumed with a
            response once it becomes available. Note that the method <fo:inline font-family="monospace">asyncGet</fo:inline> returns <fo:inline font-family="monospace">void</fo:inline>
            in our example. This is perfectly valid in case of an asynchronous JAX-RS resource method, even for a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/GET.html)"><fo:inline>@GET</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/GET.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/GET.html</fo:basic-link>]</fo:inline>
            method, as the response is never returned directly from the resource method as its return value. Instead, the response
            is later returned using <fo:inline font-family="monospace">AsyncResponse</fo:inline> instance as it is demonstrated in the example. The
            <fo:inline font-family="monospace">asyncGet</fo:inline> resource method starts a new thread and exits from the method. In that state the
            request processing is suspended and the container thread (the one which entered the resource method) is returned back
            to the container's thread pool and it can process other requests. New thread started in the resource method may
            execute an expensive operation which might take a long time to finish. Once a result is ready it is resumed using
            the <fo:inline font-family="monospace">resume()</fo:inline> method on the <fo:inline font-family="monospace">AsyncResponse</fo:inline> instance.
            The resumed response is then processed in the new thread by Jersey in a same way as any other synchronous response,
            including execution of filters and interceptors, use of exception mappers as necessary and sending the response
            back to the client.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            It is important to note that the asynchronous response (<fo:inline font-family="monospace">asyncResponse</fo:inline> in the example)
            does not need to be resumed from the thread started from the resource method. The asynchronous
            response can be resumed even from different request processing thread as it is shown in the
            the example of the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/AsyncResponse.html)"><fo:inline>AsyncResponse</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/AsyncResponse.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/AsyncResponse.html</fo:basic-link>]</fo:inline> javadoc. In the javadoc example the
            async response suspended from the <fo:inline font-family="monospace">GET</fo:inline> method is resumed later on from
            the <fo:inline font-family="monospace">POST</fo:inline> method. The suspended async response is passed between requests using
            a static field and is resumed from the other resource method running on a different request processing thread.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Imagine now a situation when there is a long delay between two requests and you would not like to let
            the client wait for the response "forever" or at least for an unacceptable long time. In asynchronous processing
            model, occurrences of such situations should be carefully considered with client connections not being automatically
            closed when the processing method returns and the response needs to be resumed explicitly based on an event that
            may actually even never happen. To tackle these situations asynchronous <fo:inline font-style="italic">timeouts</fo:inline> can be used.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The following example shows the usage of timeouts:
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e9988"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 11.2. Simple async method with timeout</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e9991">  1 @GET
  2 public void asyncGetWithTimeout(@Suspended final AsyncResponse asyncResponse) {
  3     asyncResponse.setTimeoutHandler(new TimeoutHandler() {
  4 
  5         @Override
  6         public void handleTimeout(AsyncResponse asyncResponse) {
  7             asyncResponse.resume(Response.status(Response.Status.SERVICE_UNAVAILABLE)
  8                     .entity("Operation time out.").build());
  9         }
 10     });
 11     asyncResponse.setTimeout(20, TimeUnit.SECONDS);
 12 
 13     new Thread(new Runnable() {
 14 
 15         @Override
 16         public void run() {
 17             String result = veryExpensiveOperation();
 18             asyncResponse.resume(result);
 19         }
 20 
 21         private String veryExpensiveOperation() {
 22             // ... very expensive operation that typically finishes within 20 seconds
 23         }
 24     }).start();
 25 }</fo:block></fo:block></fo:block>
            By default, there is no timeout defined on the suspended <fo:inline font-family="monospace">AsyncResponse</fo:inline> instance.
            A custom timeout and timeout event handler may be defined using <fo:inline font-family="monospace">setTimeoutHandler(TimeoutHandler)</fo:inline>
            and <fo:inline font-family="monospace">setTimeout(long, TimeUnit)</fo:inline> methods. The <fo:inline font-family="monospace">setTimeoutHandler(TimeoutHandler)</fo:inline>
            method defines the handler that will be invoked when timeout is reached. The handler resumes the response with the
            response code 503 (from Response.Status.<fo:inline font-family="monospace">SERVICE_UNAVAILABLE</fo:inline>).
            A timeout interval can be also defined without specifying a custom timeout handler (using just the
            <fo:inline font-family="monospace">setTimeout(long, TimeUnit)</fo:inline> method).
            In such case the default behaviour of Jersey runtime is to throw a <fo:inline font-family="monospace">ServiceUnavailableException</fo:inline>
            that gets mapped into 503, "Service Unavailable" HTTP error response, as defined by the JAX-RS specification.
        </fo:block><fo:block id="d0e10015"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Asynchronous Server-side Callbacks</fo:marker><fo:block font-size="17.28pt">11.1.1. Asynchronous Server-side Callbacks</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                As operations in asynchronous cases might take long time and they are not always finished within
                a single resource method invocation, JAX-RS offers facility to register callbacks to be invoked
                based on suspended async response state changes. In Jersey you can register two JAX-RS callbacks:
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e10020"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e10021"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/CompletionCallback.html)"><fo:inline>CompletionCallback</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/CompletionCallback.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/CompletionCallback.html</fo:basic-link>]</fo:inline> that is executed when request finishes or fails, and
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e10027"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ConnectionCallback.html)"><fo:inline>ConnectionCallback</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ConnectionCallback.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ConnectionCallback.html</fo:basic-link>]</fo:inline> executed when a connection to a client is closed or lost.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e10034"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 11.3. CompletionCallback example</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10037">  1 @Path("/resource")
  2 public class AsyncResource {
  3     private static int numberOfSuccessResponses = 0;
  4     private static int numberOfFailures = 0;
  5     private static Throwable lastException = null;
  6 
  7     @GET
  8     public void asyncGetWithTimeout(@Suspended final AsyncResponse asyncResponse) {
  9         asyncResponse.register(new CompletionCallback() {
 10             @Override
 11             public void onComplete(Throwable throwable) {
 12                 if (throwable == null) {
 13                     // no throwable - the processing ended successfully
 14                     // (response already written to the client)
 15                     numberOfSuccessResponses++;
 16                 } else {
 17                     numberOfFailures++;
 18                     lastException = throwable;
 19                 }
 20             }
 21         });
 22 
 23         new Thread(new Runnable() {
 24             @Override
 25             public void run() {
 26                 String result = veryExpensiveOperation();
 27                 asyncResponse.resume(result);
 28             }
 29 
 30             private String veryExpensiveOperation() {
 31                 // ... very expensive operation
 32             }
 33         }).start();
 34     }
 35 }</fo:block></fo:block></fo:block>
                A completion callback is registered using <fo:inline font-family="monospace">register(...)</fo:inline> method
                on the <fo:inline font-family="monospace">AsyncResponse</fo:inline> instance. A registered completion callback is bound only
                to the response(s) to which it has been registered. In the example the <fo:inline font-family="monospace">CompletionCallback</fo:inline>
                is used to calculate successfully processed responses, failures and to store last exception. This is only a
                simple case demonstrating the usage of the callback. You can use completion callback to release the resources,
                change state of internal resources or representations or handle failures. The method has an argument
                <fo:inline font-family="monospace">Throwable</fo:inline> which is set only in case of an error. Otherwise the parameter
                will be <fo:inline font-family="monospace">null</fo:inline>, which means that the response was successfully written. The callback is executed
                only after the response is written to the client (not immediately after the response is resumed).
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The <fo:inline font-family="monospace">AsyncResponse</fo:inline> <fo:inline font-family="monospace">register(...)</fo:inline> method is overloaded and offers options
                to register a single callback as an <fo:inline font-family="monospace">Object</fo:inline> (in the example), as a <fo:inline font-family="monospace">Class</fo:inline> or
                multiple callbacks using varags.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                As some async requests may take long time to process the client may decide to terminate it's connection to the
                server before the response has been resumed or before it has been fully written to the client. To deal with these
                use cases a <fo:inline font-family="monospace">ConnectionCallback</fo:inline> can be used. This callback will be executed only if the
                connection was prematurely terminated or lost while the response is being written to the back client. Note that
                this callback will not be invoked when a response is written successfully and the client connection is closed
                as expected. See javadoc of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ConnectionCallback.html)"><fo:inline>ConnectionCallback</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ConnectionCallback.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ConnectionCallback.html</fo:basic-link>]</fo:inline> for more information.
            </fo:block></fo:block><fo:block id="chunked-output"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Chunked Output</fo:marker><fo:block font-size="17.28pt">11.1.2. Chunked Output</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Jersey offers a facility for sending response to the client in multiple more-or-less independent chunks using a
                <fo:inline font-style="italic">chunked output</fo:inline>. Each response chunk usually takes some (longer) time to prepare before
                sending it to the client. The most important fact about response chunks is that you want
                to send them to the client immediately as they become available without waiting for the remaining chunks to become
                available too. The first bytes of each chunked response consists of the HTTP headers that are sent to the client.
                As noted above, the entity of the response is then sent in chunks as they become available.
                Client knows that the response is going to be chunked, so it reads each chunk of the response separately,
                processes it, and waits for more chunks to arrive on the same connection. After some time, the server generates
                another response chunk and send it again to the client. Server keeps on sending response chunks until
                it closes the connection after sending the last chunk when the response processing is finished.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                In Jersey you can use <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ChunkedOutput.html)"><fo:inline>ChunkedOutput</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ChunkedOutput.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ChunkedOutput.html</fo:basic-link>]</fo:inline> to send response to a client in chunks. Chunks are strictly
                defined pieces of a response body can be marshalled as a separate entities using Jersey/JAX-RS
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html)"><fo:inline>MessageBodyWriter&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html</fo:basic-link>]</fo:inline> providers. A chunk can be String, Long or JAXB bean serialized to XML or JSON or
                any other dacustom type for which a <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline> is available.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The resource method
                that returns <fo:inline font-family="monospace">ChunkedOutput</fo:inline> informs the Jersey runtime that the response will be chunked
                and that the processing works asynchronously as such. You do not need to inject
                <fo:inline font-family="monospace">AsyncResponse</fo:inline> to start the asynchronous processing mode in this case.
                Returning a <fo:inline font-family="monospace">ChunkedOutput</fo:inline> instance from the method is enough to indicate the asynchronous
                processing. Response headers will be sent to a client when the resource method returns and the client will wait
                for the stream of chunked data which you will be able to write from different thread using the same
                <fo:inline font-family="monospace">ChunkedOutput</fo:inline> instance returned from the resource method earlier. The following example
                demonstrates this use case:
                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e10110"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 11.4. ChunkedOutput example</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10113">  1 @Path("/resource")
  2 public class AsyncResource {
  3     @GET
  4     public ChunkedOutput&lt;String&gt; getChunkedResponse() {
  5         final ChunkedOutput&lt;String&gt; output = new ChunkedOutput&lt;String&gt;(String.class);
  6 
  7         new Thread() {
  8             public void run() {
  9                 try {
 10                     String chunk;
 11 
 12                     while ((chunk = getNextString()) != null) {
 13                         output.write(chunk);
 14                     }
 15                 } catch (IOException e) {
 16                     // IOException thrown when writing the
 17                     // chunks of response: should be handled
 18                 } finally {
 19                     output.close();
 20                         // simplified: IOException thrown from
 21                         // this close() should be handled here...
 22                 }
 23             }
 24         }.start();
 25 
 26         // the output will be probably returned even before
 27         // a first chunk is written by the new thread
 28         return output;
 29     }
 30 
 31     private String getNextString() {
 32         // ... long running operation that returns
 33         //     next string or null if no other string is accessible
 34     }
 35 }</fo:block></fo:block></fo:block>
                The example above defines a <fo:inline font-family="monospace">GET</fo:inline> method that returns a <fo:inline font-family="monospace">ChunkedOutput</fo:inline> instance.
                The generic type of <fo:inline font-family="monospace">ChunkedOutput</fo:inline> defines the chunk types (in this case chunks are Strings).
                Before the instance is returned a new thread is started that writes individual chunks into
                the chunked output instance named <fo:inline font-family="monospace">output</fo:inline>. Once the original
                thread returns from the resource method, Jersey runtime writes headers to the container response but does not
                close the client connection yet and waits for the response data to be written to the chunked
                <fo:inline font-family="monospace">output</fo:inline>.
                New thread in a loop calls the method <fo:inline font-family="monospace">getNextString()</fo:inline> which returns a
                next String or <fo:inline font-family="monospace">null</fo:inline> if no other String exists (the method could for example load latest data
                from the database). Returned Strings are written to the chunked <fo:inline font-family="monospace">output</fo:inline>. Such a written
                chunks are internally written to the container response and client can read them. At the end the
                chunked output is closed which determines the end of the chunked response. Please note that you must close
                the output explicitly in order to close the client connection as Jersey does not implicitly know when
                you are finished with writing the chunks.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                A chunked output can be processed also from threads created from another request as it is explained in the
                sections above. This means that one resource method may e.g. only return a <fo:inline font-family="monospace">ChunkedOutput</fo:inline>
                instance and other resource method(s) invoked from another request thread(s) can write data into the chunked
                output and/or close the chunked response.
            </fo:block></fo:block></fo:block><fo:block id="d0e10145"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Client API</fo:marker><fo:block font-size="20.735999999999997pt">11.2. Client API</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The client API supports asynchronous processing too. Simple usage of asynchronous client API is shown in the
        following example:
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e10150"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 11.5. Simple client async invocation</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10153">  1 final AsyncInvoker asyncInvoker = target().path("http://example.com/resource/")
  2         .request().async();
  3 final Future&lt;Response&gt; responseFuture = asyncInvoker.get();
  4 System.out.println("Request is being processed asynchronously.");
  5 final Response response = responseFuture.get();
  6     // get() waits for the response to be ready
  7 System.out.println("Response received.");</fo:block></fo:block></fo:block>
            The difference against synchronous invocation is that the http method call <fo:inline font-family="monospace">get()</fo:inline>
            is not called on <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/SyncInvoker.html)"><fo:inline>SyncInvoker</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/SyncInvoker.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/SyncInvoker.html</fo:basic-link>]</fo:inline> but on <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/AsyncInvoker.html)"><fo:inline>AsyncInvoker</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/AsyncInvoker.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/AsyncInvoker.html</fo:basic-link>]</fo:inline>. The
            <fo:inline font-family="monospace">AsyncInvoker</fo:inline> is returned from the call of method
            <fo:inline font-family="monospace">Invocation.Builder.async()</fo:inline> as shown above. <fo:inline font-family="monospace">AsyncInvoker</fo:inline>
            offers methods similar to <fo:inline font-family="monospace">SyncInvoker</fo:inline> only these methods do not return a response
            synchronously. Instead a <fo:inline font-family="monospace">Future&lt;...&gt;</fo:inline> representing response data is returned.
            These method calls also return immediately without waiting for the actual request to complete.
            In order to get the response of the invoked <fo:inline font-family="monospace">get()</fo:inline> method, the
            <fo:inline font-family="monospace">responseFuture.get()</fo:inline> is invoked which waits for the response to be finished
            (this call is blocking as defined by the Java SE <fo:inline font-family="monospace">Future</fo:inline> contract).
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Asynchronous Client API in JAX-RS is fully integrated in the fluent JAX-RS Client API flow, so that
            the async client-side invocations can be written fluently just like in the following example:
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e10191"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 11.6. Simple client fluent async invocation</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10194">  1 final Future&lt;Response&gt; responseFuture = target().path("http://example.com/resource/")
  2         .request().async().get();</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            To work with asynchronous results on the client-side, all standard <fo:inline font-family="monospace">Future</fo:inline> API facilities
            can be used. For example, you can use the <fo:inline font-family="monospace">isDone()</fo:inline> method
            to determine whether a response has finished to avoid the use of a blocking call to <fo:inline font-family="monospace">Future.get()</fo:inline>.
        </fo:block><fo:block id="d0e10208"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Asynchronous Client Callbacks</fo:marker><fo:block font-size="17.28pt">11.2.1. Asynchronous Client Callbacks</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Similarly to the server side, in the client API you can register asynchronous callbacks too. You can use
                these callbacks to be notified when a response arrives instead of waiting for the
                response on <fo:inline font-family="monospace">Future.get()</fo:inline> or checking the status by <fo:inline font-family="monospace">Future.isDone()</fo:inline> in
                a loop.
                A client-side asynchronous invocation callback can be registered as shown in the following example:
                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e10219"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 11.7. Client async callback</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10222">  1 final Future&lt;Response&gt; responseFuture = target().path("http://example.com/resource/")
  2         .request().async().get(new InvocationCallback&lt;Response&gt;() {
  3             @Override
  4             public void completed(Response response) {
  5                 System.out.println("Response status code "
  6                         + response.getStatus() + " received.");
  7             }
  8 
  9             @Override
 10             public void failed(Throwable throwable) {
 11                 System.out.println("Invocation failed.");
 12                 throwable.printStackTrace();
 13             }
 14         });</fo:block></fo:block></fo:block>

                The registered callback is expected to implement the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/InvocationCallback.html)"><fo:inline>InvocationCallback</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/InvocationCallback.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/InvocationCallback.html</fo:basic-link>]</fo:inline> interface that defines
                two methods.
                First method <fo:inline font-family="monospace">completed(Response)</fo:inline> gets invoked when an invocation successfully
                finishes. The result response is passed as a parameter to the callback method. The second method
                <fo:inline font-family="monospace">failed(Throwable)</fo:inline> is invoked in case the invocation fails and the exception describing
                the failure is passed to the method as a parameter. In this case since the callback generic type is
                <fo:inline font-family="monospace">Response</fo:inline>, the <fo:inline font-family="monospace">failed(Throwable)</fo:inline> method would  only invoked in case
                the invocation fails because of an internal client-side processing error. It would not be invoked
                in case a server responds with an HTTP error code, for example if the requested resource
                is not found on the server and HTTP <fo:inline font-family="monospace">404</fo:inline> response code is returned. In such case
                <fo:inline font-family="monospace">completed(Response)</fo:inline> callback method would be invoked and the response passed to the method
                would contain the returned error response with HTTP <fo:inline font-family="monospace">404</fo:inline> error code. This is a special
                behavior in case the generic callback return type is <fo:inline font-family="monospace">Response</fo:inline>. In the next example an
                exception is thrown (or <fo:inline font-family="monospace">failed(Throwable)</fo:inline> method on the invocation callback is invoked)
                even in case a non-<fo:inline font-family="monospace">2xx</fo:inline> HTTP error code is returned.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                As with the synchronous client API, you can retrieve the response entity as a Java type directly without
                requesting a <fo:inline font-family="monospace">Response</fo:inline> first. In case of an <fo:inline font-family="monospace">InvocationCallback</fo:inline>, you need
                to set its generic type to the expected response entity type instead of using the <fo:inline font-family="monospace">Response</fo:inline>
                type as demonstrated in the example below:
                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e10269"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 11.8. Client async callback for specific entity</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10272">  1 final Future&lt;String&gt; entityFuture = target().path("http://example.com/resource/")
  2         .request().async().get(new InvocationCallback&lt;String&gt;() {
  3             @Override
  4             public void completed(String response) {
  5                 System.out.println("Response entity '" + response + "' received.");
  6             }
  7 
  8             @Override
  9             public void failed(Throwable throwable) {
 10                 System.out.println("Invocation failed.");
 11                 throwable.printStackTrace();
 12             }
 13         });
 14 System.out.println(entityFuture.get());</fo:block></fo:block></fo:block>
                Here, the generic type of the invocation callback information is used to unmarshall the HTTP response content
                into a desired Java type.
            </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e10275"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Important</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Please note that in this case the method <fo:inline font-family="monospace">failed(Throwable throwable)</fo:inline> would be invoked even
                    for cases when a server responds with a non HTTP-<fo:inline font-family="monospace">2xx</fo:inline> HTTP error code. This is because in this
                    case the user does not have any other means of finding out that the server returned an error response.
                </fo:block></fo:block></fo:block></fo:block><fo:block id="d0e10284"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Chunked input</fo:marker><fo:block font-size="17.28pt">11.2.2. Chunked input</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                In an <fo:basic-link internal-destination="chunked-output"><fo:inline>earlier section</fo:inline></fo:basic-link> the <fo:inline font-family="monospace">ChunkedOutput</fo:inline> was
                described. It was shown how to use a chunked output on the server. In order to read chunks on the client the
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ChunkedInput.html)"><fo:inline>ChunkedInput</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ChunkedInput.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ChunkedInput.html</fo:basic-link>]</fo:inline> can be used to complete the story.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                You can, of course, process input on the client as a standard input stream but if you would like to
                leverage Jersey infrastructure to provide support of translating message chunk data into Java types
                using a <fo:inline font-family="monospace">ChunkedInput</fo:inline> is much more straightforward. See the usage of the
                <fo:inline font-family="monospace">ChunkedInput</fo:inline> in the following example:

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e10306"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 11.9. ChunkedInput example</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10309">  1 final Response response = target().path("http://example.com/resource/")
  2         .request().get();
  3 final ChunkedInput&lt;String&gt; chunkedInput =
  4         response.readEntity(new GenericType&lt;ChunkedInput&lt;String&gt;&gt;() {});
  5 String chunk;
  6 while ((chunk = chunkedInput.read()) != null) {
  7     System.out.println("Next chunk received: " + chunk);
  8 }
  9 </fo:block></fo:block></fo:block>

                The response is retrieved in a standard way from the server. The entity is read as a
                <fo:inline font-family="monospace">ChunkedInput</fo:inline> entity. In order to do that the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/GenericEntity.html)"><fo:inline>GenericEntity&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/GenericEntity.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/GenericEntity.html</fo:basic-link>]</fo:inline> is used to preserve
                a generic information at run time. If you would not use <fo:inline font-family="monospace">GenericEntity&lt;T&gt;</fo:inline>, Java language generic type
                erasure would cause that the generic information would get lost at compile time and an exception would be thrown
                at run time complaining about the missing chunk type definition.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                In the next lines in the example, individual chunks are being read from the response. Chunks can come with some
                delay, so they will be written to the console as they come from the server. After receiving last chunk the
                <fo:inline font-family="monospace">null</fo:inline> will be returned from the <fo:inline font-family="monospace">read()</fo:inline> method. This will mean that the server has sent
                the last chunk and closed the connection. Note that the <fo:inline font-family="monospace">read()</fo:inline> is a blocking operation and the
                invoking thread is blocked until a new chunk comes.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Writing chunks with <fo:inline font-family="monospace">ChunkedOutput</fo:inline> is simple, you only call method <fo:inline font-family="monospace">write()</fo:inline>
                which writes exactly one chunk to the output. With the input reading it is slightly more complicated. The
                <fo:inline font-family="monospace">ChunkedInput</fo:inline> does not know how to distinguish chunks in the byte stream unless being told by
                the developer. In order to define custom chunks boundaries,
                the <fo:inline font-family="monospace">ChunkedInput</fo:inline> offers possibility to register a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ChunkParser.html)"><fo:inline>ChunkParser</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ChunkParser.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ChunkParser.html</fo:basic-link>]</fo:inline> which
                reads chunks from the input stream and separates them. Jersey provides several chunk parser implementation and
                you can implement your own parser to separate your chunks if you need. In our example above the default parser
                provided by Jersey is used that separates chunks based on presence of a <fo:inline font-family="monospace">\r\n</fo:inline> delimiting
                character sequence.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Each incoming input stream is firstly parsed by the <fo:inline font-family="monospace">ChunkParser</fo:inline>, then each chunk is processed
                by the proper <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)"><fo:inline>MessageBodyReader&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html</fo:basic-link>]</fo:inline>.
                You can define the media type of chunks to aid the selection of a proper <fo:inline font-family="monospace">MessageBodyReader&lt;T&gt;</fo:inline> in
                order to read chunks correctly into the requested entity types (in our case into Strings).
            </fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>URIs and Links</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>URIs and Links</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="uris-and-links"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 12. URIs and Links</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e10367"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Building URIs</fo:marker><fo:block font-size="20.735999999999997pt">12.1. Building URIs</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            A very important aspect of REST is hyperlinks, URIs, in representations that clients can use to transition the
            Web service to new application states (this is otherwise known as "hypermedia as the engine of application state").
            HTML forms present a good example of this in practice.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Building URIs and building them safely is not easy with <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/net/URI.html)"><fo:inline>URI</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/net/URI.html)">http://docs.oracle.com/javase/6/docs/api/java/net/URI.html</fo:basic-link>]</fo:inline>, which is why JAX-RS has the
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriBuilder.html)"><fo:inline>UriBuilder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriBuilder.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriBuilder.html</fo:basic-link>]</fo:inline> class that makes it simple and easy to build URIs safely.
            <fo:inline font-family="monospace">UriBuilder</fo:inline> can be used to build new URIs or build from existing URIs. For resource
            classes it is more than likely that URIs will be built from the base URI the web service is deployed at
            or from the request URI. The class <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriInfo.html)"><fo:inline>UriInfo</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriInfo.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriInfo.html</fo:basic-link>]</fo:inline> provides such information (in addition to further
            information, see next section).
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The following example shows URI building with <fo:inline font-family="monospace">UriInfo</fo:inline> and <fo:inline font-family="monospace">UriBuilder</fo:inline>
            from the bookmark example:

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e10394"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 12.1. URI building</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10397">  1 @Path("/users/")
  2 public class UsersResource {
  3 
  4     @Context
  5     UriInfo uriInfo;
  6 
  7     ...
  8 
  9     @GET
 10     @Produces("application/json")
 11     public JSONArray getUsersAsJsonArray() {
 12         JSONArray uriArray = new JSONArray();
 13         for (UserEntity userEntity : getUsers()) {
 14             UriBuilder ub = uriInfo.getAbsolutePathBuilder();
 15             URI userUri = ub.
 16                     path(userEntity.getUserId()).
 17                     build();
 18             uriArray.put(userUri.toASCIIString());
 19         }
 20         return uriArray;
 21     }
 22 }</fo:block></fo:block></fo:block>

            <fo:inline font-family="monospace">UriInfo</fo:inline> is obtained using the @Context annotation, and in this particular example injection onto
            the field of the root resource class is performed, previous examples showed the use of @Context on resource method
            parameters.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:inline font-family="monospace">UriInfo</fo:inline> can be used to obtain URIs and associated <fo:inline font-family="monospace">UriBuilder</fo:inline> instances for
            the following URIs: the base URI the application is deployed at; the request URI; and the absolute path URI, which
            is the request URI minus any query components.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The <fo:inline font-family="monospace">getUsersAsJsonArray</fo:inline> method constructs a <fo:inline font-family="monospace">JSONArrray</fo:inline>, where each element
            is a URI identifying a specific user resource. The URI is built from the absolute path of the request URI by
            calling
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriInfo.html#getAbsolutePathBuilder())"><fo:inline>UriInfo.getAbsolutePathBuilder()</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriInfo.html#getAbsolutePathBuilder())">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriInfo.html#getAbsolutePathBuilder()</fo:basic-link>]</fo:inline>.
            A new path segment is added, which is the user ID, and then the URI is built. Notice that it is not necessary to
            worry about the inclusion of <fo:inline font-family="monospace">'/'</fo:inline> characters or that the user ID may contain characters that need
            to be percent encoded. <fo:inline font-family="monospace">UriBuilder</fo:inline> takes care of such details.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:inline font-family="monospace">UriBuilder</fo:inline> can be used to build/replace query or matrix parameters. URI templates can also be
            declared, for example the following will build the URI <fo:inline font-family="monospace">"http://localhost/segment?name=value"</fo:inline>:

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e10435"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 12.2. Building URIs using query parameters</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10438">  1 UriBuilder.fromUri("http://localhost/")
  2     .path("{a}")
  3     .queryParam("name", "{value}")
  4     .build("segment", "value");</fo:block></fo:block></fo:block>
        </fo:block></fo:block><fo:block id="d0e10441"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Resolve and Relativize</fo:marker><fo:block font-size="20.735999999999997pt">12.2. Resolve and Relativize</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">JAX-RS 2.0 introduced additional URI resolution and relativization methods in the <fo:inline font-family="monospace">UriBuilder</fo:inline>:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e10449"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e10450"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriInfo.html#resolve(java.net.URI))"><fo:inline>UriInfo.resolve(java.net.URI)</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriInfo.html#resolve(java.net.URI))">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriInfo.html#resolve(java.net.URI)</fo:basic-link>]</fo:inline></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e10454"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriInfo.html#relativize(java.net.URI))"><fo:inline>UriInfo.relativize(java.net.URI)</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriInfo.html#relativize(java.net.URI))">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriInfo.html#relativize(java.net.URI)</fo:basic-link>]</fo:inline></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e10458"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriBuilder.html#resolveTemplate(java.lang.String, java.lang.Object))"><fo:inline>UriBuilder.resolveTemplate(...)</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriBuilder.html#resolveTemplate(java.lang.String, java.lang.Object))">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriBuilder.html#resolveTemplate(java.lang.String, java.lang.Object)</fo:basic-link>]</fo:inline> (various arguments)</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

            Resolve and relativize methods in <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriInfo.html)"><fo:inline>UriInfo</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriInfo.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriInfo.html</fo:basic-link>]</fo:inline> are essentially counterparts to the methods listed above -
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriInfo.html#resolve(java.net.URI))"><fo:inline>UriInfo.resolve(java.net.URI)</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriInfo.html#resolve(java.net.URI))">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriInfo.html#resolve(java.net.URI)</fo:basic-link>]</fo:inline>
            resolves given relative URI to an absolute URI using application context URI as the base URI;
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriInfo.html#relativize(java.net.URI))"><fo:inline>UriInfo.relativize(java.net.URI)</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriInfo.html#relativize(java.net.URI))">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriInfo.html#relativize(java.net.URI)</fo:basic-link>]</fo:inline>
            then transforms an absolute URI to a relative one, using again the applications context URI as the base URI.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:inline font-family="monospace">UriBuilder</fo:inline> also introduces a set of methods that provide ways of resolving URI templates by replacing
            individual templates with a provided value(s). A short example:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10478">  1 final URI uri = UriBuilder.fromUri("http://{host}/{path}?q={param}")
  2     .resolveTemplate("host", "localhost")
  3     .resolveTemplate("path", "myApp")
  4     .resolveTemplate("param", "value").build();
  5 
  6 uri.toString(); // returns "http://localhost/myApp?q=value"</fo:block>

            See the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriBuilder.html)"><fo:inline>UriBuilder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriBuilder.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriBuilder.html</fo:basic-link>]</fo:inline> javadoc for more details.
        </fo:block></fo:block><fo:block id="d0e10484"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Link</fo:marker><fo:block font-size="20.735999999999997pt">12.3. Link</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            JAX-RS 2.0 introduces <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Link.html)"><fo:inline>Link</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Link.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Link.html</fo:basic-link>]</fo:inline> class, which serves as a representation of Web Link defined in
            <fo:basic-link external-destination="url(http://tools.ietf.org/html/rfc5988)"><fo:inline>RFC 5988</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://tools.ietf.org/html/rfc5988)">http://tools.ietf.org/html/rfc5988</fo:basic-link>]</fo:inline>.
            The JAX-RS <fo:inline font-family="monospace">Link</fo:inline> class adds API support for providing additional metadata in HTTP messages,
            for example, if you are consuming a REST interface of a public library, you might have a resource returning
            description of a single book. Then you can include links to related resources, such as a book category,
            author, etc. to make the produced response concise but complete at the same time. Clients are then able to
            query all the additional information they are interested in and are not forced to consume details they are
            not interested in. At the same time, this approach relieves the server resources as only the information that
            is truly requested is being served to the clients.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            A <fo:inline font-family="monospace">Link</fo:inline> can be serialized to an HTTP message (tyically a response) as additional HTTP header
            (there might be multiple <fo:inline font-family="monospace">Link</fo:inline> headers provided, thus multiple links can be served in a single
            message). Such HTTP header may look like:
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10506">Link: &lt;http://example.com/TheBook/chapter2&gt;; rel="prev"; title="previous chapter"</fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Producing and consuming Links with JAX-RS API is demonstrated in the following example:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10511">// server side - adding links to a response:
Response r = Response.ok().
    link("http://oracle.com", "parent").
    link(new URI("http://jersey.java.net"), "framework").
    build();

...

// client-side processing:
final Response response = target.request().get();

URI u = response.getLink("parent").getUri();
URI u = response.getLink("framework").getUri();</fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Instances of <fo:inline font-family="monospace">Link</fo:inline> can be also created directly by invoking one of the factory methods on the
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Link.html)"><fo:inline>Link</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Link.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Link.html</fo:basic-link>]</fo:inline> API that returns a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Link.Builder.html)"><fo:inline>Link.Builder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Link.Builder.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Link.Builder.html</fo:basic-link>]</fo:inline> that can be used to configure and produce new
            links.
        </fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Declarative Hyperlinking</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Declarative Hyperlinking</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="declarative-linking"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 13. Declarative Hyperlinking</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        <fo:basic-link external-destination="url(http://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven)"><fo:inline>RESTful APIs must be
            hypertext-driven</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven)">http://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven</fo:basic-link>]</fo:inline>. JAX-RS currently offers <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriBuilder.html)"><fo:inline>UriBuilder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriBuilder.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriBuilder.html</fo:basic-link>]</fo:inline> to simplify URI
        creation but Jersey adds an additional annotation-based alternative that is described here.
    </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e10537"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Important</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            This API is currently under development and experimental so it is subject to change at any time.
        </fo:block></fo:block></fo:block><fo:block id="d0e10540"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Dependency</fo:marker><fo:block font-size="20.735999999999997pt">13.1. Dependency</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            To use Declarative Linking you need to add <fo:inline font-family="monospace">jersey-declarative-linking</fo:inline> module to your <fo:inline font-family="monospace">pom.xml</fo:inline> file:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10551">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.ext&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-declarative-linking&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>

            Additionally you will need to add the following dependencies, if you are not deploying
            into a container that is already including them:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10554">&lt;dependency&gt;
    &lt;groupId&gt;javax.el&lt;/groupId&gt;
    &lt;artifactId&gt;javax.el-api&lt;/artifactId&gt;
    &lt;version&gt;3.0.2&lt;/version&gt;
&lt;/dependency&gt;</fo:block>

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10557">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.web&lt;/groupId&gt;
    &lt;artifactId&gt;javax.el&lt;/artifactId&gt;
    &lt;version&gt;3.0.2&lt;/version&gt;
&lt;/dependency&gt;</fo:block>

            If you're not using Maven make sure to have all needed dependencies (see <fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-declarative-linking/dependencies.html)"><fo:inline>jersey-declarative-linking</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-declarative-linking/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-declarative-linking/dependencies.html</fo:basic-link>]</fo:inline>) on
            the classpath.
        </fo:block></fo:block><fo:block id="d0e10563"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Links in Representations</fo:marker><fo:block font-size="20.735999999999997pt">13.2. Links in Representations</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Links are added to representations using the <fo:inline font-family="monospace">@InjectLink</fo:inline> annotation on
            entity class fields. The Jersey runtime is responsible for injecting the appropriate URI
            into the field prior to serialization by a message body writer. E.g. consider the
            following resource and entity classes:
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10571">@Path("widgets")
public class WidgetsResource {
    @GET
    public Widgets get() {
        return new Widgets();
    }
}

public class Widgets {
    @InjectLink(resource=WidgetsResource.class)
    URI u;
}</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            After a call to<fo:inline font-family="monospace">WidgetsResource#get</fo:inline>, the Jersey runtime will inject the value
            <fo:inline font-family="monospace">"/context/widgets"</fo:inline>
            <fo:footnote><fo:inline><fo:inline font-family="serif,Symbol,ZapfDingbats" font-size="75%" font-weight="normal" font-style="normal" baseline-shift="super">1</fo:inline></fo:inline><fo:footnote-body font-family="serif,Symbol,ZapfDingbats" font-size="8pt" font-weight="normal" font-style="normal" text-align="justify" start-indent="0pt" end-indent="0pt" text-indent="0pt" hyphenate="true" wrap-option="wrap" linefeed-treatment="treat-as-space"><fo:block><fo:inline font-family="serif,Symbol,ZapfDingbats" font-size="75%" font-weight="normal" font-style="normal" baseline-shift="super">1</fo:inline>
                    Where <fo:inline font-family="monospace">/context</fo:inline> is the application deployment context.
                </fo:block></fo:footnote-body></fo:footnote>
            into the returned <fo:inline font-family="monospace">Widgets</fo:inline> instance. If an absolute URI is
            desired instead of an absolute path then the annotation can be changed to
            <fo:inline font-family="monospace">@InjectLink(resource=WidgetsResource.class, style=ABSOLUTE)</fo:inline>.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The above usage works nicely when there's already a URI template on a class that you
            want to reuse. If there's no such template available then you can use a literal value
            instead of a reference. E.g. the following is equivalent to the earlier example:
            <fo:inline font-family="monospace">@InjectLink(value="widgets", style=ABSOLUTE)</fo:inline>.
        </fo:block></fo:block><fo:block id="d0e10599"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">List of Link Injection</fo:marker><fo:block font-size="20.735999999999997pt">13.3. List of Link Injection</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            You can inject multiple links into an array or a List collection type. E.g.:
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10604">@InjectLinks({@InjectLink(resource=WidgetsResource.class, rel = "self")})
List&lt;Link&gt; links</fo:block>

            The field doesn't need to be initialized. However, if it already contains a collection with manually created links,
            then it will merge those with the generated links into a new collection which then replaces the field value.
        </fo:block></fo:block><fo:block id="d0e10607"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Links from Resources</fo:marker><fo:block font-size="20.735999999999997pt">13.4. Links from Resources</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            As an alternative to defining the links in the entity class, they can also be defined in the resource classes by
            annotating the resource methods with <fo:inline font-family="monospace">@ProvideLink</fo:inline>. This has the benefit, that the target
            method is already known and doesn't need to be referenced. Other than that it has the same parameters and behaviors
            as <fo:inline font-family="monospace">@InjectLink</fo:inline>. The entity classes need to have a field annotated with
            <fo:inline font-family="monospace">@InjectLinks</fo:inline>, which can be empty.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The <fo:inline font-family="monospace">@ProvideLink</fo:inline> annotation can be repeated to add links to different entities using different
            options. Entities are defined via the <fo:inline font-family="monospace">value</fo:inline> property. If the entities are similar in structure they
            can also declared as an array. <fo:inline font-family="monospace">@ProvideLink</fo:inline> also works with class hierarchies, e.g., contributions
            defined for a superclass will also be injected into the derived classes (interfaces are not supported).

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10632">@ProvideLink(value = Order.class,rel = "self",
     bindings = @Binding(name = "orderId", value = "${instance.id}"))
@ProvideLink(value = PaymentConfirmation.class, rel = "order",
     bindings = @Binding(name = "orderId", value = "${instance.orderId}"))
@GET
@Path("/{orderId}")
public Response get(@PathParam("orderId") String orderId)</fo:block>
        </fo:block></fo:block><fo:block id="d0e10635"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Binding Template Parameters</fo:marker><fo:block font-size="20.735999999999997pt">13.5. Binding Template Parameters</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Referenced or literal templates may contain parameters. Two forms of parameters are
            supported:
            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e10640"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e10641"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                    URI template parameters, e.g. <fo:inline font-family="monospace">widgets/{id}</fo:inline> where <fo:inline font-family="monospace">{id}</fo:inline> represents
                    a variable part of the URI.
                </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e10650"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                    EL expressions, e.g. <fo:inline font-family="monospace">widgets/${instance.id}</fo:inline> where <fo:inline font-family="monospace">${instance.id}</fo:inline>
                    is an EL expression.
                </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Parameter values can be extracted from three implicit beans:
            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="d0e10662" provisional-distance-between-starts="24em * 0.60+1em" provisional-label-separation="1em"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e10663"><fo:list-item-label end-indent="label-end()" text-align="start"><fo:block><fo:inline>
                        <fo:inline font-family="monospace">instance</fo:inline>
                    </fo:inline></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Represents the instance of the class that contains the annotated field.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e10672"><fo:list-item-label end-indent="label-end()" text-align="start"><fo:block><fo:inline>
                        <fo:inline font-family="monospace">entity</fo:inline>
                    </fo:inline></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Represents the entity class instance returned by the resource method.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e10681"><fo:list-item-label end-indent="label-end()" text-align="start"><fo:block><fo:inline>
                        <fo:inline font-family="monospace">resource</fo:inline>
                    </fo:inline></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Represents the resource class instance that returned the entity.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            By default URI template parameter values are extracted from the implicit <fo:inline font-family="monospace">instance</fo:inline> bean,
            i.e. the following two annotations are equivalent:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10696">@InjectLink("widgets/{id}")

@InjectLink("widgets/${instance.id}")</fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The source for URI template parameter values can be changed using the <fo:inline font-family="monospace">@Binding</fo:inline>
            annotation, E.g. the following three annotations are equivalent:
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10704">@InjectLink(value="widgets/{id}", bindings={
    @Binding(name="id" value="${resource.id}"}
)

@InjectLink(value="widgets/{value}", bindings={
    @Binding("${resource.id}")})
@InjectLink("widgets/${resource.id}")</fo:block>
        </fo:block></fo:block><fo:block id="d0e10707"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Conditional Link Injection</fo:marker><fo:block font-size="20.735999999999997pt">13.6. Conditional Link Injection</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Link value injection can be made conditional by use of the <fo:inline font-family="monospace">condition</fo:inline> property.
            The value of this property is a boolean EL expression and a link will only be injected if the condition
            expression evaluates to true. E.g.:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10715">@InjectLink(value="widgets/${instance.id}/offers",
    condition="${instance.offers}")
URI offers;</fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In the above, a URI will only be injected into the <fo:inline font-family="monospace">offers</fo:inline> field if the
            <fo:inline font-family="monospace">offers</fo:inline> property of the instance is <fo:inline font-family="monospace">true</fo:inline>.
        </fo:block></fo:block><fo:block id="d0e10729"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Link Headers</fo:marker><fo:block font-size="20.735999999999997pt">13.7. Link Headers</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:basic-link external-destination="url(http://tools.ietf.org/html/rfc5988#section-5)"><fo:inline>HTTP Link headers</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://tools.ietf.org/html/rfc5988#section-5)">http://tools.ietf.org/html/rfc5988#section-5</fo:basic-link>]</fo:inline> can also be added
            to responses using annotations. Instead of annotating the fields of an entity class with
            <fo:inline font-family="monospace">@InjectLink</fo:inline>, you instead annotate the entity class itself with
            <fo:inline font-family="monospace">@InjectLinks</fo:inline>. E.g.:
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10743">@InjectLinks(
    @InjectLink(value="widgets/${resource.nextId}", rel="next")
)</fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The above would insert a HTTP Link header into any response whose entity was thus annotated.
            The <fo:inline font-family="monospace">@InjectLink</fo:inline> annotation contains properties that map to the parameters
            of the HTTP Link header. The above specifies the link relation as <fo:inline font-family="monospace">next</fo:inline>.
            All properties of the <fo:inline font-family="monospace">@InjectLink</fo:inline> annotation may be used as described above.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Multiple link headers can be added by use of the <fo:inline font-family="monospace">@InjectLinks</fo:inline> annotation
            which can contain multiple <fo:inline font-family="monospace">@InjectLink</fo:inline> annotations.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Resource links via <fo:inline font-family="monospace">@ProvideLink</fo:inline> are currently not supported for link headers.
        </fo:block></fo:block><fo:block id="d0e10770"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Prevent Recursive Injection</fo:marker><fo:block font-size="20.735999999999997pt">13.8. Prevent Recursive Injection</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            By default, Jersey will try to recursively find all <fo:inline font-family="monospace">@InjectionLink</fo:inline> annotations in
            the members of your object unless this member is annotated with <fo:inline font-family="monospace">@XmlTransient</fo:inline>.

            But in some cases, you might want to control which member will be introspected regardless of the
            <fo:inline font-family="monospace">@XmlTransient</fo:inline> annotation.

            You can prevent Jersey to look into an object by adding <fo:inline font-family="monospace">@InjectLinkNoFollow</fo:inline> to a field.

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10787">@InjectLinkNoFollow
Context context;</fo:block>
        </fo:block></fo:block><fo:block id="d0e10790"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Meta-annotation support</fo:marker><fo:block font-size="20.735999999999997pt">13.9. Meta-annotation support</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The <fo:inline font-family="monospace">@ProvideLink</fo:inline> annotation can be used as a meta-annotation, i.e., annotating your own annotation.
            This enables you to create custom annotations to reuse <fo:inline font-family="monospace">@ProvideLink</fo:inline> configurations instead of
            copy pasting them on each method. There is a special marker class <fo:inline font-family="monospace">ProvideLink.InheritFromAnnotation</fo:inline>
            that can be used in place of the actual entity class, this indicates that the <fo:inline font-family="monospace">Class&lt;?&gt; value()</fo:inline>
            from the custom annotation should be used instead.

            Repeated annotations are currently unsupported for this feature. Also the  <fo:inline font-family="monospace">Class&lt;?&gt; value()</fo:inline>
            method must return a single class and not an array of classes.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">

            Here is an example (getter/setter omitted for brevity) of how a meta annotation can be used.
            The example app uses a <fo:inline font-family="monospace">Page</fo:inline> class as a base class for all entities that contain paged data.

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10815">public class Page {
    private int number;

    private int size;

    private boolean isPreviousPageAvailable;

    private boolean isNextPageAvailable;

    @InjectLinks
    private List&lt;Link&gt; links;
}</fo:block>

            Instead of duplicating the <fo:inline font-family="monospace">@ProvideLink</fo:inline> annotations for the  next and previous links on every
            method, we create the following <fo:inline font-family="monospace">@PageLinks</fo:inline> annotation.

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10824">@ProvideLink(value = ProvideLink.InheritFromAnnotation.class, rel = "next",
    bindings = {
        @Binding(name = "page", value = "${instance.number + 1}"),
        @Binding(name = "size", value = "${instance.size}"),
    }, condition = "${instance.nextPageAvailable}")
@ProvideLink(value = ProvideLink.InheritFromAnnotation.class, rel = "prev",
    bindings = {
        @Binding(name = "page", value = "${instance.number - 1}"),
        @Binding(name = "size", value = "${instance.size}"),
    }, condition = "${instance.previousPageAvailable}")
@Target({ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Documented
public @interface PageLinks {
  Class&lt;?&gt; value();
}</fo:block>

            The annotation can the then be used on the resource methods with the actual entity class as <fo:inline font-family="monospace">value</fo:inline>.

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10830">@PageLinks(OrderPage.class)
@GET
public Response list(@QueryParam("page") @DefaultValue("0") int page,
                     @QueryParam("size") @DefaultValue("20") int size)</fo:block>

            The entity just extends from <fo:inline font-family="monospace">Page</fo:inline> and declares its content. It is necessary to use distinct classes
            instead of just a generic page to have a unique target for <fo:inline font-family="monospace">@ProvideLink</fo:inline>, otherwise every method
            annotated with <fo:inline font-family="monospace">@ProvideLink(value=Page.class)</fo:inline> would contribute to the entity.

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10842">public class OrderPage extends Page {
    private List&lt;Order&gt; orders;
}</fo:block>
        </fo:block></fo:block><fo:block id="d0e10845"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Configure and register</fo:marker><fo:block font-size="20.735999999999997pt">13.10. Configure and register</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In order to add the Declarative Linking feature register <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/linking/DeclarativeLinkingFeature.html)"><fo:inline>DeclarativeLinkingFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/linking/DeclarativeLinkingFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/linking/DeclarativeLinkingFeature.html</fo:basic-link>]</fo:inline>

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e10853"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 13.1. Creating JAX-RS application with Declarative Linking feature enabled.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10856">// Create JAX-RS application.
final Application application = new ResourceConfig()
        .packages("org.glassfish.jersey.examples.linking")
        .register(DeclarativeLinkingFeature.class);</fo:block></fo:block></fo:block>
        </fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Programmatic API for Building Resources</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Programmatic API for Building Resources</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="resource-builder"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 14. Programmatic API for Building Resources</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e10863"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Introduction</fo:marker><fo:block font-size="20.735999999999997pt">14.1. Introduction</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">A standard approach of developing JAX-RS application is to implement resource classes annotated with <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)"><fo:inline>@Path</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html</fo:basic-link>]</fo:inline>
            with resource methods annotated with HTTP method annotations like <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/GET.html)"><fo:inline>@GET</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/GET.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/GET.html</fo:basic-link>]</fo:inline> or <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/POST.html)"><fo:inline>@POST</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/POST.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/POST.html</fo:basic-link>]</fo:inline> and
            implement needed functionality. This approach is described in the chapter
            <fo:basic-link external-destination="url(jaxrs-resources.html)"><fo:inline>JAX-RS Application, Resources and Sub-Resources</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(jaxrs-resources.html)">jaxrs-resources.html</fo:basic-link>]</fo:inline>. Besides this standard
            JAX-RS approach, Jersey offers an API for constructing resources programmatically.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Imagine a situation where a deployed JAX-RS application consists of many resource classes. These resources implement
            standard HTTP methods like  <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/GET.html)"><fo:inline>@GET</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/GET.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/GET.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/POST.html)"><fo:inline>@POST</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/POST.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/POST.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/DELETE.html)"><fo:inline>@DELETE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/DELETE.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/DELETE.html</fo:basic-link>]</fo:inline>. In some situations it would be useful to add
            an <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/OPTIONS.html)"><fo:inline>@OPTIONS</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/OPTIONS.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/OPTIONS.html</fo:basic-link>]</fo:inline> method which would return some kind of meta data about the deployed resource. Ideally, you would
            want to expose the functionality as an additional feature and you want to decide at the deploy time whether you want
            to add your custom <fo:inline font-family="monospace">OPTIONS</fo:inline> method. However, when custom <fo:inline font-family="monospace">OPTIONS</fo:inline> method are not
            enabled you would like to be <fo:inline font-family="monospace">OPTIONS</fo:inline> requests handled in the standard way by JAX-RS runtime. To
            achieve this you would need to modify the code to add or remove custom <fo:inline font-family="monospace">OPTIONS</fo:inline> methods before
            deployment. Another way would be to use programmatic API to build resource according to your needs.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Another use case of programmatic resource builder API is when you build any generic RESTful interface which
            depends on lot of configuration parameters or for example database structure. Your resource classes would
            need to have different methods, different structure for every new application deploy. You could use more solutions
            including approaches where your resource classes would be built using Java byte code manipulation.
            However, this is exactly the case when you can solve the problem cleanly with the programmatic resource builder API.
            Let's have a closer look at how the API can be utilized.
        </fo:block></fo:block><fo:block id="d0e10908"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Programmatic Hello World example</fo:marker><fo:block font-size="20.735999999999997pt">14.2. Programmatic Hello World example</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Jersey Programmatic API was designed to fully support JAX-RS resource model. In other words, every resource that can
            be designed using standard JAX-RS approach via annotated resource classes can be also modelled using Jersey
            programmatic API. Let's try to build simple hello world resource using standard approach first and
            then using the Jersey programmatic resource builder API.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The following example shows standard JAX-RS "Hello world!" resource class.
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e10915"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 14.1. A standard resource class</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10918">  1 
  2                     @Path("helloworld")
  3                     public class HelloWorldResource {
  4 
  5                         @GET
  6                         @Produces("text/plain")
  7                         public String getHello() {
  8                             return "Hello World!";
  9                         }
 10                     }
 11                 </fo:block></fo:block></fo:block>
            This is just a simple resource class with one GET method returning "Hello World!" string that will be serialized
            as text/plain media type.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Now we will design this simple resource using programmatic API.
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e10923"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 14.2. A programmatic resource</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e10926">  1 
  2                     package org.glassfish.jersey.examples.helloworld;
  3 
  4                     import javax.ws.rs.container.ContainerRequestContext;
  5                     import javax.ws.rs.core.Application;
  6                     import javax.ws.rs.core.Response;
  7                     import org.glassfish.jersey.process.Inflector;
  8                     import org.glassfish.jersey.server.ResourceConfig;
  9                     import org.glassfish.jersey.server.model.Resource;
 10                     import org.glassfish.jersey.server.model.ResourceMethod;
 11 
 12 
 13                     public static class MyResourceConfig extends ResourceConfig {
 14 
 15                         public MyResourceConfig() {
 16                             final Resource.Builder resourceBuilder = Resource.builder();
 17                             resourceBuilder.path("helloworld");
 18 
 19                             final ResourceMethod.Builder methodBuilder = resourceBuilder.addMethod("GET");
 20                             methodBuilder.produces(MediaType.TEXT_PLAIN_TYPE)
 21                                     .handledBy(new Inflector&lt;ContainerRequestContext, String&gt;() {
 22 
 23                                 @Override
 24                                 public String apply(ContainerRequestContext containerRequestContext) {
 25                                     return "Hello World!";
 26                                 }
 27                             });
 28 
 29                             final Resource resource = resourceBuilder.build();
 30                             registerResources(resource);
 31                         }
 32                     }
 33                 </fo:block></fo:block></fo:block>
            First, focus on the content of the <fo:inline font-family="monospace">MyResourceConfig</fo:inline> constructor in the example.
            The Jersey programmatic resource model is constructed from <fo:inline font-family="monospace">Resource</fo:inline>s that contain
            <fo:inline font-family="monospace">ResourceMethod</fo:inline>s. In the example, a single resource would be constructed from a
            <fo:inline font-family="monospace">Resource</fo:inline> containing one <fo:inline font-family="monospace">GET</fo:inline> resource method that returns "Hello World!".
            The main entry point for building programmatic resources in Jersey is the
            <fo:inline font-style="italic"><fo:inline font-family="monospace">Resource.Builder</fo:inline></fo:inline> class. <fo:inline font-family="monospace">Resource.Builder</fo:inline> contains just
            a few methods like the <fo:inline font-family="monospace">path</fo:inline> method used in the example, which sets the name of the path. Another
            useful method is a <fo:inline font-family="monospace">addMethod(String path)</fo:inline> which adds a new method to the resource builder and
            returns a resource method builder for the new method. Resource method builder contains methods which
            set consumed and produced media type, define name bindings, timeout for asynchronous executions, etc. It is always
            necessary to define a resource method handler (i.e. the code of the resource method that will return "Hello World!").
            There are more options how a resource method can be handled. In the example the implementation of
            <fo:inline font-family="monospace">Inflector</fo:inline> is used. The Jersey <fo:inline font-family="monospace">Inflector</fo:inline> interface defines a simple contract for
            transformation of a request into a response. An inflector can either return a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html)"><fo:inline>Response</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html</fo:basic-link>]</fo:inline> or directly
            an entity object, the way it is shown in the example. Another option is to setup a Java method handler using
            <fo:inline font-family="monospace">handledBy(Class&lt;?&gt; handlerClass, Method method)</fo:inline> and pass it the chosen
            <fo:inline font-family="monospace">java.lang.reflect.Method</fo:inline> instance together with the enclosing class.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            A resource method model construction can be explicitly completed by invoking <fo:inline font-family="monospace">build()</fo:inline> on the
            resource method builder. It is however not necessary to do so as the new resource method model will be built
            automatically once the parent resource is built. Once a resource model is built, it is registered
            into the resource config at the last line of the <fo:inline font-family="monospace">MyResourceConfig</fo:inline> constructor in the example.
        </fo:block><fo:block id="d0e10980"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Deployment of programmatic resources</fo:marker><fo:block font-size="17.28pt">14.2.1. Deployment of programmatic resources</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Let's now look at how a programmatic resources are deployed.
                The easiest way to setup your application as well as register any programmatic resources in Jersey
                is to use a Jersey <fo:inline font-family="monospace">ResourceConfig</fo:inline> utility class, an extension of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)"><fo:inline>Application</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html</fo:basic-link>]</fo:inline>
                class.
                If you deploy your Jersey application into a Servlet container you will need to provide a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)"><fo:inline>Application</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html</fo:basic-link>]</fo:inline>
                subclass that will be used for configuration. You may use a <fo:inline font-family="monospace">web.xml</fo:inline> where you would define a
                <fo:inline font-family="monospace">org.glassfish.jersey.servlet.ServletContainer</fo:inline> Servlet entry there and specify initial parameter
                <fo:inline font-family="monospace">javax.ws.rs.Application</fo:inline> with the class name of your JAX-RS Application that you
                wish to deploy. In the example above, this application will be <fo:inline font-family="monospace">MyResourceConfig</fo:inline> class. This is
                the reason why <fo:inline font-family="monospace">MyResourceConfig</fo:inline> extends the <fo:inline font-family="monospace">ResourceConfig</fo:inline> (which, if you
                remember extends the <fo:inline font-family="monospace">javax.ws.rs.Application</fo:inline>).
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The following example shows a fragment of <fo:inline font-family="monospace">web.xml</fo:inline> that can be used to deploy the
                <fo:inline font-family="monospace">ResourceConfig</fo:inline> JAX-RS application.
                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e11023"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 14.3. A programmatic resource</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e11026">  1 
  2                         ...
  3                         &lt;servlet&gt;
  4                             &lt;servlet-name&gt;org.glassfish.jersey.examples.helloworld.MyApplication&lt;/servlet-name&gt;
  5                             &lt;servlet-class&gt;org.glassfish.jersey.servlet.ServletContainer&lt;/servlet-class&gt;
  6                             &lt;init-param&gt;
  7                                 &lt;param-name&gt;javax.ws.rs.Application&lt;/param-name&gt;
  8                                 &lt;param-value&gt;org.glassfish.jersey.examples.helloworld.MyResourceConfig&lt;/param-value&gt;
  9                             &lt;/init-param&gt;
 10                             &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
 11                         &lt;/servlet&gt;
 12                         &lt;servlet-mapping&gt;
 13                             &lt;servlet-name&gt;org.glassfish.jersey.examples.helloworld.MyApplication&lt;/servlet-name&gt;
 14                             &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
 15                         &lt;/servlet-mapping&gt;
 16                         ...
 17                     </fo:block></fo:block></fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                If you use another deployment options and you have accessible instance of ResourceConfig which you use
                for configuration, you can register programmatic resources directly by <fo:inline font-family="monospace">registerResources()</fo:inline>
                method called on the ResourceConfig. Please note that the method registerResources() replaces all the previously
                registered resources.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Because Jersey programmatic API is not a standard JAX-RS feature the <fo:inline font-family="monospace">ResourceConfig</fo:inline> must be
                used to register programmatic resources as shown above. See <fo:basic-link internal-destination="deployment"><fo:inline>deployment chapter</fo:inline></fo:basic-link>
                for more information.
            </fo:block></fo:block></fo:block><fo:block id="d0e11042"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Additional examples</fo:marker><fo:block font-size="20.735999999999997pt">14.3. Additional examples</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e11047"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 14.4. A programmatic resource</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e11050">  1 
  2                     final Resource.Builder resourceBuilder = Resource.builder(HelloWorldResource.class);
  3                     resourceBuilder.addMethod("OPTIONS")
  4                         .handledBy(new Inflector&lt;ContainerRequestContext, Response&gt;() {
  5                             @Override
  6                             public Response apply(ContainerRequestContext containerRequestContext) {
  7                                 return Response.ok("This is a response to an OPTIONS method.").build();
  8                             }
  9                         });
 10                     final Resource resource = resourceBuilder.build();
 11                 </fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In the example above the <fo:inline font-family="monospace">Resource</fo:inline> is built from
            a <fo:inline font-family="monospace">HelloWorldResource</fo:inline> resource class. The resource model built this way
            contains a <fo:inline font-family="monospace">GET</fo:inline> method producing <fo:inline font-family="monospace">'text/plain'</fo:inline> responses with "Hello World!" entity.
            This is quite important as it allows you to whatever Resource objects based on introspecting
            existing JAX-RS resources and use builder API to enhance such these standard resources.
            In the example we used already implemented <fo:inline font-family="monospace">HelloWorldResource</fo:inline> resource class
            and enhanced it by <fo:inline font-family="monospace">OPTIONS</fo:inline> method. The <fo:inline font-family="monospace">OPTIONS</fo:inline> method is handled by an Inflector which
            returns <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html)"><fo:inline>Response</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html</fo:basic-link>]</fo:inline>.
         </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The following sample shows how to define sub-resource methods (methods that contains sub-path).
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e11083"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 14.5. A programmatic resource</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e11086">  1 
  2                     final Resource.Builder resourceBuilder = Resource.builder("helloworld");
  3 
  4                     final Resource.Builder childResource = resourceBuilder.addChildResource("subresource");
  5                     childResource.addMethod("GET").handledBy(new GetInflector());
  6 
  7                     final Resource resource = resourceBuilder.build();
  8                 </fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Sub-resource methods are defined using so called <fo:inline font-style="italic">child resource models</fo:inline>. Child
            resource models (or child resources) are programmatic resources build in the same way as any other
            programmatic resource but they are registered as a child resource of a parent resource. The child resource
            in the example is build directly from the parent builder using method
            <fo:inline font-family="monospace">addChildResource(String path)</fo:inline>.
            However, there is also an option to build a child resource model separately as a standard resource and then
            add it as a child resource to a selected parent resource. This means that child resource objects
            can be reused to define child resources in different parent resources (you just build a single child resource
            and then register it in multiple parent resources). Each child resource groups methods with the same sub-resource
            path. Note that a child resource cannot have any child resources as there is nothing like sub-sub-resource
            method concept in JAX-RS. For example if a sub resource method contains more path segments in its path
            (e.g. "/root/sub/resource/method" where "root" is a path of the resource and "sub/resource/method" is the sub
            resource method path) then parent resource will have path "root" and child resource will have path
            "sub/resource/method" (so, there will not be any separate nested sub-resources for "sub", "resource" and "method").
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            See the javadocs of the resource builder API for more information.
            
        </fo:block></fo:block><fo:block id="d0e11101"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Model processors</fo:marker><fo:block font-size="20.735999999999997pt">14.4. Model processors</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Jersey gives you an option to register so called <fo:inline font-style="italic">model processor providers</fo:inline>. These providers
            are able to modify or enhance the application resource model during application deployment. This is an advanced
            feature and will not be needed in most use cases. However, imagine you would like to add <fo:inline font-family="monospace">OPTIONS</fo:inline> resource
            method to each deployed resource as it is described at the top of this chapter. You would want to do it for every
            programmatic resource that is registered as well as for all standard JAX-RS resources.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            To do that, you first need to register a model processor provider in your application, which implements
            <fo:inline font-family="monospace">org.glassfish.jersey.server.model.ModelProcessor</fo:inline> extension contract. An example of
            a model processor implementation is shown here:
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e11117"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 14.6. A programmatic resource</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e11120">  1 
  2                     import javax.ws.rs.GET;
  3                     import javax.ws.rs.Path;
  4                     import javax.ws.rs.Produces;
  5                     import javax.ws.rs.container.ContainerRequestContext;
  6                     import javax.ws.rs.core.Application;
  7                     import javax.ws.rs.core.Configuration;
  8                     import javax.ws.rs.core.MediaType;
  9                     import javax.ws.rs.core.Response;
 10                     import javax.ws.rs.ext.Provider;
 11 
 12                     import org.glassfish.jersey.process.Inflector;
 13                     import org.glassfish.jersey.server.model.ModelProcessor;
 14                     import org.glassfish.jersey.server.model.Resource;
 15                     import org.glassfish.jersey.server.model.ResourceMethod;
 16                     import org.glassfish.jersey.server.model.ResourceModel;
 17 
 18                     @Provider
 19                     public static class MyOptionsModelProcessor implements ModelProcessor {
 20 
 21                         @Override
 22                         public ResourceModel processResourceModel(ResourceModel resourceModel, Configuration configuration) {
 23                             // we get the resource model and we want to enhance each resource by OPTIONS method
 24                             ResourceModel.Builder newResourceModelBuilder = new ResourceModel.Builder(false);
 25                             for (final Resource resource : resourceModel.getResources()) {
 26                                 // for each resource in the resource model we create a new builder which is based on the old resource
 27                                 final Resource.Builder resourceBuilder = Resource.builder(resource);
 28 
 29                                 // we add a new OPTIONS method to each resource
 30                                 // note that we should check whether the method does not yet exist to avoid failures
 31                                 resourceBuilder.addMethod("OPTIONS")
 32                                     .handledBy(new Inflector&lt;ContainerRequestContext, String&gt;() {
 33                                         @Override
 34                                         public String apply(ContainerRequestContext containerRequestContext) {
 35                                             return "On this path the resource with " + resource.getResourceMethods().size()
 36                                                 + " methods is deployed.";
 37                                         }
 38                                         }).produces(MediaType.TEXT_PLAIN)
 39                                           .extended(true); // extended means: not part of core RESTful API
 40 
 41                                 // we add to the model new resource which is a combination of the old resource enhanced
 42                                 // by the OPTIONS method
 43                                 newResourceModelBuilder.addResource(resourceBuilder.build());
 44                             }
 45 
 46                             final ResourceModel newResourceModel = newResourceModelBuilder.build();
 47                             // and we return new model
 48                             return newResourceModel;
 49                         };
 50 
 51                         @Override
 52                         public ResourceModel processSubResource(ResourceModel subResourceModel, Configuration configuration) {
 53                             // we just return the original subResourceModel which means we do not want to do any modification
 54                             return subResourceModel;
 55                         }
 56                     }
 57                 </fo:block></fo:block></fo:block>
            The <fo:inline font-family="monospace">MyOptionsModelProcessor</fo:inline> from the example is a relatively simple model processor which
            iterates over all registered resources and for all of them builds a new resource that is equal to the old resource
            except it is enhanced with a new <fo:inline font-family="monospace">OPTIONS</fo:inline> method.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Note that you only need to register such a ModelProcessor as your custom extension provider in the same way as you
            would register any standard JAX-RS extension provider. During an application deployment, Jersey will look for any
            registered model processor and execute them. As you can seem, model processors are very powerful as they can do
            whatever manipulation with the resource model they like. A model processor can even, for example, completely ignore
            the old resource model and return a new custom resource model with a single "Hello world!" resource, which would
            result in only the "Hello world!" resource being deployed in your application. Of course, it would not not make
            much sense to implement such model processor, but the scenario demonstrates how powerful the model processor concept
            is. A better, real-life use case scenario would, for example, be to always add some custom new resource to each
            application that might return additional metadata about the deployed application. Or, you might want to
            filter out particular resources or resource methods, which is another situation where a model processor could
            be used successfully.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Also note that <fo:inline font-family="monospace">processSubResource(ResourceModel subResourceModel, Configuration configuration)</fo:inline>
            method is executed for each sub resource returned from the sub resource locator. The example is simplified and does
            not do any manipulation but probably in such a case you would want to enhance all sub resources with
            a new <fo:inline font-family="monospace">OPTIONS</fo:inline> method handlers too.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            It is important to remember that any model processor must always return valid resource model. As you might have
            already noticed, in the example above this important rule is not followed. If any of the resources in the original
            resource model would already have an <fo:inline font-family="monospace">OPTIONS</fo:inline> method handler defined, adding another handler would cause
            the application fail during the deployment in the resource model validation phase. In order to retain the consistency
            of the final model, a model processor implementation would have to be more robust than what is shown in the example.
        </fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Server-Sent Events (SSE) Support</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Server-Sent Events (SSE) Support</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="sse"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 15. Server-Sent Events (SSE) Support</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e11148"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">What are Server-Sent Events</fo:marker><fo:block font-size="20.735999999999997pt">15.1. What are Server-Sent Events</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In a standard HTTP request-response scenario a client opens a connection, sends a HTTP request to the server (for
            example a HTTP <fo:inline font-family="monospace">GET</fo:inline> request), then receives a HTTP response back and the server closes the connection once
            the response is fully sent/received. The initiative <fo:inline font-style="italic">always</fo:inline> comes from a client when the client
            requests all the data. In contrast, <fo:inline font-style="italic">Server-Sent Events (SSE)</fo:inline> is a mechanism that allows server
            to asynchronously push the data from the server to the client once the client-server connection is established by the
            client. Once the connection is established by the client, it is the server who provides the data and decides
            to send it to the client whenever new "chunk" of data is available. When a new data event occurs on the server,
            the data event is sent by the server to the client. Thus the name Server-Sent Events. Note that at high level there
            are more technologies working on this principle, a short overview of the technologies supporting server-to-client
            communication is in this list:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="d0e11162" provisional-distance-between-starts="18em * 0.60+1em" provisional-label-separation="1em"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e11163"><fo:list-item-label end-indent="label-end()" text-align="start"><fo:block><fo:inline>Polling</fo:inline></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            With polling a client repeatedly sends new requests to a server. If the server has no new data,
                            then it send appropriate indication and closes the connection. The client then waits a bit and sends
                            another request after some time (after one second, for example).
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e11169"><fo:list-item-label end-indent="label-end()" text-align="start"><fo:block><fo:inline>Long-polling</fo:inline></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            With long-polling a client sends a request to a server. If the server has no new data,
                            it just holds the connection open and waits until data is available. Once the server has data
                            (message) for the client, it uses the connection and sends it back to the client. Then the connection
                            is closed.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e11175"><fo:list-item-label end-indent="label-end()" text-align="start"><fo:block><fo:inline>Server-Sent events</fo:inline></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            SSE is similar to the long-polling mechanism, except it does not send only one message per connection.
                            The client sends a request and server holds a connection until a new message is ready, then it sends
                            the message back to the client while still keeping the connection open so that it can be used
                            for another message once it becomes available. Once a new message is ready, it is sent back to the
                            client on the same initial connection. Client processes the messages sent back from the server
                            individually without closing the connection after processing each message.
                            So, SSE typically reuses one connection for more messages (called events). SSE also defines a
                            dedicated media type that describes a simple format of individual events sent from the server to the
                            client. SSE also offers standard javascript client API implemented most modern browsers. For more
                            information about SSE, see the
                            <fo:basic-link external-destination="url(http://www.w3.org/TR/2009/WD-eventsource-20091029/)"><fo:inline>SSE API specification</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://www.w3.org/TR/2009/WD-eventsource-20091029/)">http://www.w3.org/TR/2009/WD-eventsource-20091029/</fo:basic-link>]</fo:inline>.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e11184"><fo:list-item-label end-indent="label-end()" text-align="start"><fo:block><fo:inline>WebSocket</fo:inline></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            WebSocket technology is different from previous technologies as it provides a real full duplex
                            connection. The initiator is again a client which sends a request to a server with a special HTTP
                            header that informs the server that the HTTP connection may be "upgraded" to a full duplex TCP/IP
                            WebSocket connection. If server supports WebSocket, it may choose to do so. Once a WebSocket
                            connection is established, it can be used for bi-directional communication between the client and the
                            server. Both client and server can then send data to the other party at will whenever it is needed.
                            The communication on the new WebSocket connection is no longer based on HTTP protocol and can be
                            used for example for for online gaming or any other applications that require fast exchange of small
                            chunks of data in flowing in both directions.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
        </fo:block></fo:block><fo:block id="d0e11191"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">When to use Server-Sent Events</fo:marker><fo:block font-size="20.735999999999997pt">15.2. When to use Server-Sent Events</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            As explained above, SSE is a technology that allows clients to subscribe to event notifications that originate on
            a server. Server generates new events and sends these events back to the clients subscribed to receive the
            notifications. In other words, SSE offers a solution for a one-way publish-subscribe model.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            A good example of the use case where SSE can be used is a simple message exchange RESTful service. Clients
            <fo:inline font-family="monospace">POST</fo:inline> new messages to the service and subscribe to receive messages from other clients.
            Let's call the resource <fo:inline font-family="monospace">messages</fo:inline>. While <fo:inline font-family="monospace">POST</fo:inline>ing a new message to this resource involves
            a typical HTTP request-response communication between a client and the <fo:inline font-family="monospace">messages</fo:inline> resource,
            subscribing to receive all new message notifications would be hard and impractical to model with a sequence of
            standard request-response message exchanges. Using Server-sent events provides a much more practical approach here.
            You can use SSE to let clients subscribe to the <fo:inline font-family="monospace">messages</fo:inline> resource via standard <fo:inline font-family="monospace">GET</fo:inline>
            request (use a SSE client API, for example javascript API or Jersey Client SSE API) and let the server broadcast
            new messages to all connected clients in the form of individual events (in our case using Jersey Server SSE API).
            Note that with Jersey a SSE support is implemented as an usual JAX-RS resource method. There's no need to do anything
            special to provide a SSE support in your Jersey/JAX-RS applications, your SSE-enabled resources are a standard part of
            your RESTful Web application that defines the REST API of your application. The following chapters describes SSE
            support in Jersey in more details.
        </fo:block></fo:block><fo:block id="jaxrs-sse-api-overview"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Server-Sent Events API</fo:marker><fo:block font-size="20.735999999999997pt">15.3. Server-Sent Events API</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In previous JAX-RS versions, no standard API for server-sent events was defined. The SSE support bundled with
            Jersey was Jersey-specific. With JAX-RS 2.1, situation changed and SSE API is well defined in the
            <fo:inline font-family="monospace">javax.ws.rs.sse</fo:inline>
            package.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Following chapters will describe the new SSE API. For backwards compatibility reasons, the original
            Jersey-specific API remains valid and will be described in
            <fo:basic-link internal-destination="overview-jersey-specific"><fo:inline>Section 15.6, “Jersey-specific Server-Sent Events API”</fo:inline></fo:basic-link>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Jersey contains support for SSE for both - server and client. SSE in Jersey is implemented as an extension
            supporting a new media type using existing "chunked" messages support. However, in contrast to the original API,
            the instances of SSE related classes are not to be obtained manually by invoking constructors, nor to be directly
            returned from the resource methods.
            Actually, the implementing classes in the <fo:inline font-family="monospace">jersey.media.sse.internal</fo:inline> package should never be needed
            to be imported. The only API to be used is directly in the JAX-RS package (<fo:inline font-family="monospace">javax.ws.rs.sse</fo:inline>).
            Only builders in the API along with dependency injection should be used and provides access to the entire
            functionality.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In order to take advantage of the SSE support, the <fo:inline font-family="monospace">jersey-media-sse</fo:inline> module has to be on classpath.
            In maven, this can be achieved by adding the dependency to the <fo:inline font-style="italic">SSE media type module</fo:inline>:
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="sse-dependency-jaxrs"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 15.1. Adding the SSE dependency</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e11247">  1 &lt;dependency&gt;
  2     &lt;groupId&gt;org.glassfish.jersey.media&lt;/groupId&gt;
  3     &lt;artifactId&gt;jersey-media-sse&lt;/artifactId&gt;
  4 &lt;/dependency&gt;</fo:block></fo:block></fo:block>
            The <fo:inline font-family="monospace">Feature</fo:inline> defined in the module is (forced) auto-discoverable, which means having the module on
            classpath is sufficient, no need to further register it in the code.
        </fo:block></fo:block><fo:block id="d0e11253"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Implementing SSE support in a JAX-RS resource (with JAX-RS SSE API)</fo:marker><fo:block font-size="20.735999999999997pt">15.4. Implementing SSE support in a JAX-RS resource (with JAX-RS SSE API)</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e11256"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Simple SSE resource method</fo:marker><fo:block font-size="17.28pt">15.4.1. Simple SSE resource method</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="example-simple-sse-jaxrs"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 15.2. Simple SSE resource method</fo:block>
                As mentioned above, the SSE related are not instantiated directly. In this case, Jersey takes care of the
                dependencies and injects the <fo:inline>SseEventSink</fo:inline> (represents the output) and <fo:inline>Sse</fo:inline> (provides
                factory methods for other SSE related types, in this case it is used to retrieve the event builder).
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e11269">  1 ...
  2 import javax.ws.rs.sse.Sse;
  3 import javax.ws.rs.sse.SseEventSink;
  4 import javax.ws.rs.sse.OutboundSseEvent;
  5 ...
  6 
  7 @Path("events")
  8 public static class SseResource {
  9 
 10     @GET
 11     @Produces(MediaType.SERVER_SENT_EVENTS)
 12     public void getServerSentEvents(@Context SseEventSink eventSink, @Context Sse sse) {
 13         new Thread(() -&gt; {
 14             for (int i = 0; i &lt; 10; i++) {
 15                 // ... code that waits 1 second
 16                 final OutboundSseEvent event = sse.newEventBuilder()
 17                     .name("message-to-client")
 18                     .data(String.class, "Hello world " + i + "!")
 19                     .build();
 20                 eventSink.onNext(event);
 21             }
 22         }).start();
 23     }
 24 }
 25                 </fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The code above defines the resource deployed on URI "/events". This resource has a single
                <fo:inline font-family="monospace">@GET</fo:inline>
                resource method which <fo:inline font-style="italic">returns void</fo:inline>. This is an imported difference
                against the original API. It is Jersey's responsibility to bind the injected <fo:inline font-family="monospace">SseEventSink</fo:inline> to
                the output chain.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                After the <fo:inline font-family="monospace">SseEventInput</fo:inline> is "returned" from the method, the Jersey runtime recognizes that this
                is a <fo:inline font-family="monospace">ChunkedOutput</fo:inline> extension and does not close the client connection immediately. Instead, it
                writes the HTTP headers to the response stream and waits for more chunks (SSE events) to be sent. At this point
                the client can read headers and starts listening for individual events.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                In the<fo:basic-link internal-destination="example-simple-sse-jaxrs"><fo:inline>Example 15.2, “Simple SSE resource method”</fo:inline></fo:basic-link>, the resource method creates a new thread that sends a
                sequence of 10 events. There is a 1 second delay between two subsequent events as indicated in a comment. Each
                event is represented by <fo:inline font-family="monospace">javax.ws.rs.sse.OutboundSseEvent</fo:inline> type and is built with a help of a
                provided <fo:inline font-family="monospace">Builder</fo:inline>. The <fo:inline font-family="monospace">Builder</fo:inline> is obtain via the injected instance
                (actually, it is a singleton) of <fo:inline font-family="monospace">javax.ws.rs.sse.Sse</fo:inline> (the
                <fo:inline font-family="monospace">newEventBuilder()</fo:inline>
                method. The <fo:inline font-family="monospace">OutboundSseEvent</fo:inline> implementation reflects the standardized format of
                SSE messages and contains properties that represent <fo:inline font-family="monospace">name</fo:inline> (for named events),
                <fo:inline font-family="monospace">comment</fo:inline>, <fo:inline font-family="monospace">data</fo:inline> or <fo:inline font-family="monospace">id</fo:inline>. The code also sets the
                event data media type using the <fo:inline font-family="monospace">mediaType(MediaType)</fo:inline> method on the
                <fo:inline font-family="monospace">eventBuilder</fo:inline>. The media type, together with the data type set by the
                <fo:inline font-family="monospace">data(Class, Object&gt;</fo:inline>
                method (in our case <fo:inline font-family="monospace">String.class</fo:inline>), is used
                for serialization of the event data. Note that the event data media type will not be written to any headers as
                the response <fo:inline font-family="monospace">Content-type</fo:inline> header is already defined by the <fo:inline font-family="monospace">@Produces</fo:inline> and set to
                <fo:inline font-family="monospace">"text/event-stream"</fo:inline>
                using constant from the <fo:inline font-family="monospace">MediaType</fo:inline>.
                The event media type is used for serialization of event <fo:inline font-family="monospace">data</fo:inline>. Event data media type and Java
                type are used to select the proper <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html)"><fo:inline>MessageBodyWriter&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html</fo:basic-link>]</fo:inline> for event data serialization and are passed
                to the selected writer that serializes the event <fo:inline font-family="monospace">data</fo:inline> content. In our case the string
                <fo:inline font-family="monospace">"Hello world " + i + "!"</fo:inline>
                is serialized as <fo:inline font-family="monospace">"text/plain"</fo:inline>. In event
                <fo:inline font-family="monospace">data</fo:inline>
                you can send any Java entity and associate it with any media type that you would be able
                to serialize with an available <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline>. Typically, you may want to send e.g. JSON data,
                so you would fill the <fo:inline font-family="monospace">data</fo:inline> with a JAXB annotated bean instance and define media type to JSON.
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e11372"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        If the event media type is not set explicitly, the <fo:inline font-family="monospace">"text/plain"</fo:inline> media type is used
                        by default.
                    </fo:block></fo:block></fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Once an outbound event is ready, it can be written to the <fo:inline font-family="monospace">EventSink</fo:inline>. At that point the event
                is serialized by internal <fo:inline font-family="monospace">OutboundEventWriter</fo:inline> which uses an appropriate
                <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline> to serialize the <fo:inline font-family="monospace">"Hello world " + i + "!"</fo:inline> string. You can
                send as many messages as you like. At the end of the thread execution the response is closed which also closes
                the connection to the client. After that, no more messages can be sent to the client on this connection. If the
                client would like to receive more messages, it would have to send a new request to the server to initiate a
                new SSE streaming connection.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                A client connecting to our SSE-enabled resource will receive the following data from the entity stream:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e11395">event: message-to-client
data: Hello world 0!

event: message-to-client
data: Hello world 1!

event: message-to-client
data: Hello world 2!

event: message-to-client
data: Hello world 3!

event: message-to-client
data: Hello world 4!

event: message-to-client
data: Hello world 5!

event: message-to-client
data: Hello world 6!

event: message-to-client
data: Hello world 7!

event: message-to-client
data: Hello world 8!

event: message-to-client
data: Hello world 9!
                </fo:block>

                Each message is received with a delay of one second.
            </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e11398"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    If you have worked with streams in JAX-RS, you may wonder what is the difference between
                    <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ChunkedOutput.html)"><fo:inline>ChunkedOutput</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ChunkedOutput.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ChunkedOutput.html</fo:basic-link>]</fo:inline> and <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/StreamingOutput.html)"><fo:inline>StreamingOutput</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/StreamingOutput.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/StreamingOutput.html</fo:basic-link>]</fo:inline>.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    <fo:inline font-family="monospace">ChunkedOutput</fo:inline> is Jersey-specific API. It lets you send "chunks" of data without closing
                    the client connection using series of convenient calls to <fo:inline font-family="monospace">ChunkedOutput.write</fo:inline> methods
                    that take POJO + chunk media type as an input and then use the configured JAX-RS
                    <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline> providers to figure out the proper way of serializing each chunk POJO
                    to bytes. Additionally, <fo:inline font-family="monospace">ChunkedOutput</fo:inline> writes can be invoked multiple times on the same
                    outbound response connection, i.e. individual chunks are written in each write, not the full response entity.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    <fo:inline font-family="monospace">StreamingOutput</fo:inline> is, on the other hand, a low level JAX-RS API that works with bytes
                    directly. You have to implement <fo:inline font-family="monospace">StreamingOutput</fo:inline> interface yourself. Also, its
                    <fo:inline font-family="monospace">write(OutputStream)</fo:inline>
                    method will be invoked by JAX-RS runtime only once per response
                    and the call to this method is blocking, i.e. the method is expected to write the entire entity body
                    before returning.
                </fo:block></fo:block></fo:block></fo:block><fo:block id="d0e11432"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Broadcasting with Jersey SSE</fo:marker><fo:block font-size="17.28pt">15.4.2. Broadcasting with Jersey SSE</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                JAX-RS SSE API defines <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseBroadcaster.html)"><fo:inline>SseBroadcaster</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseBroadcaster.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseBroadcaster.html</fo:basic-link>]</fo:inline> which allows to broadcast individual events to multiple
                clients. A simple broadcasting implementation is shown in the following example:

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e11440"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 15.3. Broadcasting SSE messages (with JAX-RS 2.1 API)</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e11443">  1 ...
  2 import javax.ws.rs.sse.Sse;
  3 import javax.ws.rs.sse.SseEventSink;
  4 import javax.ws.rs.sse.SseBroadcaster;
  5 ...
  6 
  7 @Singleton
  8 @Path("broadcast")
  9 public static class BroadcasterResource {
 10     private Sse sse;
 11     private SseBroadcaster broadcaster;
 12 
 13     public BroadcasterResource(@Context final Sse sse) {
 14         this.sse = sse;
 15         this.broadcaster = sse.newBroadcaster();
 16     }
 17 
 18     @POST
 19     @Produces(MediaType.TEXT_PLAIN)
 20     @Consumes(MediaType.TEXT_PLAIN)
 21     public String broadcastMessage(String message) {
 22         final OutboundSseEvent event = sse.newEventBuilder()
 23             .name("message")
 24             .mediaType(MediaType.TEXT_PLAIN_TYPE)
 25             .data(String.class, message)
 26             .build();
 27 
 28         broadcaster.broadcast(event);
 29 
 30         return "Message '" + message + "' has been broadcast.";
 31     }
 32 
 33     @GET
 34     @Produces(MediaType.SERVER_SENT_EVENTS)
 35     public void listenToBroadcast(@Context SseEventSink eventSink) {
 36         this.broadcaster.subscribe(eventSink);
 37     }
 38 }
 39                     </fo:block></fo:block></fo:block>
                Let's explore the example together. The <fo:inline font-family="monospace">BroadcasterResource</fo:inline> resource class is annotated with
                <fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/inject/Singleton.html)"><fo:inline>@Singleton</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/inject/Singleton.html)">http://docs.oracle.com/javaee/7/api/javax/inject/Singleton.html</fo:basic-link>]</fo:inline> annotation which tells Jersey runtime that only a single instance of the resource
                class should be used to serve all the incoming requests to <fo:inline font-family="monospace">/broadcast</fo:inline> path. This is needed as
                we want to keep an application-wide single reference to the private <fo:inline font-family="monospace">broadcaster</fo:inline> field so that
                we can use the same instance for all requests. Clients that want to listen to SSE events first send a
                <fo:inline font-family="monospace">GET</fo:inline> request to the <fo:inline font-family="monospace">BroadcasterResource</fo:inline>, that is handled by the
                <fo:inline font-family="monospace">listenToBroadcast()</fo:inline>
                resource method.
                The method is injected with a new <fo:inline font-family="monospace">SseEventSink</fo:inline> representing the connection to the
                requesting client and registers this <fo:inline font-family="monospace">eventSink</fo:inline> instance with the singleton
                <fo:inline font-family="monospace">broadcaster</fo:inline>
                by calling its <fo:inline font-family="monospace">subscribe()</fo:inline> method.
                The method then, as already explained returns <fo:inline font-family="monospace">void</fo:inline> and Jersey runtime is responsible for
                binding the injected <fo:inline font-family="monospace">EventSink</fo:inline> instance so as it would have been returned from the resource
                method (note that really returning the <fo:inline font-family="monospace">EventSink</fo:inline> from the resource method will cause
                failure) and to bind the <fo:inline font-family="monospace">eventSink</fo:inline> instance with the requesting client and send the
                response HTTP headers to the client. The client connection remains open and the client is now waiting ready to
                receive new SSE events. All the events are written to the <fo:inline font-family="monospace">eventSink</fo:inline> by
                <fo:inline font-family="monospace">broadcaster</fo:inline>
                later on. This way developers can conveniently handle sending new events to
                all the clients that subscribe to them.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                When a client wants to broadcast new message to all the clients listening on their SSE connections,
                it sends a <fo:inline font-family="monospace">POST</fo:inline> request to <fo:inline font-family="monospace">BroadcasterResource</fo:inline> resource with the message content.
                The method <fo:inline font-family="monospace">broadcastMessage(String)</fo:inline> is invoked on
                <fo:inline font-family="monospace">BroadcasterResource</fo:inline>
                resource with the message content as an input parameter. A new SSE outbound event is built in the standard way
                and passed to the broadcaster. The broadcaster internally invokes <fo:inline font-family="monospace">write(OutboundEvent)</fo:inline> on all
                registered <fo:inline font-family="monospace">EventSink</fo:inline>s. After that the method just returns a standard text response
                to the <fo:inline font-family="monospace">POST</fo:inline>ing client to inform the client that the message was successfully broadcast. As you can see,
                the <fo:inline font-family="monospace">broadcastMessage(String)</fo:inline> resource method is just a simple JAX-RS resource method.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                In order to implement such a scenario, you may have noticed, that the
                <fo:inline font-family="monospace">SseBroadcaster</fo:inline>
                is not mandatory to complete the use case. Individual <fo:inline font-family="monospace">EventSink</fo:inline>s can be just stored in
                a collection and iterated over in the <fo:inline font-family="monospace">broadcastMessage</fo:inline> method. However, the
                <fo:inline font-family="monospace">SseBroadcaster</fo:inline>
                internally identifies and handles also client disconnects. When a client
                closes the connection, the broadcaster detects this and removes the stale connection from the internal collection
                of the registered <fo:inline font-family="monospace">EventSink</fo:inline>s as well as it frees all the server-side resources associated with
                the stale connection.
                Additionally, the <fo:inline font-family="monospace">SseBroadcaster</fo:inline> is implemented to be thread-safe, so that clients can connect
                and disconnect in any time and <fo:inline font-family="monospace">SseBroadcaster</fo:inline> will always broadcast messages to the most recent
                collection of registered and active set of clients.
            </fo:block></fo:block></fo:block><fo:block id="sse-client-jaxrs"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Consuming SSE events within Jersey clients</fo:marker><fo:block font-size="20.735999999999997pt">15.5. Consuming SSE events within Jersey clients</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            On the client side, push programming model is used (event consumer / client) gets asynchronously notified about
            incoming events by subscribing custom listener to <fo:inline font-family="monospace">javax.ws.rs.sse.SseEventSource</fo:inline>. This happens by
            invoking one of its <fo:inline font-family="monospace">subscribe()</fo:inline> methods.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The usage of <fo:inline font-family="monospace">SseEventSource</fo:inline> is shown in the following example.
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="sse-event-source-example"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 15.4. Consuming SSE events with SseEventSource</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e11566">  1 import javax.ws.rs.sse.SseEventSource;
  2 ...
  3 Client client = ClientBuilder.newBuilder().build();
  4 WebTarget target = client.target("http://example.com/events");
  5 SseEventSource sseEventSource = SseEventSource.target(target).build();
  6 sseEventSource.subscribe((event) -&gt; System.out.println(event.getName() + "; "
  7     + event.readData(String.class)));
  8 sseEventSource.open();
  9 
 10 // do other stuff, block here and continue when done
 11 
 12 sseEventSource.close();
 13                 </fo:block></fo:block></fo:block>
            In this example, the client code connects to the server where the <fo:inline font-family="monospace">SseResource</fo:inline> from the
            <fo:basic-link internal-destination="example-simple-sse-jaxrs"><fo:inline>Example 15.2, “Simple SSE resource method”</fo:inline></fo:basic-link>
            is deployed. The <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)"><fo:inline>Client</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html</fo:basic-link>]</fo:inline> instance
            is created (and initialized with <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html)"><fo:inline>SseFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html</fo:basic-link>]</fo:inline> automatically). Then the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html)"><fo:inline>WebTarget</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html</fo:basic-link>]</fo:inline> is built.
            In this case a request to the web target is not made directly in the code, instead, the web target instance
            is used to initialize a new <fo:inline>SseEventSource.Builder</fo:inline> instance that is used to build a new
            <fo:inline>SseEventSource</fo:inline>. The choice of <fo:inline font-family="monospace">build()</fo:inline> method is important, as it tells
            the <fo:inline font-family="monospace">SseEventSource.Builder</fo:inline> to create a new <fo:inline font-family="monospace">SseEventSource</fo:inline> that is not
            automatically connected to the <fo:inline font-family="monospace">target</fo:inline>. The connection is established only later by manually
            invoking the <fo:inline font-family="monospace">sseEventSource.open()</fo:inline> method. A custom
            <fo:inline font-family="monospace">java.util.function.Consumer&lt;InboundSseEvent&gt;</fo:inline>
            implementation is used to listen to and
            process incoming SSE events. The method readData(Class) says that the
            event data should be de-serialized from a received <fo:inline>InboundSseEvent</fo:inline> instance into a
            <fo:inline font-family="monospace">String</fo:inline>
            Java type. This method call internally executes <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)"><fo:inline>MessageBodyReader&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html</fo:basic-link>]</fo:inline> which
            de-serializes the event data. This is similar to reading an entity from the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html)"><fo:inline>Response</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html</fo:basic-link>]</fo:inline> by
            <fo:inline font-family="monospace">readEntity(Class)</fo:inline>. The method <fo:inline font-family="monospace">readData</fo:inline> can throw a
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ProcessingException.html)"><fo:inline>ProcessingException</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ProcessingException.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ProcessingException.html</fo:basic-link>]</fo:inline>.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            After a connection to the server is opened by calling the <fo:inline font-family="monospace">open()</fo:inline> method on the event source,
            the <fo:inline font-family="monospace">eventSource</fo:inline> starts listening to events. When an event comes, the listener will be executed
            by the event source. Once the client is done with processing and does not want to receive events the connection by
            calling the <fo:inline font-family="monospace">close()</fo:inline> method on the event source.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The listener from the example above will print the following output:
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e11641">message-to-client; Hello world 0!
message-to-client; Hello world 1!
message-to-client; Hello world 2!
message-to-client; Hello world 3!
message-to-client; Hello world 4!
message-to-client; Hello world 5!
message-to-client; Hello world 6!
message-to-client; Hello world 7!
message-to-client; Hello world 8!
message-to-client; Hello world 9!
            </fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            There are other events than the incoming data that also may occur. The <fo:inline font-family="monospace">SseEventSource</fo:inline> for
            instance always signals, that it has finished processing events, or there might also be an error while processing the
            messages. <fo:inline font-family="monospace">SseEventSource</fo:inline>. There are total of four overloaded
            <fo:inline font-family="monospace">subscribe()</fo:inline>
            methods defined in the API.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="sse-event-source-subscribe-methods"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 15.5. SseEventSource subscribe() methods</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e11660">  1 // 1. basic one - the one we used in the example
  2 void subscribe(Consumer&lt;InboundSseEvent&gt; onEvent);
  3 
  4 // 2. with an error callback
  5 void subscribe(Consumer&lt;InboundSseEvent&gt; onEvent, Consumer&lt;Throwable&gt; onError);
  6 
  7 // 3. with an error callback and completion callback
  8 void subscribe(Consumer&lt;InboundSseEvent&gt; onEvent, Consumer&lt;Throwable&gt; onError, Runnable onComplete)
  9 
 10 // 4. complete one - with error callback, completion callback an onSubscribe callback
 11 void subscribe(Consumer&lt;SseSubscription&gt; onSubscribe, Consumer&lt;InboundSseEvent&gt; onEvent, Consumer&lt;Throwable&gt;
 12 onError,
 13 Runnable
 14 onComplete);
 15                 </fo:block></fo:block></fo:block>
            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Few notes to the <fo:inline font-family="monospace">subscribe()</fo:inline> methods:
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e11668"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e11669"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            All the overloaded methods have the <fo:inline font-family="monospace">onEvent</fo:inline> handler. As shown in the example,
                            this parameter is used to consume the SSE events with data.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e11675"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            Except the basic one-arg method, all the others contain an <fo:inline font-family="monospace">onError</fo:inline> handler. In
                            case of error, the <fo:inline font-family="monospace">SseEventSource</fo:inline> invokes the <fo:inline font-family="monospace">onError</fo:inline> method
                            of all its subscribers, that registered the handler. This makes it possible to react to the error
                            conditions in a custom manner.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e11687"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            Another possible argument is the <fo:inline font-family="monospace">onComplete</fo:inline> handler. If registered (used an
                            appropriate <fo:inline font-family="monospace">subscribe()</fo:inline> method, that has the
                            <fo:inline font-family="monospace">onComplete</fo:inline>
                            argument), it is invoked (for all the subscribers) every time when the
                            <fo:inline font-family="monospace">SseEventSource</fo:inline>
                            terminates normally. Either <fo:inline font-family="monospace">onComplete</fo:inline> or
                            <fo:inline font-family="monospace">onError</fo:inline>
                            should be called every time.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e11708"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            The complete <fo:inline font-family="monospace">subscribe()</fo:inline> method adds the <fo:inline font-family="monospace">onSubscribe()</fo:inline> callback.
                            This gives the subscriber a tool to manage the load and do a back-pressure by incrementaly
                            requesting only certain amount of items. When <fo:inline font-family="monospace">SseEventSource</fo:inline> registers a new
                            subscriber, it calls its <fo:inline font-family="monospace">onSubscribe</fo:inline> handler and hands over the
                            <fo:inline font-family="monospace">javax.ws.rs.sse.SseSubscription</fo:inline>
                            instance. This class only has two methods -
                            <fo:inline font-family="monospace">request(long)</fo:inline>
                            for asking for a certain amount of events (often used as
                            <fo:inline font-family="monospace">request(Long.MAX_VALUE)</fo:inline>
                            when no back-pressure is needed) and
                            <fo:inline font-family="monospace">cancel()</fo:inline>
                            to stop receiving further events.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e11735"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            When using the full-arg version of <fo:inline font-family="monospace">subscribe()</fo:inline>, it is the caller's
                            responsibility to manage the amount of data it can handle. The
                            <fo:inline font-family="monospace">sseSubscription.request()</fo:inline>
                            method <fo:inline font-style="italic">MUST</fo:inline> be called, otherwise
                            the subscriber will not receive ANY data. Furthermore, in the current
                            <fo:inline font-family="monospace">SseEventSource</fo:inline>
                            implementation, such a subscriber will block a threadm and will
                            occasionally lead to overflow of an internal buffer in <fo:inline font-family="monospace">SseEventSource</fo:inline>. As
                            mentioned, calling <fo:inline font-family="monospace">subscription.request(Long.MAX_VALUE)</fo:inline>, e.g. in the registered
                            <fo:inline font-family="monospace">onSubscribe</fo:inline>
                            handler is sufficient (and is also a default behaviour for all the
                            other overloaded methods).
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

            </fo:block>

        </fo:block><fo:block id="sse-event-source-reconnect"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">
                <fo:inline font-family="monospace">SseEventSource</fo:inline>
                reconnect support
            </fo:marker><fo:block font-size="17.28pt">15.5.1. 
                <fo:inline font-family="monospace">SseEventSource</fo:inline>
                reconnect support
            </fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The <fo:inline>SseEventSource</fo:inline> implementation supports automated recuperation
                from a connection loss, including negotiation of delivery of any missed events based on the last received
                SSE event <fo:inline font-family="monospace">id</fo:inline> field value, provided this field is set by the server and the negotiation
                facility is supported by the server. In case of a connection loss, the last received SSE event
                <fo:inline font-family="monospace">id</fo:inline>
                field value is sent in the <fo:inline font-family="monospace">Last-Event-ID</fo:inline> HTTP request
                header as part of a new connection request sent to the SSE endpoint. Upon a receipt of such reconnect request,
                the SSE endpoint that supports this negotiation facility is expected to replay all missed events.
            </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e11781"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Note, that SSE lost event negotiation facility is a best-effort mechanism which does not provide
                    any guarantee that all events would be delivered without a loss. You should therefore not
                    rely on receiving every single event and design your client application code accordingly.
                </fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                By default, when a connection the the SSE endpoint is lost, the event source will use a default delay
                before attempting to reconnect to the SSE endpoint. The SSE endpoint can however control the client-side
                retry delay by including a special <fo:inline font-family="monospace">retry</fo:inline> field value in any event sent to the client.
                Jersey <fo:inline>SseEventSource</fo:inline> implementation automatically tracks any received SSE event
                <fo:inline font-family="monospace">retry</fo:inline>
                field values set by the endpoint and adjusts the reconnect delay accordingly,
                using the last received <fo:inline font-family="monospace">retry</fo:inline> field value as the new reconnect delay.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                In addition to handling the standard connection losses, Jersey <fo:inline>SseEventSource</fo:inline> automatically
                deals with any <fo:inline font-family="monospace">HTTP 503 Service Unavailable</fo:inline> responses received from the SSE endpoint,
                that include a <fo:inline font-family="monospace">Retry-After</fo:inline> HTTP header with a valid value. The
                <fo:inline font-family="monospace">HTTP 503 + Retry-After</fo:inline>
                technique is often used by HTTP endpoints as a means of
                connection and traffic throttling. In case a <fo:inline font-family="monospace">HTTP 503 + Retry-After</fo:inline> response is received
                in return to a connection request from SSE endpoint, Jersey <fo:inline font-family="monospace">SseEventSource</fo:inline> will automatically
                schedule a reconnect attempt and use the received <fo:inline font-family="monospace">Retry-After</fo:inline> HTTP header value as a
                one-time override of the reconnect delay.
            </fo:block></fo:block></fo:block><fo:block id="overview-jersey-specific"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Jersey-specific Server-Sent Events API</fo:marker><fo:block font-size="20.735999999999997pt">15.6. Jersey-specific Server-Sent Events API</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e11825"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Important</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Prior to JAX-RS 2.1, server-sent events was not standardized and was optional and implementation-specific.
                Jersey provided its own, specific version of SSE implementation, that remains valid and functional to achieve
                backwards compatibility. This implementation is a Jersey-specific extension of JAX-RS (2.0) standard. It works
                with common JAX-RS resources the same way as the JAX-RS 2.1 based implementation does.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Both implementations are compatible, which means client based on Jersey-specific SSE implementation can "talk"
                to server resource implemetned using JAX-RS 2.1 based implementation and vice versa.
            </fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            This chapter briefly describes the Jersey-specific support for SSE, focusing on the differences against the new SSE
            implementation described in
            <fo:inline>???</fo:inline>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The API contains support SSE support for both - server and client. To use the Jersey-specific SSE API, you need to
            add the dependency to the
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In order to add support for this SSE implementation, you also need to include the dependency to the
            <fo:inline font-style="italic">SSE media type module</fo:inline>
            the same way as for the JAX-RS SSE implementation.
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="sse.dependency"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 15.6. Add <fo:inline font-family="monospace">jersey-media-sse</fo:inline> dependency.
                </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e11847">  1 &lt;dependency&gt;
  2     &lt;groupId&gt;org.glassfish.jersey.media&lt;/groupId&gt;
  3     &lt;artifactId&gt;jersey-media-sse&lt;/artifactId&gt;
  4 &lt;/dependency&gt;</fo:block></fo:block></fo:block>
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e11850"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Prior to Jersey 2.8, you had to manually register <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html)"><fo:inline>SseFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html</fo:basic-link>]</fo:inline> in your application.
                    (The <fo:inline font-family="monospace">SseFeature</fo:inline> is a feature that can be registered for both, the client and the server.)
                    Since Jersey 2.8, the feature gets automatically discovered and registered when Jersey SSE module is
                    put on the application's classpath. The automatic discovery and registration of SSE feature can be suppressed
                    by setting <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html#DISABLE_SSE)"><fo:inline>DISABLE_SSE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html#DISABLE_SSE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html#DISABLE_SSE</fo:basic-link>]</fo:inline> property to <fo:inline font-family="monospace">true</fo:inline>.
                    The behavior can also be selectively suppressed in either client or server runtime by setting
                    <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html#DISABLE_SSE_CLIENT)"><fo:inline>DISABLE_SSE_CLIENT</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html#DISABLE_SSE_CLIENT)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html#DISABLE_SSE_CLIENT</fo:basic-link>]</fo:inline> or <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html#DISABLE_SSE_SERVER)"><fo:inline>DISABLE_SSE_SERVER</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html#DISABLE_SSE_SERVER)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html#DISABLE_SSE_SERVER</fo:basic-link>]</fo:inline> property
                    respectively.
                </fo:block></fo:block></fo:block>
        </fo:block><fo:block id="d0e11872"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Implementing SSE support in a JAX-RS resource</fo:marker><fo:block font-size="17.28pt">15.6.1. Implementing SSE support in a JAX-RS resource</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e11875"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">15.6.1.1. Simple SSE resource method</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="example-simple-sse"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 15.7. Simple SSE resource method</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e11883">  1 ...
  2 import org.glassfish.jersey.media.sse.EventOutput;
  3 import org.glassfish.jersey.media.sse.OutboundEvent;
  4 import org.glassfish.jersey.media.sse.SseFeature;
  5 ...
  6 
  7 @Path("events")
  8 public static class SseResource {
  9 
 10     @GET
 11     @Produces(SseFeature.SERVER_SENT_EVENTS)
 12     public EventOutput getServerSentEvents() {
 13         final EventOutput eventOutput = new EventOutput();
 14         new Thread(new Runnable() {
 15             @Override
 16             public void run() {
 17                 try {
 18                     for (int i = 0; i &lt; 10; i++) {
 19                         // ... code that waits 1 second
 20                         final OutboundEvent.Builder eventBuilder = new OutboundEvent.Builder();
 21                         eventBuilder.name("message-to-client");
 22                         eventBuilder.data(String.class, "Hello world " + i + "!");
 23                         final OutboundEvent event = eventBuilder.build();
 24                         eventOutput.write(event);
 25                     }
 26                 } catch (IOException e) {
 27                     throw new RuntimeException("Error when writing the event.", e);
 28                 } finally {
 29                     try {
 30                         eventOutput.close();
 31                     } catch (IOException ioClose) {
 32                         throw new RuntimeException("Error when closing the event output.", ioClose);
 33                     }
 34                 }
 35             }
 36         }).start();
 37         return eventOutput;
 38     }
 39 }
 40                         </fo:block></fo:block></fo:block>

                    The code above defines the resource deployed on URI <fo:inline font-family="monospace">"/events"</fo:inline>. This resource has a single
                    <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/GET.html)"><fo:inline>@GET</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/GET.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/GET.html</fo:basic-link>]</fo:inline> resource method which returns as an entity <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventOutput.html)"><fo:inline>EventOutput</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventOutput.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventOutput.html</fo:basic-link>]</fo:inline> - an extension of generic
                    Jersey
                    <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ChunkedOutput.html)"><fo:inline>ChunkedOutput</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ChunkedOutput.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ChunkedOutput.html</fo:basic-link>]</fo:inline> API for output chunked message processing.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    In the<fo:basic-link internal-destination="example-simple-sse"><fo:inline>Example 15.7, “Simple SSE resource method”</fo:inline></fo:basic-link>, the resource method creates a new thread that sends a sequence of
                    10 events. There is a 1 second delay between two subsequent events as indicated in a comment. Each event is
                    represented by <fo:inline font-family="monospace">OutboundEvent</fo:inline> type and is built with a help of an outbound event
                    <fo:inline font-family="monospace">Builder</fo:inline>. The <fo:inline font-family="monospace">OutboundEvent</fo:inline> reflects the standardized format of SSE
                    messages
                    and contains properties that represent <fo:inline font-family="monospace">name</fo:inline> (for named
                    events), <fo:inline font-family="monospace">comment</fo:inline>, <fo:inline font-family="monospace">data</fo:inline> or <fo:inline font-family="monospace">id</fo:inline>. The code also sets the
                    event data media type using the <fo:inline font-family="monospace">mediaType(MediaType)</fo:inline> method on the
                    <fo:inline font-family="monospace">eventBuilder</fo:inline>. The media type, together with the data type set by the
                    <fo:inline font-family="monospace">data(Class, Object&gt;</fo:inline>
                    method (in our case <fo:inline font-family="monospace">String.class</fo:inline>), is used
                    for serialization of the event data. Note that the event data media type will not be written to any headers as
                    the response <fo:inline font-family="monospace">Content-type</fo:inline> header is already defined by the <fo:inline font-family="monospace">@Produces</fo:inline> and set to
                    <fo:inline font-family="monospace">"text/event-stream"</fo:inline>
                    using constant from the <fo:inline font-family="monospace">SseFeature</fo:inline>.
                    The event media type is used for serialization of event <fo:inline font-family="monospace">data</fo:inline>. Event data media type and
                    Java
                    type are used to select the proper <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html)"><fo:inline>MessageBodyWriter&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html</fo:basic-link>]</fo:inline> for event data serialization and are passed
                    to the selected writer that serializes the event <fo:inline font-family="monospace">data</fo:inline> content. In our case the string
                    <fo:inline font-family="monospace">"Hello world " + i + "!"</fo:inline>
                    is serialized as <fo:inline font-family="monospace">"text/plain"</fo:inline>. In event
                    <fo:inline font-family="monospace">data</fo:inline>
                    you can send any Java entity and associate it with any media type that you would be able
                    to serialize with an available <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline>. Typically, you may want to send e.g. JSON
                    data,
                    so you would fill the <fo:inline font-family="monospace">data</fo:inline> with a JAXB annotated bean instance and define media type to
                    JSON.
                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e11971"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            If the event media type is not set explicitly, the <fo:inline font-family="monospace">"text/plain"</fo:inline> media type is used
                            by default.
                        </fo:block></fo:block></fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Once an outbound event is ready, it can be written to the <fo:inline font-family="monospace">eventOutput</fo:inline>. At that point the
                    event
                    is serialized by internal <fo:inline font-family="monospace">OutboundEventWriter</fo:inline> which uses an appropriate
                    <fo:inline font-family="monospace">MessageBodyWriter&lt;T&gt;</fo:inline> to serialize the <fo:inline font-family="monospace">"Hello world " + i + "!"</fo:inline> string. You can
                    send as many messages as you like. At the end of the thread execution the response is closed which also closes
                    the connection to the client. After that, no more messages can be sent to the client on this connection. If
                    the
                    client would like to receive more messages, it would have to send a new request to the server to initiate a
                    new SSE streaming connection.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    A client connecting to our SSE-enabled resource will receive the exact same output as in the corresponding
                    example
                    in the JAX-RS implementation example.

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e11994">event: message-to-client
data: Hello world 0!

event: message-to-client
data: Hello world 1!

...
                    </fo:block>
                </fo:block></fo:block><fo:block id="d0e11997"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">15.6.1.2. Broadcasting</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Jersey SSE server API defines <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseBroadcaster.html)"><fo:inline>SseBroadcaster</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseBroadcaster.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseBroadcaster.html</fo:basic-link>]</fo:inline> which allows to broadcast individual events to
                    multiple
                    clients. A simple broadcasting implementation is shown in the following example:

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e12005"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 15.8. Broadcasting SSE messages</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e12008">  1 ...
  2 import org.glassfish.jersey.media.sse.SseBroadcaster;
  3 ...
  4 
  5 @Singleton
  6 @Path("broadcast")
  7 public static class BroadcasterResource {
  8 
  9     private SseBroadcaster broadcaster = new SseBroadcaster();
 10 
 11     @POST
 12     @Produces(MediaType.TEXT_PLAIN)
 13     @Consumes(MediaType.TEXT_PLAIN)
 14     public String broadcastMessage(String message) {
 15         OutboundEvent.Builder eventBuilder = new OutboundEvent.Builder();
 16         OutboundEvent event = eventBuilder.name("message")
 17             .mediaType(MediaType.TEXT_PLAIN_TYPE)
 18             .data(String.class, message)
 19             .build();
 20 
 21         broadcaster.broadcast(event);
 22         return "Message '" + message + "' has been broadcast.";
 23     }
 24 
 25     @GET
 26     @Produces(SseFeature.SERVER_SENT_EVENTS)
 27     public EventOutput listenToBroadcast() {
 28         final EventOutput eventOutput = new EventOutput();
 29         this.broadcaster.add(eventOutput);
 30         return eventOutput;
 31     }
 32 }
 33                         </fo:block></fo:block></fo:block>
                    The example is similar to its relevant JAX-RS counterpart. The <fo:inline font-family="monospace">listenToBroadcast()</fo:inline> resource
                    method creates a new <fo:inline font-family="monospace">EventOutput</fo:inline> representing the connection to the requesting client
                    and registers this <fo:inline font-family="monospace">eventOutput</fo:inline> instance with the singleton <fo:inline font-family="monospace">broadcaster</fo:inline>,
                    using its <fo:inline font-family="monospace">add(EventOutput)</fo:inline> method. The method then returns the
                    <fo:inline font-family="monospace">eventOutput</fo:inline>
                    which causes Jersey to bind the <fo:inline font-family="monospace">eventOutput</fo:inline> instance with the requesting client and send
                    the
                    response HTTP headers to the client. The client connection remains open and the client is now waiting ready to
                    receive new SSE events. All the events are written to the <fo:inline font-family="monospace">eventOutput</fo:inline> by
                    <fo:inline font-family="monospace">broadcaster</fo:inline>
                    later on.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    When a client wants to broadcast new message to all the clients listening on their SSE connections,
                    it sends a <fo:inline font-family="monospace">POST</fo:inline> request to <fo:inline font-family="monospace">BroadcasterResource</fo:inline> resource with the message
                    content.
                    The method <fo:inline font-family="monospace">broadcastMessage(String)</fo:inline> is invoked on
                    <fo:inline font-family="monospace">BroadcasterResource</fo:inline>
                    resource with the message content as an input parameter. A new SSE outbound event is built in the standard way
                    and passed to the broadcaster. The broadcaster internally invokes <fo:inline font-family="monospace">write(OutboundEvent)</fo:inline> on
                    all
                    registered <fo:inline font-family="monospace">EventOutput</fo:inline>s. After that the method just return a standard text response
                    to the <fo:inline font-family="monospace">POST</fo:inline>ing client to inform the client that the message was successfully broadcast.
                </fo:block></fo:block></fo:block><fo:block id="d0e12061"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Consuming SSE events with Jersey clients</fo:marker><fo:block font-size="17.28pt">15.6.2. Consuming SSE events with Jersey clients</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                On the client side, Jersey exposes APIs that support receiving and processing SSE events using two programming
                models:

                <fo:table space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e12066" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>Pull model - pulling events from a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventInput.html)"><fo:inline>EventInput</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventInput.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventInput.html</fo:basic-link>]</fo:inline>, or
                    </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>Push model - listening for asynchronous notifications of <fo:inline font-family="monospace">EventSource</fo:inline>
                    </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>
                The push model is similar to what is implemented in the JAX-RS SSE API. The pull model does not have a direct
                counterpart in the JAX-RS API and has to be implemented by the developer, if required.
            </fo:block><fo:block id="d0e12078"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">15.6.2.1. Reading SSE events with <fo:inline font-family="monospace">EventInput</fo:inline>
                </fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The events can be read on the client side from a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventInput.html)"><fo:inline>EventInput</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventInput.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventInput.html</fo:basic-link>]</fo:inline>. See the following code:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e12089">  1 Client client = ClientBuilder.newBuilder()
  2         .register(SseFeature.class).build();
  3 WebTarget target = client.target("http://localhost:9998/events");
  4 
  5 EventInput eventInput = target.request().get(EventInput.class);
  6 while (!eventInput.isClosed()) {
  7     final InboundEvent inboundEvent = eventInput.read();
  8     if (inboundEvent == null) {
  9         // connection has been closed
 10         break;
 11     }
 12     System.out.println(inboundEvent.getName() + "; " + inboundEvent.readData(String.class));
 13 }
 14                     </fo:block>

                    In this example, a client connects to the server where the <fo:inline font-family="monospace">SseResource</fo:inline> from the
                    <fo:basic-link internal-destination="example-simple-sse"><fo:inline>Example 15.7, “Simple SSE resource method”</fo:inline></fo:basic-link>
                    is deployed. At first, a new JAX-RS/Jersey
                    <fo:inline font-family="monospace">client</fo:inline>
                    instance is created with a <fo:inline font-family="monospace">SseFeature</fo:inline> registered. Then a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html)"><fo:inline>WebTarget</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html</fo:basic-link>]</fo:inline> instance is
                    retrieved from the <fo:inline font-family="monospace">client</fo:inline> and is used to invoke a HTTP request. The returned response
                    entity
                    is directly read as a <fo:inline font-family="monospace">EventInput</fo:inline> Java type, which is an extension of Jersey
                    <fo:inline font-family="monospace">ChunkedInput</fo:inline> that provides generic support for consuming chunked message payloads. The
                    code in the example then process starts a loop to process the inbound SSE events read from the
                    <fo:inline font-family="monospace">eventInput</fo:inline>
                    response stream. Each chunk read from the input is a <fo:inline font-family="monospace">InboundEvent</fo:inline>.
                    The method <fo:inline font-family="monospace">InboundEvent.readData(Class)</fo:inline> provides a way for the client to indicate what Java
                    type
                    should be used for the event data de-serialization. In our example, individual events are de-serialized as
                    <fo:inline font-family="monospace">String</fo:inline>
                    Java type instances. This method internally finds and executes a proper
                    <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)"><fo:inline>MessageBodyReader&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html</fo:basic-link>]</fo:inline> which is the used to do the actual de-serialization. This is similar to reading
                    an
                    entity from the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html)"><fo:inline>Response</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html</fo:basic-link>]</fo:inline> by <fo:inline font-family="monospace">readEntity(Class)</fo:inline>. The method
                    <fo:inline font-family="monospace">readData</fo:inline>
                    can also throw a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ProcessingException.html)"><fo:inline>ProcessingException</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ProcessingException.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ProcessingException.html</fo:basic-link>]</fo:inline>.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The <fo:inline font-family="monospace">null</fo:inline> check on <fo:inline font-family="monospace">inboundEvent</fo:inline> is necessary to make sure that the chunk was properly
                    read and connection has not been closed by the server. Once the connection is closed, the loop terminates and
                    the program completes execution. The client code produces the following console output:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e12150">message-to-client; Hello world 0!
message-to-client; Hello world 1!
message-to-client; Hello world 2!
message-to-client; Hello world 3!
message-to-client; Hello world 4!
message-to-client; Hello world 5!
message-to-client; Hello world 6!
message-to-client; Hello world 7!
message-to-client; Hello world 8!
message-to-client; Hello world 9!
                    </fo:block>
                </fo:block></fo:block><fo:block id="d0e12153"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">15.6.2.2. Asynchronous SSE processing with <fo:inline font-family="monospace">EventSource</fo:inline>
                </fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The main Jersey-specific SSE client API component used to read SSE events asynchronously is
                    <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventSource.html)"><fo:inline>EventSource</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventSource.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventSource.html</fo:basic-link>]</fo:inline>. The usage of the <fo:inline font-family="monospace">EventSource</fo:inline> is shown on the following example.
                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="sse.ex.client.eventListener"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 15.9. Registering <fo:inline font-family="monospace">EventListener</fo:inline> with <fo:inline font-family="monospace">EventSource</fo:inline>
                        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e12176">  1 Client client = ClientBuilder.newBuilder()
  2         .register(SseFeature.class).build();
  3 WebTarget target = client.target("http://example.com/events");
  4 EventSource eventSource = EventSource.target(target).build();
  5 EventListener listener = new EventListener() {
  6     @Override
  7     public void onEvent(InboundEvent inboundEvent) {
  8         System.out.println(inboundEvent.getName() + "; " + inboundEvent.readData(String.class));
  9     }
 10 };
 11 eventSource.register(listener, "message-to-client");
 12 eventSource.open();
 13 ...
 14 eventSource.close();
 15                         </fo:block></fo:block></fo:block>

                    In this example, the client code again connects to the server where the <fo:inline font-family="monospace">SseResource</fo:inline> from
                    the
                    <fo:basic-link internal-destination="example-simple-sse"><fo:inline>Example 15.7, “Simple SSE resource method”</fo:inline></fo:basic-link>
                    is deployed. The <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)"><fo:inline>Client</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html</fo:basic-link>]</fo:inline> instance
                    is again created and initialized with <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html)"><fo:inline>SseFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html</fo:basic-link>]</fo:inline>. Then the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html)"><fo:inline>WebTarget</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html</fo:basic-link>]</fo:inline> is built.
                    In this case a request to the web target is not made directly in the code, instead, the web target instance
                    is used to initialize a new <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventSource.Builder.html)"><fo:inline>EventSource.Builder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventSource.Builder.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventSource.Builder.html</fo:basic-link>]</fo:inline> instance that is used to build a new
                    <fo:inline font-family="monospace">EventSource</fo:inline>. The choice of <fo:inline font-family="monospace">build()</fo:inline> method is important, as it tells
                    the <fo:inline font-family="monospace">EventSource.Builder</fo:inline> to create a new <fo:inline font-family="monospace">EventSource</fo:inline> that is not
                    automatically
                    connected to the <fo:inline font-family="monospace">target</fo:inline>. The connection is established only later by manually invoking
                    the <fo:inline font-family="monospace">eventSource.open()</fo:inline> method. A custom <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventListener.html)"><fo:inline>EventListener</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventListener.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventListener.html</fo:basic-link>]</fo:inline>
                    implementation is used to listen to and process incoming SSE events. The method readData(Class) says that the
                    event data should be de-serialized from a received <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/InboundEvent.html)"><fo:inline>InboundEvent</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/InboundEvent.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/InboundEvent.html</fo:basic-link>]</fo:inline> instance into a
                    <fo:inline font-family="monospace">String</fo:inline>
                    Java type. This method call internally executes <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)"><fo:inline>MessageBodyReader&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html</fo:basic-link>]</fo:inline> which
                    de-serializes the event data. This is similar to reading an entity from the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html)"><fo:inline>Response</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html</fo:basic-link>]</fo:inline> by
                    <fo:inline font-family="monospace">readEntity(Class)</fo:inline>. The method <fo:inline font-family="monospace">readData</fo:inline> can throw a
                    <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ProcessingException.html)"><fo:inline>ProcessingException</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ProcessingException.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ProcessingException.html</fo:basic-link>]</fo:inline>.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The custom event source listener is registered in the event source via
                    <fo:inline font-family="monospace">EventSource</fo:inline><fo:inline font-family="monospace">.register(EventListener, String)</fo:inline>
                    method. The next method
                    arguments define the names of the events to receive and can be omitted. If names are defined, the listener
                    will be associated with the named events and will only invoked for events with a name from the set of defined
                    event names. It will not be invoked for events with any other name or for events without a name.

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e12245"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Important</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            It is a common mistake to think that unnamed events will be processed by listeners that are registered
                            to process events from a particular name set. That is NOT the case! Unnamed events are only processed
                            by listeners that are not name-bound. The same limitation applied to HTML5 Javascript SSE Client API
                            supported by modern browsers.
                        </fo:block></fo:block></fo:block>

                    After a connection to the server is opened by calling the <fo:inline font-family="monospace">open()</fo:inline> method on the event
                    source,
                    the <fo:inline font-family="monospace">eventSource</fo:inline> starts listening to events. When an event named
                    <fo:inline font-family="monospace">"message-to-client"</fo:inline>
                    comes, the listener will be executed by the event source. If any other
                    event comes (with a name different from <fo:inline font-family="monospace">"message-to-client"</fo:inline>), the registered listener is
                    not
                    invoked. Once the client is done with processing and does not want to receive events anymore, it closes the
                    connection by calling the <fo:inline font-family="monospace">close()</fo:inline> method on the event source.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The listener from the example above will print the following output:
                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e12266">message-to-client; Hello world 0!
message-to-client; Hello world 1!
message-to-client; Hello world 2!
message-to-client; Hello world 3!
message-to-client; Hello world 4!
message-to-client; Hello world 5!
message-to-client; Hello world 6!
message-to-client; Hello world 7!
message-to-client; Hello world 8!
message-to-client; Hello world 9!
                    </fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    When browsing through the Jersey SSE API documentation, you may have noticed that the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventSource.html)"><fo:inline>EventSource</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventSource.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventSource.html</fo:basic-link>]</fo:inline>
                    implements <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventListener.html)"><fo:inline>EventListener</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventListener.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventListener.html</fo:basic-link>]</fo:inline> and provides an empty implementation for the
                    <fo:inline font-family="monospace">onEvent(InboundEvent inboundEvent)</fo:inline>
                    listener method. This adds more flexibility to the
                    Jersey client-side SSE API. Instead of defining and registering a separate event listener, in simple scenarios
                    you can also choose to derive directly from the <fo:inline font-family="monospace">EventSource</fo:inline> and override the empty listener
                    method to handle the incoming events. This programming model is shown in the following example:

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e12283"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 15.10. Overriding <fo:inline font-family="monospace">EventSource.onEvent(InboundEvent)</fo:inline> method
                        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e12289">  1 Client client = ClientBuilder.newBuilder()
  2         .register(SseFeature.class).build();
  3 WebTarget target = client.target("http://example.com/events");
  4 EventSource eventSource = new EventSource(target) {
  5     @Override
  6     public void onEvent(InboundEvent inboundEvent) {
  7         if ("message-to-client".equals(inboundEvent.getName())) {
  8             System.out.println(inboundEvent.getName() + "; " + inboundEvent.readData(String.class));
  9         }
 10     }
 11 };
 12 ...
 13 eventSource.close();
 14                         </fo:block></fo:block></fo:block>

                    The code above is very similar to the code in<fo:basic-link internal-destination="sse.ex.client.eventListener"><fo:inline>Example 15.9, “Registering <fo:inline font-family="monospace">EventListener</fo:inline> with <fo:inline font-family="monospace">EventSource</fo:inline>
                        ”</fo:inline></fo:basic-link>. In this example
                    however, the <fo:inline font-family="monospace">EventSource</fo:inline> is constructed directly using a single-parameter constructor.
                    This way, the connection to the SSE endpoint is by default automatically opened at the event source
                    creation. The implementation of the <fo:inline font-family="monospace">EventListener</fo:inline> has been moved into the overridden
                    <fo:inline font-family="monospace">EventSource.onEvent(...)</fo:inline>
                    method. However, this time, the listener method will be executed for
                    all events - unnamed as well as with any <fo:inline font-family="monospace">name</fo:inline>. Therefore the code checks the name whether
                    it is
                    an event with the name "message-to-client" that we want to handle. Note that you can still register
                    additional <fo:inline font-family="monospace">EventListener</fo:inline>s later on. The overridden method on the event source allows you to
                    handle messages even when no additional listeners are registered yet.
                </fo:block><fo:block id="d0e12309"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="12pt">15.6.2.2.1. <fo:inline font-family="monospace">EventSource</fo:inline> reconnect support
                    </fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        Reconnect support in Jersey-specific <fo:inline font-family="monospace">EventSource</fo:inline> works the same way as in the
                        implementation of the JAX-RS <fo:inline>SseEventSource</fo:inline>.
                    </fo:block></fo:block></fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Security</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Security</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="security"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 16. Security</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e12326"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Securing server</fo:marker><fo:block font-size="20.735999999999997pt">16.1. Securing server</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e12329"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">SecurityContext</fo:marker><fo:block font-size="17.28pt">16.1.1. SecurityContext</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Security information of a request is available by injecting a JAX-RS <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/SecurityContext.html)"><fo:inline>SecurityContext</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/SecurityContext.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/SecurityContext.html</fo:basic-link>]</fo:inline> instance
                using <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html)"><fo:inline>@Context</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html</fo:basic-link>]</fo:inline>
                annotation. The injected security context instance provides the equivalent of the functionality available on
                <fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServletRequest.html)"><fo:inline>HttpServletRequest</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServletRequest.html)">http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServletRequest.html</fo:basic-link>]</fo:inline> API.
                The injected security context depends on the actual Jersey application deployment. For example, for a
                Jersey application deployed in a Servlet container, the Jersey <fo:inline font-family="monospace">SecurityContext</fo:inline> will
                encapsulate information from a security context retrieved from the Servlet request.
                In case of a Jersey application deployed on a Grizzly server,
                the <fo:inline font-family="monospace">SecurityContext</fo:inline> will return information retrieved from the Grizzly request.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:inline font-family="monospace">SecurityContext</fo:inline> can be used in conjunction with sub-resource locators to return different
                resources based on the specific roles a user principal is included in. For example, a sub-resource locator could
                return a different resource if a user is a preferred customer:

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e12354"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 16.1. Using <fo:inline font-family="monospace">SecurityContext</fo:inline> for a Resource Selection</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e12360">  1 @Path("basket")
  2 public ShoppingBasketResource get(@Context SecurityContext sc) {
  3     if (sc.isUserInRole("PreferredCustomer") {
  4         return new PreferredCustomerShoppingBasketResource();
  5     } else {
  6         return new ShoppingBasketResource();
  7     }
  8 }</fo:block></fo:block></fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:inline font-family="monospace">SecurityContext</fo:inline> is inherently request-scoped, yet can be also injected into fields of singleton
                resources and JAX-RS providers. In such case the proxy of the request-scoped <fo:inline font-family="monospace">SecurityContext</fo:inline>
                will be injected.

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e12371"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 16.2. Injecting <fo:inline font-family="monospace">SecurityContext</fo:inline> into a singleton resource</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e12377">  1 @Path("resource")
  2 @Singleton
  3 public static class MyResource {
  4     // Jersey will inject proxy of Security Context
  5     @Context
  6     SecurityContext securityContext;
  7 
  8     @GET
  9     public String getUserPrincipal() {
 10         return securityContext.getUserPrincipal().getName();
 11     }
 12 }</fo:block></fo:block></fo:block>
            </fo:block><fo:block id="d0e12380"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">16.1.1.1. Initializing Security Context with Servlets</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    As described above, the <fo:inline font-family="monospace">SecurityContext</fo:inline> by default (if not overwritten by
                    a request filter) only exposes security information from the underlying container.
                    In the case you deploy a Jersey application in a Servlet container, you need to configure the
                    Servlet container security aspects (<fo:inline font-family="monospace">&lt;security-constraint&gt;</fo:inline>,
                    <fo:inline font-family="monospace">&lt;auth-constraint&gt;</fo:inline> and user to roles mappings)
                    in order to be able to secure requests via calls to to the JAX-RS <fo:inline font-family="monospace">SecurityContext</fo:inline>.
                </fo:block></fo:block><fo:block id="d0e12397"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">16.1.1.2. Using Security Context in Container Request Filters</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The <fo:inline font-family="monospace">SecurityContext</fo:inline> can be directly retrieved from <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerRequestContext.html)"><fo:inline>ContainerRequestContext</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerRequestContext.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerRequestContext.html</fo:basic-link>]</fo:inline> via
                    <fo:inline font-family="monospace">getSecurityContext()</fo:inline> method. You can also replace the default
                    <fo:inline font-family="monospace">SecurityContext</fo:inline> in a request context with a custom one using the
                    <fo:inline font-family="monospace">setSecurityContext(SecurityContext)</fo:inline> method. If you set a custom
                    <fo:inline font-family="monospace">SecurityContext</fo:inline> instance in your <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerRequestFilter.html)"><fo:inline>ContainerRequestFilter</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerRequestFilter.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/container/ContainerRequestFilter.html</fo:basic-link>]</fo:inline>,
                    this security context instance will be used for injection into JAX-RS resource class fields.
                    This way you can implement a custom authentication filter that may setup your own
                    <fo:inline font-family="monospace">SecurityContext</fo:inline> to be used. To ensure the early execution of your custom
                    authentication request filter, set the filter priority to <fo:inline font-family="monospace">AUTHENTICATION</fo:inline>
                    using constants from <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Priorities.html)"><fo:inline>Priorities</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Priorities.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Priorities.html</fo:basic-link>]</fo:inline>. An early execution of you authentication filter will ensure that
                    all other filters, resources, resource methods and sub-resource locators will execute with your custom
                    <fo:inline font-family="monospace">SecurityContext</fo:inline> instance.
                </fo:block></fo:block></fo:block><fo:block id="d0e12435"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Authorization - securing resources</fo:marker><fo:block font-size="17.28pt">16.1.2. Authorization - securing resources</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e12438"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">16.1.2.1. Security resources with <fo:inline font-family="monospace">web.xml</fo:inline></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    In cases where a Jersey application is deployed in a Servlet container you can rely only on
                    the standard Java EE Web application security mechanisms offered by the Servlet container and
                    configurable via application's <fo:inline font-family="monospace">web.xml</fo:inline> descriptor.
                    You need to define the <fo:inline font-family="monospace">&lt;security-constraint&gt;</fo:inline> elements in the
                    <fo:inline font-family="monospace">web.xml</fo:inline> and assign roles which are able to access these resources. You can also
                    define HTTP methods that are allowed to be executed. See the following example.

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e12454"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 16.3. Securing resources using <fo:inline font-family="monospace">web.xml</fo:inline>
                        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e12460">  1 &lt;security-constraint&gt;
  2     &lt;web-resource-collection&gt;
  3         &lt;url-pattern&gt;/rest/admin/*&lt;/url-pattern&gt;
  4     &lt;/web-resource-collection&gt;
  5     &lt;auth-constraint&gt;
  6         &lt;role-name&gt;admin&lt;/role-name&gt;
  7     &lt;/auth-constraint&gt;
  8 &lt;/security-constraint&gt;
  9 &lt;security-constraint&gt;
 10     &lt;web-resource-collection&gt;
 11         &lt;url-pattern&gt;/rest/orders/*&lt;/url-pattern&gt;
 12     &lt;/web-resource-collection&gt;
 13     &lt;auth-constraint&gt;
 14         &lt;role-name&gt;customer&lt;/role-name&gt;
 15     &lt;/auth-constraint&gt;
 16 &lt;/security-constraint&gt;
 17 &lt;login-config&gt;
 18     &lt;auth-method&gt;BASIC&lt;/auth-method&gt;
 19     &lt;realm-name&gt;my-default-realm&lt;/realm-name&gt;
 20 &lt;/login-config&gt;</fo:block></fo:block></fo:block>

                    The example secures two kinds of URI namespaces using the HTTP Basic Authentication.
                    <fo:inline font-family="monospace">rest/admin/*</fo:inline> will be accessible only for user group "admin" and
                    <fo:inline font-family="monospace">rest/orders/*</fo:inline> will be accessible for "customer" user group. This security configuration
                    does not use JAX-RS or Jersey features at all as it is enforced by the Servlet container even before
                    a request reaches the Jersey application. Keeping these security constrains up to date with your
                    JAX-RS application might not be easy as whenever you change the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)"><fo:inline>@Path</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Path.html</fo:basic-link>]</fo:inline> annotations on your resource
                    classes you may need to update also the <fo:inline font-family="monospace">web.xml</fo:inline>
                    security configurations to reflect the changed JAX-RS resource paths. Therefore Jersey offers a
                    <fo:basic-link internal-destination="annotation-based-security"><fo:inline>more flexible solution</fo:inline></fo:basic-link>
                    based on placing standard Java EE security annotations directly on JAX-RS resource classes and methods.
                </fo:block></fo:block><fo:block id="annotation-based-security"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">16.1.2.2. Securing JAX-RS resources with standard <fo:inline font-family="monospace">javax.annotation.security</fo:inline> annotations</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    With Jersey you can define the access to resources based on the user group using annotations. You
                    can, for example, define that only a user group "admin" can execute specific resource method. To do that you
                    firstly need to register <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/filter/RolesAllowedDynamicFeature.html)"><fo:inline>RolesAllowedDynamicFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/filter/RolesAllowedDynamicFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/filter/RolesAllowedDynamicFeature.html</fo:basic-link>]</fo:inline> as a provider. The following example
                    shows how to register the feature if your deployment is based on a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)"><fo:inline>ResourceConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html</fo:basic-link>]</fo:inline>.

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e12492"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 16.4. Registering RolesAllowedDynamicFeature using ResourceConfig</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e12495">  1 final ResourceConfig resourceConfig = new ResourceConfig(MyResource.class);
  2 resourceConfig.register(RolesAllowedDynamicFeature.class);
  3                         </fo:block></fo:block></fo:block>

                    Alternatively, typically when deploying your application to a Servlet container, you can implement your JAX-RS
                    <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)"><fo:inline>Application</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html</fo:basic-link>]</fo:inline> subclass by extending from the Jersey <fo:inline font-family="monospace">ResourceConfig</fo:inline> and
                    registering the <fo:inline font-family="monospace">RolesAllowedDynamicFeature</fo:inline> in the constructor:

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e12507"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 16.5. Registering RolesAllowedDynamicFeature by extending ResourceConfig</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e12510">  1 public class MyApplication extends ResourceConfig {
  2     public MyApplication() {
  3         super(MyResource.class);
  4         register(RolesAllowedDynamicFeature.class);
  5     }
  6 }</fo:block></fo:block></fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Once the feature is registered, you can use annotations from package
                    <fo:inline font-family="monospace">javax.annotation.security</fo:inline> defined by JSR-250. See the following example.

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e12518"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 16.6. Applying <fo:inline font-family="monospace">javax.annotation.security</fo:inline> to JAX-RS resource methods.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e12524">  1 @Path("/")
  2 @PermitAll
  3 public class Resource {
  4     @RolesAllowed("user")
  5     @GET
  6     public String get() { return "GET"; }
  7 
  8     @RolesAllowed("admin")
  9     @POST
 10     public String post(String content) { return content; }
 11 
 12     @Path("sub")
 13     public SubResource getSubResource() {
 14         return new SubResource();
 15     }
 16 }</fo:block></fo:block></fo:block>

                    The resource class <fo:inline font-family="monospace">Resource</fo:inline> defined in the example is annotated with a
                    <fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/annotation/security/PermitAll.html)"><fo:inline>@PermitAll</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/annotation/security/PermitAll.html)">http://docs.oracle.com/javaee/7/api/javax/annotation/security/PermitAll.html</fo:basic-link>]</fo:inline> annotation. This means that all methods in the class which do not
                    override this
                    annotation will be permitted for all user groups (no restrictions are defined). In our example, the
                    annotation will only apply to the <fo:inline font-family="monospace">getSubResource()</fo:inline> method as it is the only method
                    that does not override the annotation by defining custom role-based security settings using the
                    <fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/annotation/security/RolesAllowed.html)"><fo:inline>@RolesAllowed</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/annotation/security/RolesAllowed.html)">http://docs.oracle.com/javaee/7/api/javax/annotation/security/RolesAllowed.html</fo:basic-link>]</fo:inline> annotation.
                    <fo:inline font-family="monospace">@RolesAllowed</fo:inline> annotations present on the other methods define a role or a set of
                    roles that are allowed to execute a particular method.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    These Java EE security annotations are processed internally in the request filter registered using
                    the Jersey <fo:inline font-family="monospace">RolesAllowedDynamicFeature</fo:inline>. The roles defined in the annotations are
                    tested against current roles set in the <fo:inline font-family="monospace">SecurityContext</fo:inline> using
                    the <fo:inline font-family="monospace">SecurityContext</fo:inline><fo:inline font-family="monospace">.isUserInRole(String role)</fo:inline> method. In case the caller
                    is not in the role specified by the annotation, the HTTP <fo:inline font-family="monospace">403 (Forbidden)</fo:inline>
                    error response is returned.
                </fo:block></fo:block></fo:block></fo:block><fo:block id="d0e12558"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Client Security</fo:marker><fo:block font-size="20.735999999999997pt">16.2. Client Security</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            For details about client security please see the <fo:basic-link internal-destination="client"><fo:inline>Client chapter</fo:inline></fo:basic-link>. Jersey
            client allows to define parameters of SSL communication using <fo:inline font-family="monospace">HTTPS</fo:inline> protocol.
            You can also use jersey built-in authentication filters which perform <fo:inline font-style="italic">HTTP Basic Authentication</fo:inline>
            or <fo:inline font-style="italic">HTTP Digest Authentication</fo:inline>. See the client chapter for more details.
        </fo:block></fo:block><fo:block id="d0e12575"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">OAuth Support</fo:marker><fo:block font-size="20.735999999999997pt">16.3. OAuth Support</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            OAuth is a specification that defines secure authentication model on behalf of another user.
            Two versions of OAuth exists at the moment - <fo:inline font-style="italic">OAuth 1</fo:inline> defined by <fo:basic-link external-destination="url(http://tools.ietf.org/html/rfc5849)"><fo:inline>OAuth 1.0 specification</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://tools.ietf.org/html/rfc5849)">http://tools.ietf.org/html/rfc5849</fo:basic-link>]</fo:inline> and
            <fo:inline font-style="italic">OAuth 2</fo:inline> defined by <fo:basic-link external-destination="url(http://tools.ietf.org/html/rfc6749)"><fo:inline>OAuth 2.0 specification</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://tools.ietf.org/html/rfc6749)">http://tools.ietf.org/html/rfc6749</fo:basic-link>]</fo:inline>.
            OAuth 2 is the latest version and it is not backward compatible with
            OAuth 1 specification. OAuth in general is widely used in popular social Web sites in order to grant access
            to a user account and associated resources for a third party consumer (application). The consumer then usually
            uses RESTful Web Services to access the user data.
            The following example describes a use case of the OAuth (similar for OAuth 1 and OAuth 2). The example is simple
            and probably obvious for many developers but introduces terms that are used in this
            documentation as well as in Jersey OAuth API documentation.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Three parties act in an OAuth scenario.
        </fo:block><fo:block id="d0e12594" text-align="center"><fo:external-graphic src="url(images/oauth-parties.png)" width="80%" height="auto" content-width="scale-to-fit" content-height="scale-to-fit" content-type="content-type:image/png" text-align="center"/></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The first party represents a user, in our case Adam,
            who is called in the OAuth terminology a <fo:inline font-style="italic">Resource Owner</fo:inline>. Adam has an account on
            Twitter. Twitter represents the second party. This party is called a
            <fo:inline font-style="italic">Service Provider</fo:inline>. Twitter offers a web interface
            that Adam uses to create new tweets, read tweets of others etc. Now, Adam uses our new web site,
            HelloWorldWeb, which is a very simple web site that says <fo:inline font-family="monospace">Hello World</fo:inline> but it additionally
            displays the last tweet of the logged in user.
            To do so, our web site needs to have access to the Twitter account of Adam. Our web site is a 3rd party
            application that wants to connect to Twitter and get Adam's tweets. In OAuth, such party is called
            <fo:inline font-style="italic">Consumer</fo:inline>.
            Our Consumer would like to use Twitter's RESTful APIs to get some data associated with Adam's Twitter account.
            In order to solve this situation Adam could directly give his Twitter password to the HelloWorldWeb.
            This would however be rather unsafe, especially if we do not know much about the authors of the application.
            If Adam would give his password to HelloWorldWeb, he would have to deal with the associated security risks.
            First of all, Adam would have to fully trust HelloWorldWeb
            that it will not misuse the full access to his Twitter account. Next, if Adam would change his password,
            he would need to remember to give the new password also to the HelloWorldWeb application.
            And at last, if Adam would like to revoke the HelloWorldWeb's access to his Twitter account,
            he would need to change his password again. The OAuth protocol has been devised to address all these challenges.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            With OAuth, a resource owner (Adam) grants an access to a consumer (HelloWorldWeb) without giving it
            his password. This access grant is achieved by a procedure called
            <fo:inline font-style="italic">authorization flow</fo:inline>. Authorization flow is out of the scope of this
            documentation and its description can be found in the OAuth specification linked above.
            The result of the authorization flow is an <fo:inline font-style="italic">Access Token</fo:inline> which is later
            used by the consumer to authenticate against the service provider.
            While this brief description applies to both OAuth 1 and 2, note that there are some differences in details
            between these two specifications.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Jersey OAuth is currently supported for the following use cases and OAuth versions:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e12621"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e12622"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        OAuth 1: Client (consumer) and server (service provider)
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e12625"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        OAuth 2: Client (consumer)
                    </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

            With client and server support there are two supported scenarios:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e12629"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e12630"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        Authorization flow
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e12633"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        Authentication with Access Token (support for authenticated requests)
                    </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
        </fo:block><fo:block id="d0e12637"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">OAuth 1</fo:marker><fo:block font-size="17.28pt">16.3.1. OAuth 1</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                OAuth 1 protocol is based on message signatures that are calculated using specific
                signature methods. Signatures are quite complex and therefore are implemented in a separate
                module. The OAuth 1 Jersey modules are (<fo:inline font-family="monospace">groupId:artifactId:description</fo:inline>):
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e12645"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e12646"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">org.glassfish.jersey.security:oauth1-client</fo:inline>: provides client
                            OAuth 1 support for authorization flow and authentication
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e12652"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">org.glassfish.jersey.security:oauth1-server</fo:inline>: provides server
                            OAuth 1 support for authorization flow, SPI for token management including authentication
                            filter.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e12658"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">org.glassfish.jersey.security:oauth1-signature</fo:inline>
                            : provides support for OAuth1 request signatures. This module is a dependency of previous two
                            modules and as such it will be implicitly included in your maven project.
                            The module can be used as a standalone module but this will not be needed in most of the use cases.
                            You would do that if you wanted to implement your own OAuth support and would not want to deal with
                            implementing the complex signature algorithms.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block><fo:block id="d0e12665"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">16.3.1.1. Server</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    To add support for OAuth into your server-side application, add the following dependency to your<fo:inline font-family="monospace">
                    pom.xml</fo:inline>:
                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e12673">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.security&lt;/groupId&gt;
    &lt;artifactId&gt;oauth1-server&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>
                    Again, there is no need to add a direct dependency to the signature module, it will be transitively included.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Let's now briefly go over the most important server Jersey OAuth APIs and SPIs:
                    <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e12678"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e12679"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/oauth1/OAuth1ServerFeature.html)"><fo:inline>OAuth1ServerFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/oauth1/OAuth1ServerFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/oauth1/OAuth1ServerFeature.html</fo:basic-link>]</fo:inline>: The feature which enables the
                                OAuth 1 support on the server and registers <fo:inline font-family="monospace">OAuth1Provider</fo:inline>
                                explained in the following point.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e12687"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/oauth1/OAuth1Provider.html)"><fo:inline>OAuth1Provider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/oauth1/OAuth1Provider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/oauth1/OAuth1Provider.html</fo:basic-link>]</fo:inline>: Implementation of this SPI must be
                                registered to the server runtime as a standard provider. The implementation will be used
                                to create request and access token, get consumer by consumer key, etc. You can either
                                implement your provider or use the default implementation provided by Jersey by
                                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/oauth1/DefaultOAuth1Provider.html)"><fo:inline>DefaultOAuth1Provider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/oauth1/DefaultOAuth1Provider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/oauth1/DefaultOAuth1Provider.html</fo:basic-link>]</fo:inline>.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e12696"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/oauth1/OAuth1ServerProperties.html)"><fo:inline>OAuth1ServerProperties</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/oauth1/OAuth1ServerProperties.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/oauth1/OAuth1ServerProperties.html</fo:basic-link>]</fo:inline>: properties that can be used
                                to configure the OAuth 1 support.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e12702"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/oauth1/OAuth1Consumer.html)"><fo:inline>OAuth1Consumer</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/oauth1/OAuth1Consumer.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/oauth1/OAuth1Consumer.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/oauth1/OAuth1Token.html)"><fo:inline>OAuth1Token</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/oauth1/OAuth1Token.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/oauth1/OAuth1Token.html</fo:basic-link>]</fo:inline>: classes
                                that contain consumer key, request and access tokens. You need to
                                implement them only if you also implement the interface
                                <fo:inline font-family="monospace">OAuth1Provider</fo:inline>.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    First step in enabling Jersey OAuth 1 support is to register a
                    <fo:inline font-family="monospace">OAuth1ServerFeature</fo:inline> instance
                    initialized with an instance of <fo:inline font-family="monospace">OAuth1Provider</fo:inline>. Additionally, you may
                    configure the <fo:inline font-style="italic">Request Token URI</fo:inline> and <fo:inline font-style="italic">Access Token URI</fo:inline> -
                    the endpoints accessible on the OAuth server that issue Request and Access Tokens. These endpoints
                    are defined in the OAuth 1 specification and are contacted as part of the OAuth authorization flow.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Next, when a client initiates the OAuth authorization flow, the provided implementation of
                    <fo:inline font-family="monospace">OAuth1Provider</fo:inline> will be invoked as to create new tokens,
                    get tokens and finally to store the issued Access Token. If a consumer already has a valid Access Token
                    and makes Authenticated Requests (with OAuth 1 Authorization information in the HTTP header),
                    the provider will be invoked to provide the <fo:inline font-family="monospace">OAuth1Token</fo:inline> for the
                    Access Token information in the header.
                </fo:block></fo:block><fo:block id="oauth1-client"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">16.3.1.2. Client</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e12740"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        OAuth client support in Jersey is almost identical for OAuth 1 and OAuth 2. As such, this chapter
                        provides useful information even for users that use OAuth 2 client support.
                    </fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    To add support for OAuth into your Jersey client application, add the following dependency to your
                    <fo:inline font-family="monospace">pom.xml</fo:inline>:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e12748">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.security&lt;/groupId&gt;
    &lt;artifactId&gt;oauth1-client&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>

                    As mentioned earlier, there is no need to add a direct dependency to the signature module,
                    it will be transitively included.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    OAuth 1 client support initially started as a code migration from Jersey 1.x.
                    During the migration however the API of was significantly revised.
                    The high level difference compared to Jersey 1.x OAuth client API is that the authorization flow
                    is no longer part of a client OAuth filter. Authorization flow is now a standalone utility
                    and can be used without a support for subsequent authenticated requests.
                    The support for authenticated requests stays in the
                    <fo:inline font-family="monospace">ClientRequestFilter</fo:inline> but is not part of a public API
                    anymore and is registered by a Jersey OAuth <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Feature.html)"><fo:inline>Feature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Feature.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Feature.html</fo:basic-link>]</fo:inline>.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The most important parts of the Jersey client OAuth API and SPI are explained here:

                    <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e12761"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e12762"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/OAuth1ClientSupport.html)"><fo:inline>OAuth1ClientSupport</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/OAuth1ClientSupport.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/OAuth1ClientSupport.html</fo:basic-link>]</fo:inline>: The main class which contains builder
                                methods to build features that enable the OAuth 1 support. Start with this class every time
                                you need to add any OAuth 1 support to the Jersey Client (build an Authorization flow
                                or initialize client to perform authenticated requests). The class contains a
                                static method that returns an instance of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/OAuth1Builder.html)"><fo:inline>OAuth1Builder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/OAuth1Builder.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/OAuth1Builder.html</fo:basic-link>]</fo:inline> and also
                                the class defines request properties to influence behaviour of the authenticated
                                request support.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e12771"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/OAuth1AuthorizationFlow.html)"><fo:inline>OAuth1AuthorizationFlow</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/OAuth1AuthorizationFlow.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/OAuth1AuthorizationFlow.html</fo:basic-link>]</fo:inline>: API that allows to perform the
                                Authorization flow against service provider. Implementation of this interface is a
                                class that is used as a standalone utility and is not part of the JAX-RS client. In
                                other words, this is not a feature that should be registered into the client.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e12777"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/AccessToken.html)"><fo:inline>AccessToken</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/AccessToken.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/AccessToken.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/ConsumerCredentials.html)"><fo:inline>ConsumerCredentials</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/ConsumerCredentials.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/ConsumerCredentials.html</fo:basic-link>]</fo:inline>:
                                Interfaces that define Access Token classes and Consumer Credentials. Interfaces contain
                                getters for public keys and secret keys of token and credentials.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

                    An example of how Jersey OAuth 1 client API is used can be found in
                    the <fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/oauth-client-twitter)"><fo:inline>OAuth 1 Twitter Client Example</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/oauth-client-twitter)">https://github.com/jersey/jersey/tree/2.28/examples/oauth-client-twitter</fo:basic-link>]</fo:inline>. The following code snippets are extracted from the
                    example and explain how to use the Jersey OAuth client API.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Before we start with any interaction with Twitter, we need to register our application
                    on Twitter. See the example <fo:inline font-family="monospace">README.TXT</fo:inline> file for the instructions.
                    As a result of the registration, we get the consumer credentials that identify our application.
                    Consumer credentials consist of <fo:inline font-family="monospace">consumer key</fo:inline> and <fo:inline font-family="monospace">consumer secret</fo:inline>.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    As a first step in our code, we need to perform the authorization flow, where the user grants us an access to
                    his/her Twitter client.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e12805"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 16.7. Build the authorization flow utility</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e12808">  1 ConsumerCredentials consumerCredentials = new ConsumerCredentials(
  2                 "a846d84e68421b321a32d, "f13aed84190bc");
  3 OAuth1AuthorizationFlow authFlow = OAuth1ClientSupport.builder(consumerCredentials)
  4     .authorizationFlow(
  5         "http://api.twitter.com/oauth/request_token",
  6         "http://api.twitter.com/oauth/access_token",
  7         "http://api.twitter.com/oauth/authorize")
  8     .build();</fo:block></fo:block></fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Here we have built a <fo:inline font-family="monospace">OAuth1AuthorizationFlow</fo:inline> utility component representing the
                    OAuth 1 authorization flow, using <fo:inline font-family="monospace">OAuth1ClientSupport</fo:inline> and
                    <fo:inline font-family="monospace">OAuth1Builder</fo:inline> API. The static <fo:inline font-family="monospace">builder</fo:inline> method accepts
                    mandatory parameter with <fo:inline font-family="monospace">ConsumerCredentials</fo:inline>. These
                    are credentials earlier issued by Twitter for our application.
                    We have specified the Twitter OAuth endpoints where Request Token, Access Token will be retrieved and
                    Authorization URI to which we will redirect the user in order to grant user's consent.
                    Twitter will present an HTML page on this URI and it will ask the user whether he/she would like us
                    to access his/her account.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Now we can proceed with the OAuth authorization flow.

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e12830"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 16.8. Perform the OAuth Authorization Flow</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e12833">  1 String authorizationUri = authFlow.start();
  2 // here we must direct the user to authorization uri to approve
  3 // our application. The result will be verifier code (String).
  4 AccessToken accessToken = authFlow.finish(verifier);</fo:block></fo:block></fo:block>

                    In the first line, we start the authorization flow. The method internally makes a request to the
                    <fo:inline font-family="monospace">http://api.twitter.com/oauth/request_token</fo:inline> URL
                    and retrieves a Request Token. Details of this request can be found in the OAuth 1 specification.
                    It then constructs a URI to which we must redirect the user. The URI is based on Twitter's
                    authorization URI (<fo:inline font-family="monospace">http://api.twitter.com/oauth/authorize</fo:inline>) and contains
                    a Request Token as a query parameter. In the Twitter example, we have a simple console application therefore
                    we print the URL to the console and ask the user to open the URL in a browser to approve the authorization
                    of our application.
                    Then the user gets a verifier and enters it back to the console. However, if our application would be a
                    web application, we would need to return a redirection response to the user in order to redirect the user
                    automatically to the <fo:inline font-family="monospace">authorizationUri</fo:inline>. For more information about server deployment,
                    check our <fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/oauth2-client-google-webapp)"><fo:inline>OAuth 2 Google Client Web Application Example</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/oauth2-client-google-webapp)">https://github.com/jersey/jersey/tree/2.28/examples/oauth2-client-google-webapp</fo:basic-link>]</fo:inline>, where the client is part of the
                    web application (the client API for OAuth 2 is similar to OAuth 1).
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Once we have a verifier, we invoke the method <fo:inline font-family="monospace">finish()</fo:inline>
                    on our <fo:inline font-family="monospace">OAuth1AuthorizationFlow</fo:inline> instance, which internally
                    sends a request to an access token service URI (<fo:inline font-family="monospace">http://api.twitter.com/oauth/access_token</fo:inline>)
                    and exchanges the supplied verifier for a new valid Access Token.
                    At this point the authorization flow is finished and we can start using the retrieved
                    <fo:inline font-family="monospace">AccessToken</fo:inline> to make authenticated requests.
                    We can now create an instance of an OAuth 1 client <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Feature.html)"><fo:inline>Feature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Feature.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Feature.html</fo:basic-link>]</fo:inline> using
                    <fo:inline font-family="monospace">OAuth1ClientSupport</fo:inline> and pass it our <fo:inline font-family="monospace">accessToken</fo:inline>.
                    Another way is to use <fo:inline font-family="monospace">authFlow</fo:inline> that already contains the information about access token
                    to create the feature instance for us:

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e12874"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 16.9. Authenticated requests</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e12877">  1 Feature feature = authFlow.getOAuth1Feature();
  2 Client client = ClientBuilder.newBuilder()
  3     .register(feature)
  4     .build();</fo:block></fo:block></fo:block>

                    Once the feature is configured in the JAX-RS <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)"><fo:inline>Client</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html</fo:basic-link>]</fo:inline> (or <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html)"><fo:inline>WebTarget</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html</fo:basic-link>]</fo:inline>),
                    all requests invoked from such <fo:inline font-family="monospace">Client</fo:inline> (or <fo:inline font-family="monospace">WebTarget</fo:inline>) instance
                    will automatically include an OAuth Authorization HTTP header (that contains also the OAuth signature).
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Note that if you already have a valid Access Token (for example stored in the database for each of your users),
                    then you can skip the authorization flow steps and directly create the OAuth <fo:inline font-family="monospace">Feature</fo:inline>
                    configured to use your Access Token.

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e12897"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 16.10. Build feature from Access Token</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e12900">  1 AccessToken storedToken = ...;
  2 Feature filterFeature = OAuth1ClientSupport.builder(consumerCredentials)
  3     .feature()
  4     .accessToken(storedToken)
  5     .build();</fo:block></fo:block></fo:block>

                    Here, the <fo:inline font-family="monospace">storedToken</fo:inline> represents an <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/AccessToken.html)"><fo:inline>AccessToken</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/AccessToken.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/AccessToken.html</fo:basic-link>]</fo:inline> that your client
                    application keeps stored e.g. in a database.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Note that the OAuth feature builder API does not require the access token to be set.
                    The reason for it is that you might want to build a feature which would register the internal Jersey
                    OAuth <fo:inline font-family="monospace">ClientRequestFilter</fo:inline> and other related providers but which would not
                    initialize the OAuth providers with a single fixed <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/AccessToken.html)"><fo:inline>AccessToken</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/AccessToken.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/AccessToken.html</fo:basic-link>]</fo:inline> instance.
                    In such case you would need to specify a token for every single request in the request properties.
                    Key names and API documentation of these properties can be found in
                    <fo:inline font-family="monospace">OAuth1ClientSupport</fo:inline>.
                    Using this approach, you can have a single, OAuth enabled instance of a JAX-RS <fo:inline font-family="monospace">Client</fo:inline>
                    (or <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html)"><fo:inline>WebTarget</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html</fo:basic-link>]</fo:inline>) and use it to make authenticated requests on behalf of multiple users.
                    Note that you can use the aforementioned request properties even if the feature has been initialized
                    with an <fo:inline font-family="monospace">AccessToken</fo:inline> to override the default access token information for
                    particular requests, even though it is probably not a common use case.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The following code shows how to set an access token on a single request using the Jersey OAuth properties.

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e12931"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 16.11. Specifying Access Token on a Request.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e12934">  1 Response resp =
  2     client.target("http://my-serviceprovider.org/rest/foo/bar")
  3         .request()
  4         .property(OAuth1ClientSupport.OAUTH_PROPERTY_ACCESS_TOKEN, storedToken)
  5         .get();</fo:block></fo:block></fo:block>

                    <fo:inline font-family="monospace">OAuth1AuthorizationFlow</fo:inline> internally uses
                    a <fo:inline font-family="monospace">Client</fo:inline> instance to communicate with the OAuth server. For this a
                    new client instance is automatically created by default. You can supply your instance of
                    a <fo:inline font-family="monospace">Client</fo:inline> to be used for the authorization flow requests (for performance
                    and/or resource management reasons) using <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/OAuth1Builder.html)"><fo:inline>OAuth1Builder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/OAuth1Builder.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/OAuth1Builder.html</fo:basic-link>]</fo:inline> methods.
                </fo:block><fo:block id="oauth1-client-signatures"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="12pt">16.3.1.2.1. Public/Private Keys for RSA-SHA1 signature method</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        Follow the steps below in case the outgoing requests sent from client to server have to be signed with
                        RSA-SHA1 signature method instead of the default one (HMAC-SHA1).
                    </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e12954"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 16.12. Creating Public/Private RSA-SHA1 keys</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e12957">  1 $ # Create the private key.
  2 $ openssl genrsa -out private.key 2048
  3 $ # Convert the key into PKCS8 format.
  4 $ openssl pkcs8 -topk8 -in private.key -nocrypt
  5 $ # Extract the public key.
  6 $ openssl rsa -in private.key -pubout</fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        The output of the second command can be used as a consumer secret to sign the outgoing request:
                        <fo:inline font-family="monospace">new ConsumerCredentials("consumer-key", CONSUMER_PRIVATE_KEY)</fo:inline>. Public key obtained from
                        the third command can be then used on the service provider to verify the signed data.
                    </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        For more advanced cases (i.e. other formats of keys) a custom <fo:inline font-family="monospace">OAuth1SignatureMethod</fo:inline>
                        should be implemented and used.
                    </fo:block></fo:block></fo:block></fo:block><fo:block id="d0e12969"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">OAuth 2 Support</fo:marker><fo:block font-size="17.28pt">16.3.2. OAuth 2 Support</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">At the moment Jersey supports OAuth 2 only on the client side.</fo:block><fo:block id="d0e12974"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">16.3.2.1. Client</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e12977"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        Note: It is suggested to read the section <fo:basic-link internal-destination="oauth1-client"><fo:inline>Section 16.3.1.2, “Client”</fo:inline></fo:basic-link>
                        before this section. Support for OAuth on the client is very similar for both
                        OAuth 1 and OAuth 2 and general principles are valid for both OAuth versions as such.
                    </fo:block></fo:block></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e12982"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        OAuth 2 support is in a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/Beta.html)"><fo:inline>Beta</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/Beta.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/Beta.html</fo:basic-link>]</fo:inline> state and as such the API is subject
                        to change.
                    </fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    To add support for Jersey OAuth 2 Client API into your application, add the following dependency
                    to your <fo:inline font-family="monospace">pom.xml</fo:inline>:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e12993">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.security&lt;/groupId&gt;
    &lt;artifactId&gt;oauth2-client&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    OAuth 2, in contrast with OAuth 1, is not a strictly defined protocol, rather a framework.
                    OAuth 2 specification defines many extension points and it is up to service providers to
                    implement these details and document these implementations for the service consumers.
                    Additionally, OAuth 2 defines more than one authorization flow.
                    The authorization flow similar to the flow from OAuth 1 is called
                    the <fo:inline font-style="italic">Authorization Code Grant Flow</fo:inline>.
                    This is the flow currently supported by Jersey (Jersey currently does not support other flows).
                    Please refer to the <fo:basic-link external-destination="url(http://tools.ietf.org/html/rfc6749)"><fo:inline>OAuth 2.0 specification</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://tools.ietf.org/html/rfc6749)">http://tools.ietf.org/html/rfc6749</fo:basic-link>]</fo:inline> for more details about authorization flows.
                    Another significant change compared to OAuth 1 is that OAuth 2 is not based on signatures and
                    secret keys and therefore for most of the communication SSL needs to be used
                    (i.e. the requests must be made through HTTPS). This means that all OAuth 2 endpoint URIs must use
                    the <fo:inline font-family="monospace">https</fo:inline> scheme.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Due to the fact that OAuth 2 does not define a strict protocol, it is not possible to provide a
                    single, universal pre-configured tool interoperable with all providers.
                    Jersey OAuth 2 APIs allows a lot of extensibility via parameters sent in each requests. Jersey
                    currently provides two pre-configured authorization flow providers - for Google and Facebook.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The most important entry points of Jersey client OAuth 2 API and SPI are explained below:

                    <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e13011"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e13012"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth2/OAuth2ClientSupport.html)"><fo:inline>OAuth2ClientSupport</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth2/OAuth2ClientSupport.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth2/OAuth2ClientSupport.html</fo:basic-link>]</fo:inline>: The main class which contains builder
                                methods to build features that enable the OAuth 2 support. Start with this class every time
                                you need to add any OAuth 2 support to the Jersey Client (build an Authorization flow
                                or initialize client to perform authenticated requests). The class contains also
                                methods to get authorization flow utilities adjusted for Facebook or Google.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e13018"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth2/OAuth2CodeGrantFlow.html)"><fo:inline>OAuth2CodeGrantFlow</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth2/OAuth2CodeGrantFlow.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth2/OAuth2CodeGrantFlow.html</fo:basic-link>]</fo:inline>: API that allows to perform the
                                authorization flow defined as Authorization Code Grant Flow in the OAuth 2 specification.
                                Implementation of this interface is a
                                class that is used as a standalone utility and is not part of the JAX-RS client. In
                                other words, this is not a feature that should be registered into the client.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e13024"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth2/ClientIdentifier.html)"><fo:inline>ClientIdentifier</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth2/ClientIdentifier.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth2/ClientIdentifier.html</fo:basic-link>]</fo:inline>: Identifier of the client issued by the Service
                                Provider for the client. Similar to <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/ConsumerCredentials.html)"><fo:inline>ConsumerCredentials</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/ConsumerCredentials.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth1/ConsumerCredentials.html</fo:basic-link>]</fo:inline>
                                from OAuth 1 client support.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e13033"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth2/OAuth2Parameters.html)"><fo:inline>OAuth2Parameters</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth2/OAuth2Parameters.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth2/OAuth2Parameters.html</fo:basic-link>]</fo:inline>: Defines parameters that are used in requests
                                during the authorization flow. These parameters can be used to override some of the
                                parameters used in different authorization phases.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e13039"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth2/TokenResult.html)"><fo:inline>TokenResult</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth2/TokenResult.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/oauth2/TokenResult.html</fo:basic-link>]</fo:inline>:
                                Contains result of the authorization flow. One of the result values is the Access
                                Token. It can additionally contain the expiration time of the Access Token and
                                Refresh Token that can be used to get new Access Token.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The principle of performing the authorization flow with Jersey is similar to OAuth 1.
                    Check the <fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/oauth-client-twitter)"><fo:inline>OAuth 1 Twitter Client Example</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/oauth-client-twitter)">https://github.com/jersey/jersey/tree/2.28/examples/oauth-client-twitter</fo:basic-link>]</fo:inline> which utilizes Jersey client
                    support for OAuth 2 to get Google Tasks of the user. The application is a web application
                    that uses redirection to forward the user to the authorization URI.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The following code is an example of how to build and use OAuth 2 authorization flow.

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e13053"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 16.13. Building OAuth 2 Authorization Flow.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e13056">  1 OAuth2CodeGrantFlow.Builder builder =
  2     OAuth2ClientSupport.authorizationCodeGrantFlowBuilder(clientId,
  3                             "https://example.com/oauth/authorization",
  4                             "https://example.com/oauth/token");
  5 OAuth2CodeGrantFlow flow = builder
  6     .property(OAuth2CodeGrantFlow.Phase.AUTHORIZATION, "readOnly", "true")
  7     .scope("contact")
  8     .build();
  9 String authorizationUri = flow.start();
 10 
 11 // Here we must redirect the user to the authorizationUri
 12 // and let the user approve an access for our app.
 13 
 14 ...
 15 
 16 // We must handle redirection back to our web resource
 17 // and extract code and state from the request
 18 final TokenResult result = flow.finish(code, state);
 19 System.out.println("Access Token: " + result.get);</fo:block></fo:block></fo:block>

                    In the code above we create an <fo:inline font-family="monospace">OAuth2CodeGrantFlow</fo:inline> from an
                    authorization URI and an access token URI. We have additionally set a
                    <fo:inline font-family="monospace">readOnly</fo:inline> parameter to <fo:inline font-family="monospace">true</fo:inline> and assigned the parameter
                    to the authorization phase. This is the way, how you can extend the standard flow with
                    additional service provider-specific parameters. In this case, the <fo:inline font-family="monospace">readOnly=true</fo:inline>
                    parameter will be added as a query parameter to the authorization uri returned from the method
                    <fo:inline font-family="monospace">flow.start()</fo:inline>.
                    If we would specify <fo:inline font-family="monospace">ACCESS_TOKEN_REQUEST</fo:inline> as a phase, then the parameter
                    would have been added to the request when <fo:inline font-family="monospace">flow.finish()</fo:inline>
                    is invoked. See javadocs for more information. The parameter <fo:inline font-family="monospace">readOnly</fo:inline>
                    is not part of the OAuth 2 specification and is used in the example
                    for demonstration of how to configure the flow for needs of specific service providers (in this
                    case, the <fo:inline font-family="monospace">readOnly</fo:inline>
                    param would be described in the service provider's documentation).
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Between the calls to <fo:inline font-family="monospace">flow.start()</fo:inline> and <fo:inline font-family="monospace">flow.finish()</fo:inline>, a user
                    must be redirected to the authorization URI. This means that the code will not be executed in
                    a single method and the finish part will be invoked as a handler of redirect request back to our web from
                    authorization URI. Check the <fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/oauth2-client-google-webapp)"><fo:inline>OAuth 2 Google Client Web Application Example</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/oauth2-client-google-webapp)">https://github.com/jersey/jersey/tree/2.28/examples/oauth2-client-google-webapp</fo:basic-link>]</fo:inline> for more details on
                    this approach.
                </fo:block></fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>WADL Support</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>WADL Support</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="wadl"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 17. WADL Support</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e13101"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">WADL introduction</fo:marker><fo:block font-size="20.735999999999997pt">17.1. WADL introduction</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Jersey contains support for
            <fo:basic-link external-destination="url(http://wadl.java.net/)"><fo:inline>Web Application Description Language (WADL)</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://wadl.java.net/)">http://wadl.java.net/</fo:basic-link>]</fo:inline>. WADL is
            a XML description of a deployed RESTful web application. It contains model of the deployed resources, their
            structure, supported media types, HTTP methods and so on. In a sense, WADL is a similar to the WSDL
            (Web Service Description Language) which describes SOAP web services. WADL is however specifically designed
            to describe RESTful Web resources.
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e13109"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Important</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Since Jersey 2.5.1 the WADL generated by default is WADL in shorter form without
                additional extension resources (OPTIONS methods, WADL resource).
                In order to get full WADL use the query parameter <fo:inline font-family="monospace">detail=true</fo:inline>.
            </fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Let's start with the simple WADL example. In the example there is a simple <fo:inline font-family="monospace">CountryResource</fo:inline>
            deployed and we request a wadl of this resource. The context root path of the application is
            <fo:inline font-family="monospace">http://localhost:9998</fo:inline>.
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e13123"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 17.1. A simple WADL example - JAX-RS resource definition</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e13126">  1 @Path("country/{id}")
  2 public static class CountryResource {
  3 
  4     private CountryService countryService;
  5 
  6     public CountryResource() {
  7         // init countryService
  8     }
  9 
 10     @GET
 11     @Produces(MediaType.APPLICATION_XML)
 12     public Country getCountry(@PathParam("countryId") int countryId) {
 13         return countryService.getCountry(countryId);
 14     }
 15 }</fo:block></fo:block></fo:block>



            The WADL of a Jersey application that contains the resource above can be requested by a
            HTTP <fo:inline font-family="monospace">GET</fo:inline> request to <fo:inline font-family="monospace">http://localhost:9998/application.wadl</fo:inline>.
            The Jersey will return a response with a WADL content similar to the one in the following example:
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e13135">  1 &lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
  2 &lt;application xmlns="http://wadl.dev.java.net/2009/02"&gt;
  3     &lt;doc xmlns:jersey="http://jersey.java.net/" jersey:generatedBy="Jersey: 2.5-SNAPSHOT 2013-12-20 17:14:21"/&gt;
  4     &lt;grammars/&gt;
  5     &lt;resources base="http://localhost:9998/"&gt;
  6         &lt;resource path="country/{id}"&gt;
  7             &lt;param xmlns:xs="http://www.w3.org/2001/XMLSchema" type="xs:int" style="template" name="countryId"/&gt;
  8             &lt;method name="GET" id="getCountry"&gt;
  9                 &lt;response&gt;
 10                     &lt;representation mediaType="application/xml"/&gt;
 11                 &lt;/response&gt;
 12             &lt;/method&gt;
 13         &lt;/resource&gt;
 14     &lt;/resources&gt;
 15 &lt;/application&gt;</fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The returned WADL is a XML that contains element <fo:inline font-family="monospace">resource</fo:inline>
            with path <fo:inline font-family="monospace">country/{id}</fo:inline>. This resource has one inner <fo:inline font-family="monospace">method</fo:inline> element
            with http method as attribute, name of java method and its produced representation. This description
            corresponds to defined java resource. Now let's look at more complex example.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The previous WADL does not actually contain all resources exposed in our API. There are other
            resources that are available and are hidden in the previous WADL. The previous WADL shows only resources
            that are provided by the user. In the following example, the WADL
            is generated using query parameter <fo:inline font-family="monospace">detail</fo:inline>:
            <fo:inline font-family="monospace">http://localhost:9998/application.wadl?detail</fo:inline>. Note that usage of
            <fo:inline font-family="monospace">http://localhost:9998/application.wadl?detail=true</fo:inline> is also valid.
            This will produce the WADL with all resource available in the application:
        </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e13160"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 17.2. A simple WADL example - WADL content</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e13163">  1 &lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
  2 &lt;application xmlns="http://wadl.dev.java.net/2009/02"&gt;
  3     &lt;doc xmlns:jersey="http://jersey.java.net/" jersey:generatedBy="Jersey: 2.5-SNAPSHOT 2013-12-20 17:14:21"/&gt;
  4     &lt;doc xmlns:jersey="http://jersey.java.net/" jersey:hint="To get simplified WADL with user's resources only use the query parameter 'simple=true'. Link: http://localhost:9998/application.wadl?detail=true&amp;amp;simple=true"/&gt;
  5     &lt;grammars/&gt;
  6     &lt;resources base="http://localhost:9998/"&gt;
  7         &lt;resource path="country/{id}"&gt;
  8             &lt;param xmlns:xs="http://www.w3.org/2001/XMLSchema" type="xs:int" style="template" name="countryId"/&gt;
  9             &lt;method name="GET" id="getCountry"&gt;
 10                 &lt;response&gt;
 11                     &lt;representation mediaType="application/xml"/&gt;
 12                 &lt;/response&gt;
 13             &lt;/method&gt;
 14             &lt;method name="OPTIONS" id="apply"&gt;
 15                 &lt;request&gt;
 16                     &lt;representation mediaType="*/*"/&gt;
 17                 &lt;/request&gt;
 18                 &lt;response&gt;
 19                     &lt;representation mediaType="application/vnd.sun.wadl+xml"/&gt;
 20                 &lt;/response&gt;
 21                 &lt;jersey:extended xmlns:jersey="http://jersey.java.net/"&gt;true&lt;/jersey:extended&gt;
 22             &lt;/method&gt;
 23             &lt;method name="OPTIONS" id="apply"&gt;
 24                 &lt;request&gt;
 25                     &lt;representation mediaType="*/*"/&gt;
 26                 &lt;/request&gt;
 27                 &lt;response&gt;
 28                     &lt;representation mediaType="text/plain"/&gt;
 29                 &lt;/response&gt;
 30                 &lt;jersey:extended xmlns:jersey="http://jersey.java.net/"&gt;true&lt;/jersey:extended&gt;
 31             &lt;/method&gt;
 32             &lt;method name="OPTIONS" id="apply"&gt;
 33                 &lt;request&gt;
 34                     &lt;representation mediaType="*/*"/&gt;
 35                 &lt;/request&gt;
 36                 &lt;response&gt;
 37                     &lt;representation mediaType="*/*"/&gt;
 38                 &lt;/response&gt;
 39                 &lt;jersey:extended xmlns:jersey="http://jersey.java.net/"&gt;true&lt;/jersey:extended&gt;
 40             &lt;/method&gt;
 41         &lt;/resource&gt;
 42         &lt;resource path="application.wadl"&gt;
 43             &lt;method name="GET" id="getWadl"&gt;
 44                 &lt;response&gt;
 45                     &lt;representation mediaType="application/vnd.sun.wadl+xml"/&gt;
 46                     &lt;representation mediaType="application/xml"/&gt;
 47                 &lt;/response&gt;
 48                 &lt;jersey:extended xmlns:jersey="http://jersey.java.net/"&gt;true&lt;/jersey:extended&gt;
 49             &lt;/method&gt;
 50             &lt;method name="OPTIONS" id="apply"&gt;
 51                 &lt;request&gt;
 52                     &lt;representation mediaType="*/*"/&gt;
 53                 &lt;/request&gt;
 54                 &lt;response&gt;
 55                     &lt;representation mediaType="text/plain"/&gt;
 56                 &lt;/response&gt;
 57                 &lt;jersey:extended xmlns:jersey="http://jersey.java.net/"&gt;true&lt;/jersey:extended&gt;
 58             &lt;/method&gt;
 59             &lt;method name="OPTIONS" id="apply"&gt;
 60                 &lt;request&gt;
 61                     &lt;representation mediaType="*/*"/&gt;
 62                 &lt;/request&gt;
 63                 &lt;response&gt;
 64                     &lt;representation mediaType="*/*"/&gt;
 65                 &lt;/response&gt;
 66                 &lt;jersey:extended xmlns:jersey="http://jersey.java.net/"&gt;true&lt;/jersey:extended&gt;
 67             &lt;/method&gt;
 68             &lt;resource path="{path}"&gt;
 69                 &lt;param xmlns:xs="http://www.w3.org/2001/XMLSchema" type="xs:string" style="template" name="path"/&gt;
 70                 &lt;method name="GET" id="geExternalGrammar"&gt;
 71                     &lt;response&gt;
 72                         &lt;representation mediaType="application/xml"/&gt;
 73                     &lt;/response&gt;
 74                     &lt;jersey:extended xmlns:jersey="http://jersey.java.net/"&gt;true&lt;/jersey:extended&gt;
 75                 &lt;/method&gt;
 76                 &lt;method name="OPTIONS" id="apply"&gt;
 77                     &lt;request&gt;
 78                         &lt;representation mediaType="*/*"/&gt;
 79                     &lt;/request&gt;
 80                     &lt;response&gt;
 81                         &lt;representation mediaType="text/plain"/&gt;
 82                     &lt;/response&gt;
 83                     &lt;jersey:extended xmlns:jersey="http://jersey.java.net/"&gt;true&lt;/jersey:extended&gt;
 84                 &lt;/method&gt;
 85                 &lt;method name="OPTIONS" id="apply"&gt;
 86                     &lt;request&gt;
 87                         &lt;representation mediaType="*/*"/&gt;
 88                     &lt;/request&gt;
 89                     &lt;response&gt;
 90                         &lt;representation mediaType="*/*"/&gt;
 91                     &lt;/response&gt;
 92                     &lt;jersey:extended xmlns:jersey="http://jersey.java.net/"&gt;true&lt;/jersey:extended&gt;
 93                 &lt;/method&gt;
 94                 &lt;jersey:extended xmlns:jersey="http://jersey.java.net/"&gt;true&lt;/jersey:extended&gt;
 95             &lt;/resource&gt;
 96             &lt;jersey:extended xmlns:jersey="http://jersey.java.net/"&gt;true&lt;/jersey:extended&gt;
 97         &lt;/resource&gt;
 98     &lt;/resources&gt;
 99 &lt;/application&gt;
100 </fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In the example above the returned application WADL is shown in full. WADL schema is defined by the
            WADL specification, so let's look at it in more details. The root WADL document element is
            the <fo:inline font-family="monospace">application</fo:inline>. It contains global
            information about the deployed JAX-RS application. Under this element there is a nested element
            <fo:inline font-family="monospace">resources</fo:inline> which contains zero or more <fo:inline font-family="monospace">resource</fo:inline> elements. Each
            <fo:inline font-family="monospace">resource</fo:inline> element describes a single deployed resource. In our example, there are only two root
            resources - <fo:inline font-family="monospace">"country/{id}"</fo:inline> and <fo:inline font-family="monospace">"application.wadl"</fo:inline>. The
            <fo:inline font-family="monospace">"application.wadl"</fo:inline> resource is the resource that was just requested in order to receive the
            application WADL document. Even though WADL support is an additional feature in Jersey it is still
            a resource deployed in the resource model and therefore it is itself present in the returned WADL document.
            The first resource element with the <fo:inline font-family="monospace">path="country/{id}"</fo:inline> is the element that describes our
            custom deployed resource.
            This resource contains a <fo:inline font-family="monospace">GET</fo:inline> method and three <fo:inline font-family="monospace">OPTIONS</fo:inline> methods.
            The <fo:inline font-family="monospace">GET</fo:inline> method is our getCountry() method defined in the sample. There is a method name
            in the <fo:inline font-family="monospace">id</fo:inline> attribute and <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html)"><fo:inline>@Produces</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html</fo:basic-link>]</fo:inline> is described in the
            <fo:inline font-family="monospace">response/representation</fo:inline> WADL element. <fo:inline font-family="monospace">OPTIONS</fo:inline> methods are the methods that
            are automatically added by Jersey to each resource. There is an <fo:inline font-family="monospace">OPTIONS</fo:inline> method
            returning <fo:inline font-family="monospace">"text/plain"</fo:inline> media type, that will return a response with a string entity containing
            the list of methods deployed on this resource (this means that instead of WADL you can use this <fo:inline font-family="monospace">OPTIONS</fo:inline>
            method to get similar information in a textual representation).
            Another <fo:inline font-family="monospace">OPTIONS</fo:inline> method returning <fo:inline font-family="monospace">*/*</fo:inline> will return a response with no entity
            and <fo:inline font-family="monospace">Allow</fo:inline> header that will contain list of methods as a String.
            The last <fo:inline font-family="monospace">OPTIONS</fo:inline> method producing <fo:inline font-family="monospace">"application/vnd.sun.wadl+xml"</fo:inline> returns a
            WADL description of the resource <fo:inline font-family="monospace">"country/{id}"</fo:inline>. As you can see, all <fo:inline font-family="monospace">OPTIONS</fo:inline> methods
            return information about the resource to which the HTTP <fo:inline font-family="monospace">OPTIONS</fo:inline> request is made.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Second resource with a path "application.wadl" has, again, similar <fo:inline font-family="monospace">OPTIONS</fo:inline> methods
            and one <fo:inline font-family="monospace">GET</fo:inline> method which return this WADL. There is also
            a sub-resource with a path defined by path param <fo:inline font-family="monospace">{path}</fo:inline>. This means that you can request
            a resource on the URI <fo:inline font-family="monospace">http://localhost:9998/application.wadl/something</fo:inline>.
            This is used only to return an external grammar if there is any attached. Such a external grammar can be
            for example an <fo:inline font-family="monospace">XSD</fo:inline> schema of the response entity which if the response entity is a JAXB bean.
            An external grammar support via Jersey <fo:inline font-style="italic">extended WADL support</fo:inline> is described in sections below.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            All resource that were added in this second example into the WADL contains
            element <fo:inline font-family="monospace">extended</fo:inline>. This means that this resource is not a part of a core RESTful API and
            is rather a helper resource. If you need to mark any your own resource are extended, annotate
            is with <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/model/ExtendedResource.html)"><fo:inline>@ExtendedResource</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/model/ExtendedResource.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/model/ExtendedResource.html</fo:basic-link>]</fo:inline>. Note that there might be methods visible in the default simple
            WADL even the user has not added them. This is for example the case of MVC added methods which were added
            by <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/model/ModelProcessor.html)"><fo:inline>ModelProcessor</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/model/ModelProcessor.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/model/ModelProcessor.html</fo:basic-link>]</fo:inline> but are still intended to be used by the client to achieve their
            primary use case of getting formatted data.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Let's now send an HTTP <fo:inline font-family="monospace">OPTIONS</fo:inline> request to <fo:inline font-family="monospace">"country/{id}"</fo:inline> resource using the the
            <fo:inline font-family="monospace">curl</fo:inline> command:
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e13287">curl -X OPTIONS -H "Allow: application/vnd.sun.wadl+xml" \
    -v http://localhost:9998/country/15</fo:block>

            We should see a WADL returned similar to this one:

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e13290"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 17.3. OPTIONS method returning WADL</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e13293">  1 &lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
  2 &lt;application xmlns="http://wadl.dev.java.net/2009/02"&gt;
  3     &lt;doc xmlns:jersey="http://jersey.java.net/"
  4         jersey:generatedBy="Jersey: 2.0-SNAPSHOT ${buildNumber}"/&gt;
  5     &lt;grammars/&gt;
  6     &lt;resources base="http://localhost:9998/"&gt;
  7         &lt;resource path="country/15"&gt;
  8             &lt;method name="GET" id="getCountry"&gt;
  9                 &lt;response&gt;
 10                     &lt;representation mediaType="application/xml"/&gt;
 11                 &lt;/response&gt;
 12             &lt;/method&gt;
 13             &lt;method name="OPTIONS" id="apply"&gt;
 14                 &lt;request&gt;
 15                     &lt;representation mediaType="*/*"/&gt;
 16                 &lt;/request&gt;
 17                 &lt;response&gt;
 18                     &lt;representation mediaType="application/vnd.sun.wadl+xml"/&gt;
 19                 &lt;/response&gt;
 20             &lt;/method&gt;
 21             &lt;method name="OPTIONS" id="apply"&gt;
 22                 &lt;request&gt;
 23                     &lt;representation mediaType="*/*"/&gt;
 24                 &lt;/request&gt;
 25                 &lt;response&gt;
 26                     &lt;representation mediaType="text/plain"/&gt;
 27                 &lt;/response&gt;
 28             &lt;/method&gt;
 29             &lt;method name="OPTIONS" id="apply"&gt;
 30                 &lt;request&gt;
 31                     &lt;representation mediaType="*/*"/&gt;
 32                 &lt;/request&gt;
 33                 &lt;response&gt;
 34                     &lt;representation mediaType="*/*"/&gt;
 35                 &lt;/response&gt;
 36             &lt;/method&gt;
 37         &lt;/resource&gt;
 38     &lt;/resources&gt;
 39 &lt;/application&gt;</fo:block></fo:block></fo:block>
            The returned WADL document has the standard WADL structure that we saw in the WADL document returned for the
            whole Jersey application earlier. The main difference here is that the only <fo:inline font-family="monospace">resource</fo:inline> is the
            resource to which the <fo:inline font-family="monospace">OPTIONS</fo:inline> HTTP request was sent. The resource has now path
            <fo:inline font-family="monospace">"country/15"</fo:inline> and not <fo:inline font-family="monospace">"country/{id}"</fo:inline> as the path parameter
            <fo:inline font-family="monospace">{id}</fo:inline> was already specified in the request to this concrete resource.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Another, a more complex WADL example is shown in the next example.

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e13313"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 17.4. More complex WADL example - JAX-RS resource definition</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e13316">  1 @Path("customer/{id}")
  2 public static class CustomerResource {
  3     private CustomerService customerService;
  4 
  5     @GET
  6     public Customer get(@PathParam("id") int id) {
  7         return customerService.getCustomerById(id);
  8     }
  9 
 10     @PUT
 11     public Customer put(Customer customer) {
 12         return customerService.updateCustomer(customer);
 13     }
 14 
 15     @Path("address")
 16     public CustomerAddressSubResource getCustomerAddress(@PathParam("id") int id) {
 17         return new CustomerAddressSubResource(id);
 18     }
 19 
 20     @Path("additional-info")
 21     public Object getAdditionalInfoSubResource(@PathParam("id") int id) {
 22         return new CustomerAddressSubResource(id);
 23     }
 24 
 25 }
 26 
 27 
 28 public static class CustomerAddressSubResource {
 29     private final int customerId;
 30     private CustomerService customerService;
 31 
 32     public CustomerAddressSubResource(int customerId) {
 33         this.customerId = customerId;
 34         this.customerService = null; // init customer service here
 35     }
 36 
 37     @GET
 38     public String getAddress() {
 39         return customerService.getAddressForCustomer(customerId);
 40     }
 41 
 42     @PUT
 43     public void updateAddress(String address) {
 44         customerService.updateAddressForCustomer(customerId, address);
 45     }
 46 
 47     @GET
 48     @Path("sub")
 49     public String getDeliveryAddress() {
 50         return customerService.getDeliveryAddressForCustomer(customerId);
 51     }
 52 }</fo:block></fo:block></fo:block>

            The <fo:inline font-family="monospace">GET</fo:inline> request to <fo:inline font-family="monospace">http://localhost:9998/application.wadl</fo:inline> will
            return the following WADL document:

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e13325"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 17.5. More complex WADL example - WADL content</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e13328">  1 &lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
  2 &lt;application xmlns="http://wadl.dev.java.net/2009/02"&gt;
  3     &lt;doc xmlns:jersey="http://jersey.java.net/"
  4         jersey:generatedBy="Jersey: 2.0-SNAPSHOT ${buildNumber}"/&gt;
  5     &lt;grammars/&gt;
  6     &lt;resources base="http://localhost:9998/"&gt;
  7         &lt;resource path="customer/{id}"&gt;
  8             &lt;param xmlns:xs="http://www.w3.org/2001/XMLSchema"
  9                 type="xs:int" style="template" name="id"/&gt;
 10             &lt;method name="GET" id="get"&gt;
 11                 &lt;response/&gt;
 12             &lt;/method&gt;
 13             &lt;method name="PUT" id="put"&gt;
 14                 &lt;response/&gt;
 15             &lt;/method&gt;
 16             &lt;method name="OPTIONS" id="apply"&gt;
 17                 &lt;request&gt;
 18                     &lt;representation mediaType="*/*"/&gt;
 19                 &lt;/request&gt;
 20                 &lt;response&gt;
 21                     &lt;representation mediaType="application/vnd.sun.wadl+xml"/&gt;
 22                 &lt;/response&gt;
 23             &lt;/method&gt;
 24             &lt;method name="OPTIONS" id="apply"&gt;
 25                 &lt;request&gt;
 26                     &lt;representation mediaType="*/*"/&gt;
 27                 &lt;/request&gt;
 28                 &lt;response&gt;
 29                     &lt;representation mediaType="text/plain"/&gt;
 30                 &lt;/response&gt;
 31             &lt;/method&gt;
 32             &lt;method name="OPTIONS" id="apply"&gt;
 33                 &lt;request&gt;
 34                     &lt;representation mediaType="*/*"/&gt;
 35                 &lt;/request&gt;
 36                 &lt;response&gt;
 37                     &lt;representation mediaType="*/*"/&gt;
 38                 &lt;/response&gt;
 39             &lt;/method&gt;
 40             &lt;resource path="additional-info"&gt;
 41                 &lt;param xmlns:xs="http://www.w3.org/2001/XMLSchema"
 42                     type="xs:int" style="template" name="id"/&gt;
 43             &lt;/resource&gt;
 44             &lt;resource path="address"&gt;
 45                 &lt;param xmlns:xs="http://www.w3.org/2001/XMLSchema"
 46                     type="xs:int" style="template" name="id"/&gt;
 47                 &lt;method name="GET" id="getAddress"&gt;
 48                     &lt;response/&gt;
 49                 &lt;/method&gt;
 50                 &lt;method name="PUT" id="updateAddress"/&gt;
 51                 &lt;resource path="sub"&gt;
 52                     &lt;method name="GET" id="getDeliveryAddress"&gt;
 53                         &lt;response/&gt;
 54                     &lt;/method&gt;
 55                 &lt;/resource&gt;
 56             &lt;/resource&gt;
 57         &lt;/resource&gt;
 58         &lt;resource path="application.wadl"&gt;
 59             &lt;method name="GET" id="getWadl"&gt;
 60                 &lt;response&gt;
 61                     &lt;representation mediaType="application/vnd.sun.wadl+xml"/&gt;
 62                     &lt;representation mediaType="application/xml"/&gt;
 63                 &lt;/response&gt;
 64             &lt;/method&gt;
 65             &lt;method name="OPTIONS" id="apply"&gt;
 66                 &lt;request&gt;
 67                     &lt;representation mediaType="*/*"/&gt;
 68                 &lt;/request&gt;
 69                 &lt;response&gt;
 70                     &lt;representation mediaType="text/plain"/&gt;
 71                 &lt;/response&gt;
 72             &lt;/method&gt;
 73             &lt;method name="OPTIONS" id="apply"&gt;
 74                 &lt;request&gt;
 75                     &lt;representation mediaType="*/*"/&gt;
 76                 &lt;/request&gt;
 77                 &lt;response&gt;
 78                     &lt;representation mediaType="*/*"/&gt;
 79                 &lt;/response&gt;
 80             &lt;/method&gt;
 81             &lt;resource path="{path}"&gt;
 82                 &lt;param xmlns:xs="http://www.w3.org/2001/XMLSchema"
 83                     type="xs:string" style="template" name="path"/&gt;
 84                 &lt;method name="GET" id="geExternalGrammar"&gt;
 85                     &lt;response&gt;
 86                         &lt;representation mediaType="application/xml"/&gt;
 87                     &lt;/response&gt;
 88                 &lt;/method&gt;
 89                 &lt;method name="OPTIONS" id="apply"&gt;
 90                     &lt;request&gt;
 91                         &lt;representation mediaType="*/*"/&gt;
 92                     &lt;/request&gt;
 93                     &lt;response&gt;
 94                         &lt;representation mediaType="text/plain"/&gt;
 95                     &lt;/response&gt;
 96                 &lt;/method&gt;
 97                 &lt;method name="OPTIONS" id="apply"&gt;
 98                     &lt;request&gt;
 99                         &lt;representation mediaType="*/*"/&gt;
100                     &lt;/request&gt;
101                     &lt;response&gt;
102                         &lt;representation mediaType="*/*"/&gt;
103                     &lt;/response&gt;
104                 &lt;/method&gt;
105             &lt;/resource&gt;
106         &lt;/resource&gt;
107     &lt;/resources&gt;
108 &lt;/application&gt;</fo:block></fo:block></fo:block>

            The <fo:inline font-family="monospace">resource</fo:inline> with <fo:inline font-family="monospace">path="customer/{id}"</fo:inline> is similar to the
            country resource from the previous example. There is a path parameter which identifies the customer
            by <fo:inline font-family="monospace">id</fo:inline>. The resource contains 2 user-declared methods and again auto-generated
            <fo:inline font-family="monospace">OPTIONS</fo:inline> methods added by Jersey. THe resource declares 2 sub-resource locators which are
            represented in the returned WADL document as nested <fo:inline font-family="monospace">resource</fo:inline> elements. Note that the sub-resource
            locator <fo:inline font-family="monospace">getCustomerAddress()</fo:inline> returns a type CustomerAddressSubResource in the
            method declaration and also in the WADL there is a <fo:inline font-family="monospace">resource</fo:inline> element for such
            a sub resource with full internal description. The second method
            <fo:inline font-family="monospace">getAdditionalInfoSubResource()</fo:inline> returns only an <fo:inline font-family="monospace">Object</fo:inline> in the method declaration.
            While this is correct from the JAX-RS perspective as the real returned type can be computed from a request
            information, it creates a problem for WADL generator because WADL is generated based on the static configuration
            of the JAX-RS application resources. The WADL generator does not know what type would be actually returned to
            a request at run time.
            That is the reason why the nested <fo:inline font-family="monospace">resource</fo:inline> element with <fo:inline font-family="monospace">path="additional-info"</fo:inline>
            does not contain any information about the supported resource representations.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The <fo:inline font-family="monospace">CustomerAddressSubResource</fo:inline> sub-resource described in the nested element
            <fo:inline font-family="monospace">&lt;resource path="address"&gt;</fo:inline> does not contain an <fo:inline font-family="monospace">OPTIONS</fo:inline> method.
            While these methods are in fact generated by Jersey for the sub-resource, Jersey WADL generator does not currently
            support adding these methods to the sub-resource description. This should be addressed in the near future.
            Still, there are two user-defined resource methods handling HTTP <fo:inline font-family="monospace">GET</fo:inline> and <fo:inline font-family="monospace">PUT</fo:inline> requests.
            The sub-resource method <fo:inline font-family="monospace">getDeliveryAddress()</fo:inline> is represented as a separate nested resource with
            <fo:inline font-family="monospace">path="sub"</fo:inline>. Should there be more sub-resource methods defined with <fo:inline font-family="monospace">path="sub"</fo:inline>,
            then all these method descriptions would be placed into the same <fo:inline font-family="monospace">resource</fo:inline> element.
            In other words, sub-resource methods are grouped in WADL as sub-resources based on their <fo:inline font-family="monospace">path</fo:inline>
            value.
        </fo:block></fo:block><fo:block id="d0e13396"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Configuration</fo:marker><fo:block font-size="20.735999999999997pt">17.2. Configuration</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            WADL generation is enabled in Jersey by default. This means that <fo:inline font-family="monospace">OPTIONS</fo:inline>
            methods are added by default to each resource and an auto-generated <fo:inline font-family="monospace">/application.wadl</fo:inline>
            resource is deployed too. To override this default behavior and disable WADL generation in Jersey, setup the
            configuration property in your application:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e13407">jersey.config.server.wadl.disableWadl=true</fo:block>

            This property can be setup in a <fo:inline font-family="monospace">web.xml</fo:inline> if the Jersey application is deployed
            in the servlet with <fo:inline font-family="monospace">web.xml</fo:inline> or the property can be returned from the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)"><fo:inline>Application</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html</fo:basic-link>]</fo:inline>.
            <fo:inline font-family="monospace">getProperties()</fo:inline>. See <fo:basic-link internal-destination="deployment"><fo:inline>Deployment chapter</fo:inline></fo:basic-link> for more information
            on setting the application configuration properties in various deployments.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            WADL support in Jersey is implemented via <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/model/ModelProcessor.html)"><fo:inline>ModelProcessor</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/model/ModelProcessor.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/model/ModelProcessor.html</fo:basic-link>]</fo:inline> extension. This implementation enhances
            the application resource model by adding the WADL providing resources. WADL <fo:inline font-family="monospace">ModelProcessor</fo:inline>
            priority value is high (i.e. the priority is low) as it should be executed as one of the last model processors.
            Therefore, any <fo:inline font-family="monospace">ModelProcessor</fo:inline> executed before will not see WADL extensions in the resource model.
            WADL handling resource model extensions (resources and <fo:inline font-family="monospace">OPTIONS</fo:inline> resource methods) are not added to the
            application resource model if there is already a matching resource or a resource method detected in the model.
            In other words, if you define for example your own <fo:inline font-family="monospace">OPTIONS</fo:inline> method that would produce
            <fo:inline font-family="monospace">"application.wadl"</fo:inline> response content, this method will not be overridden by WADL model processor.
            See <fo:basic-link internal-destination="resource-builder"><fo:inline>Resource builder chapter</fo:inline></fo:basic-link> for more information on
            <fo:inline font-family="monospace">ModelProcessor</fo:inline> extension mechanism.
        </fo:block></fo:block><fo:block id="d0e13451"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Extended WADL support</fo:marker><fo:block font-size="20.735999999999997pt">17.3. Extended WADL support</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:inline font-weight="bold">Please note that the API of extended WADL support is going to be changed in one of the future
            releases of Jersey 2.x (see below).</fo:inline>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Jersey supports extension of WADL generation called <fo:inline font-style="italic">extended WADL</fo:inline>. Using the extended WADL
            support you can enhance the generated WADL document with additional information, such as
            resource method javadoc-based documentation of your REST APIs, adding general documentation,
            adding external grammar support, or adding any custom WADL extension information.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The documentation of the existing extended WADL can be found here:
            <fo:basic-link external-destination="url(https://wikis.oracle.com/display/Jersey/WADL)"><fo:inline>Extended WADL in Jersey 1</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://wikis.oracle.com/display/Jersey/WADL)">https://wikis.oracle.com/display/Jersey/WADL</fo:basic-link>]</fo:inline>. This contains
            description of an extended WADL generation in Jersey 1.x that is currently supported also by Jersey 2.x.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:inline font-weight="bold">Again, note that the extended WADL in Jersey 2.x is NOT the intended final version and
            API is going to be changed.</fo:inline> The existing set of features and functionality will be preserved but the
            APIs will be significantly re-designed to support additional use cases. This impacts mainly the APIs of
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/wadl/WadlGenerator.html)"><fo:inline>WadlGenerator</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/wadl/WadlGenerator.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/wadl/WadlGenerator.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/wadl/config/WadlGeneratorConfig.html)"><fo:inline>WadlGeneratorConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/wadl/config/WadlGeneratorConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/wadl/config/WadlGeneratorConfig.html</fo:basic-link>]</fo:inline> as well as any related classes. The API changes
            may impact your code if you are using a custom <fo:inline font-family="monospace">WadlGenerator</fo:inline> or plan to implement one.
        </fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Bean Validation Support</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Bean Validation Support</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="bean-validation"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 18. Bean Validation Support</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Validation is a process of verifying that some data obeys one or more pre-defined constraints. This chapter describes
        support for <fo:basic-link external-destination="url(http://beanvalidation.org/)"><fo:inline>Bean Validation</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://beanvalidation.org/)">http://beanvalidation.org/</fo:basic-link>]</fo:inline> in Jersey in terms of the needed dependencies, configuration, registration and usage.
        For more detailed description on how JAX-RS provides native support for validating resource classes based on the
        Bean Validation refer to the chapter in the <fo:basic-link external-destination="url(http://jcp.org/en/jsr/detail?id=339)"><fo:inline>JAX-RS spec</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://jcp.org/en/jsr/detail?id=339)">http://jcp.org/en/jsr/detail?id=339</fo:basic-link>]</fo:inline>.
    </fo:block><fo:block id="d0e13495"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Bean Validation Dependencies</fo:marker><fo:block font-size="20.735999999999997pt">18.1. Bean Validation Dependencies</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Bean Validation support in Jersey is provided as an extension module and needs to be mentioned explicitly in your
            <fo:inline font-family="monospace">pom.xml</fo:inline> file (in case of using Maven):

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e13503">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.ext&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-bean-validation&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e13506"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    If you're not using Maven make sure to have also all the transitive dependencies (see <fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-bean-validation/dependencies.html)"><fo:inline>jersey-bean-validation</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-bean-validation/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-bean-validation/dependencies.html</fo:basic-link>]</fo:inline>) on
                    the classpath.
                </fo:block></fo:block></fo:block>

            This module depends directly on
            <fo:basic-link external-destination="url(http://www.hibernate.org/subprojects/validator.html)"><fo:inline>Hibernate Validator</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://www.hibernate.org/subprojects/validator.html)">http://www.hibernate.org/subprojects/validator.html</fo:basic-link>]</fo:inline>
            which provides a most commonly used implementation of the Bean Validation API spec.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            If you want to use a different implementation of the Bean Validation API, use standard Maven mechanisms to exclude
            Hibernate Validator from the modules dependencies and add a dependency of your own.

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e13518">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.ext&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-bean-validation&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
    &lt;exclusions&gt;
        &lt;exclusion&gt;
            &lt;groupId&gt;org.hibernate&lt;/groupId&gt;
            &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;
        &lt;/exclusion&gt;
    &lt;/exclusions&gt;
&lt;/dependency&gt;</fo:block>
        </fo:block></fo:block><fo:block id="d0e13521"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Enabling Bean Validation in Jersey</fo:marker><fo:block font-size="20.735999999999997pt">18.2. Enabling Bean Validation in Jersey</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            As stated in <fo:basic-link internal-destination="deployment.autodiscoverable"><fo:inline>Section 4.3, “Auto-Discoverable Features”</fo:inline></fo:basic-link>, Jersey Bean Validation is one of the modules where you
            don't need to explicitly register it's <fo:inline font-family="monospace">Feature</fo:inline>s (<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/validation/ValidationFeature.html)"><fo:inline>ValidationFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/validation/ValidationFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/validation/ValidationFeature.html</fo:basic-link>]</fo:inline>) on the
            server as it's features are automatically discovered and registered when you add the
            <fo:inline font-family="monospace">jersey-bean-validation</fo:inline> module to your classpath.
            There are three Jersey specific properties that could disable automatic discovery and registration of Jersey Bean
            Validation integration module:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e13537"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e13538"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE)"><fo:inline>CommonProperties.FEATURE_AUTO_DISCOVERY_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE</fo:basic-link>]</fo:inline></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e13542"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE)"><fo:inline>ServerProperties.FEATURE_AUTO_DISCOVERY_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE</fo:basic-link>]</fo:inline></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e13546"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#BV_FEATURE_DISABLE)"><fo:inline>ServerProperties.BV_FEATURE_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#BV_FEATURE_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#BV_FEATURE_DISABLE</fo:basic-link>]</fo:inline></fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e13551"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Jersey does not support Bean Validation on the client at the moment.</fo:block></fo:block></fo:block>
        </fo:block></fo:block><fo:block id="d0e13555"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Configuring Bean Validation Support</fo:marker><fo:block font-size="20.735999999999997pt">18.3. Configuring Bean Validation Support</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Configuration of Bean Validation support in Jersey is twofold - there are few specific properties that affects Jersey
            behaviour (e.g. sending validation error entities to the client) and then there is <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/validation/ValidationConfig.html)"><fo:inline>ValidationConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/validation/ValidationConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/validation/ValidationConfig.html</fo:basic-link>]</fo:inline> class
            that configures <fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/Validator.html)"><fo:inline>Validator</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/Validator.html)">http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/Validator.html</fo:basic-link>]</fo:inline> used for validating resources in JAX-RS application.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            To configure Jersey specific behaviour you can use the following properties:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="d0e13568" provisional-distance-between-starts="24em * 0.60+1em" provisional-label-separation="1em"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e13569"><fo:list-item-label end-indent="label-end()" text-align="start"><fo:block><fo:inline><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#BV_DISABLE_VALIDATE_ON_EXECUTABLE_OVERRIDE_CHECK)"><fo:inline>ServerProperties.BV_DISABLE_VALIDATE_ON_EXECUTABLE_OVERRIDE_CHECK</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#BV_DISABLE_VALIDATE_ON_EXECUTABLE_OVERRIDE_CHECK)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#BV_DISABLE_VALIDATE_ON_EXECUTABLE_OVERRIDE_CHECK</fo:basic-link>]</fo:inline></fo:inline></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            Disables <fo:inline font-family="monospace">@ValidateOnExecution</fo:inline> check. More on this is described in
                            <fo:basic-link internal-destination="bv.ValidateOnExecution"><fo:inline>Section 18.5, “@ValidateOnExecution”</fo:inline></fo:basic-link>.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e13581"><fo:list-item-label end-indent="label-end()" text-align="start"><fo:block><fo:inline><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#BV_SEND_ERROR_IN_RESPONSE)"><fo:inline>ServerProperties.BV_SEND_ERROR_IN_RESPONSE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#BV_SEND_ERROR_IN_RESPONSE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#BV_SEND_ERROR_IN_RESPONSE</fo:basic-link>]</fo:inline></fo:inline></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            Enables sending validation errors in response entity to the client. More on this in
                            <fo:basic-link internal-destination="bv.ValidationError"><fo:inline>Section 18.7.1, “ValidationError”</fo:inline></fo:basic-link>.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="bv.example.jersey.properties"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 18.1. Configuring Jersey specific properties for Bean Validation.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e13594">  1 new ResourceConfig()
  2     // Now you can expect validation errors to be sent to the client.
  3     .property(ServerProperties.BV_SEND_ERROR_IN_RESPONSE, true)
  4     // @ValidateOnExecution annotations on subclasses won't cause errors.
  5     .property(ServerProperties.BV_DISABLE_VALIDATE_ON_EXECUTABLE_OVERRIDE_CHECK, true)
  6     // Further configuration of ResourceConfig.
  7     .register( ... );</fo:block></fo:block></fo:block>

            Customization of the <fo:inline font-family="monospace">Validator</fo:inline> used in validation of resource classes/methods can be done using
            <fo:inline font-family="monospace">ValidationConfig</fo:inline> class and exposing it via <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/ContextResolver.html)"><fo:inline>ContextResolver&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/ContextResolver.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/ContextResolver.html</fo:basic-link>]</fo:inline> mechanism as shown in
            <fo:basic-link internal-destination="bv.example.ValidationConfig"><fo:inline>Example 18.2, “Using <fo:inline font-family="monospace">ValidationConfig</fo:inline> to configure <fo:inline font-family="monospace">Validator</fo:inline>.”</fo:inline></fo:basic-link>. You can set custom instances for the following interfaces from
            the Bean Validation API:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e13608"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e13609"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        <fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/MessageInterpolator.html)"><fo:inline>MessageInterpolator</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/MessageInterpolator.html)">http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/MessageInterpolator.html</fo:basic-link>]</fo:inline> - interpolates a given constraint violation message.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e13615"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        <fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/TraversableResolver.html)"><fo:inline>TraversableResolver</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/TraversableResolver.html)">http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/TraversableResolver.html</fo:basic-link>]</fo:inline> - determines if a property can be accessed by the Bean Validation provider.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e13621"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        <fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/ConstraintValidatorFactory.html)"><fo:inline>ConstraintValidatorFactory</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/ConstraintValidatorFactory.html)">http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/ConstraintValidatorFactory.html</fo:basic-link>]</fo:inline> - instantiates a <fo:inline font-family="monospace">ConstraintValidator</fo:inline> instance based
                        off its class. Note that by setting a custom <fo:inline font-family="monospace">ConstraintValidatorFactory</fo:inline> you may loose
                        injection of available resources/providers at the moment. See <fo:basic-link internal-destination="bv.injecting"><fo:inline>Section 18.6, “Injecting”</fo:inline></fo:basic-link> how to
                        handle this.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e13635"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/ParameterNameProvider.html)"><fo:inline>ParameterNameProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/ParameterNameProvider.html)">http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/ParameterNameProvider.html</fo:basic-link>]</fo:inline> - provides names for method and constructor parameters.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="bv.example.ValidationConfig"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 18.2. Using <fo:inline font-family="monospace">ValidationConfig</fo:inline> to configure <fo:inline font-family="monospace">Validator</fo:inline>.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e13650">/**
 * Custom configuration of validation. This configuration defines custom:
 * &lt;ul&gt;
 *     &lt;li&gt;ConstraintValidationFactory - so that validators are able to inject Jersey providers/resources.&lt;/li&gt;
 *     &lt;li&gt;ParameterNameProvider - if method input parameters are invalid, this class returns actual parameter names
 *     instead of the default ones ({@code arg0, arg1, ..})&lt;/li&gt;
 * &lt;/ul&gt;
 */
public class ValidationConfigurationContextResolver implements ContextResolver&lt;ValidationConfig&gt; {

    @Context
    private ResourceContext resourceContext;

    @Override
    public ValidationConfig getContext(final Class&lt;?&gt; type) {
        final ValidationConfig config = new ValidationConfig();
        config.setConstraintValidatorFactory(resourceContext.getResource(InjectingConstraintValidatorFactory.class));
        config.setParameterNameProvider(new CustomParameterNameProvider());
        return config;
    }

    /**
     * See ContactCardTest#testAddInvalidContact.
     */
    private class CustomParameterNameProvider implements ParameterNameProvider {

        private final ParameterNameProvider nameProvider;

        public CustomParameterNameProvider() {
            nameProvider = Validation.byDefaultProvider().configure().getDefaultParameterNameProvider();
        }

        @Override
        public List&lt;String&gt; getParameterNames(final Constructor&lt;?&gt; constructor) {
            return nameProvider.getParameterNames(constructor);
        }

        @Override
        public List&lt;String&gt; getParameterNames(final Method method) {
            // See ContactCardTest#testAddInvalidContact.
            if ("addContact".equals(method.getName())) {
                return Arrays.asList("contact");
            }
            return nameProvider.getParameterNames(method);
        }
    }
}</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Register this class in your app:</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e13654">final Application application = new ResourceConfig()
        // Validation.
        .register(ValidationConfigurationContextResolver.class)
        // Further configuration.
        .register( ... );</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e13656"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">This code snippet has been taken from
                        <fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/bean-validation-webapp)"><fo:inline>Bean Validation example</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/bean-validation-webapp)">https://github.com/jersey/jersey/tree/2.28/examples/bean-validation-webapp</fo:basic-link>]</fo:inline>.
                    </fo:block></fo:block></fo:block></fo:block></fo:block>
        </fo:block></fo:block><fo:block id="d0e13663"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Validating JAX-RS resources and methods</fo:marker><fo:block font-size="20.735999999999997pt">18.4. Validating JAX-RS resources and methods</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            JAX-RS specification states that constraint annotations are allowed in the same locations as the following
            annotations: <fo:inline font-family="monospace">@MatrixParam</fo:inline>, <fo:inline font-family="monospace">@QueryParam</fo:inline>, <fo:inline font-family="monospace">@PathParam</fo:inline>, <fo:inline font-family="monospace">@CookieParam</fo:inline>,
            <fo:inline font-family="monospace">@HeaderParam</fo:inline> and <fo:inline font-family="monospace">@Context</fo:inline>, <fo:inline font-style="italic">except</fo:inline> in class constructors and property
            setters. Specifically, they are allowed in resource method parameters, fields and property getters as well as
            resource classes, entity parameters and resource methods (return values).
            Jersey provides support for validation (see following sections) annotated input parameters and return value of the
            invoked resource method as well as validation of resource class (class constraints, field constraints) where this
            resource method is placed.
            Jersey does not support, and doesn't validate, constraints placed on constructors and Bean Validation groups (only
            <fo:inline font-family="monospace">Default</fo:inline> group is supported at the moment).
        </fo:block><fo:block id="d0e13692"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Constraint Annotations</fo:marker><fo:block font-size="17.28pt">18.4.1. Constraint Annotations</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The JAX-RS Server API provides support for extracting request values and mapping them into Java fields,
                properties and parameters using annotations such as <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/HeaderParam.html)"><fo:inline>@HeaderParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/HeaderParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/HeaderParam.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/QueryParam.html)"><fo:inline>@QueryParam</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/QueryParam.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/QueryParam.html</fo:basic-link>]</fo:inline>, etc. It also
                supports mapping of the request entity bodies into Java objects via non-annotated parameters (i.e., parameters
                without any JAX-RS annotations).
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The Bean Validation specification supports the use of <fo:inline font-style="italic">constraint annotations</fo:inline>
                as a way of declaratively validating beans, method parameters and method returned values. For example, consider
                resource class from <fo:basic-link internal-destination="bv.example.constraints"><fo:inline>Example 18.3, “Constraint annotations on input parameters”</fo:inline></fo:basic-link> augmented with constraint annotations.

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="bv.example.constraints"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 18.3. Constraint annotations on input parameters</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e13713">@Path("/")
class MyResourceClass {

    @POST
    @Consumes("application/x-www-form-urlencoded")
    public void registerUser(
            @NotNull @FormParam("firstName") String firstName,
            @NotNull @FormParam("lastName") String lastName,
            @Email @FormParam("email") String email) {
        ...
    }
}</fo:block></fo:block></fo:block>

                The annotations <fo:inline font-family="monospace">@NotNull</fo:inline> and <fo:inline font-family="monospace">@Email</fo:inline> impose additional constraints on the form parameters
                <fo:inline font-family="monospace">firstName</fo:inline>, <fo:inline font-family="monospace">lastName</fo:inline> and <fo:inline font-family="monospace">email</fo:inline>. The <fo:inline font-family="monospace">@NotNull</fo:inline>
                constraint is built-in to the Bean Validation API; the <fo:inline font-family="monospace">@Email</fo:inline>
                constraint is assumed to be user defined in the example above. These constraint annotations are not restricted to
                method parameters, they can be used in any location in which JAX-RS binding annotations are allowed with the
                exception of constructors and property setters.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Rather than using method parameters, the <fo:inline font-family="monospace">MyResourceClass</fo:inline> shown above could have been written
                as in <fo:basic-link internal-destination="bv.example.constraints.fields"><fo:inline>Example 18.4, “Constraint annotations on fields”</fo:inline></fo:basic-link>.

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="bv.example.constraints.fields"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 18.4. Constraint annotations on fields</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e13747">@Path("/")
class MyResourceClass {

    @NotNull
    @FormParam("firstName")
    private String firstName;

    @NotNull
    @FormParam("lastName")
    private String lastName;

    private String email;

    @FormParam("email")
    public void setEmail(String email) {
        this.email = email;
    }

    @Email
    public String getEmail() {
        return email;
    }

    ...
}</fo:block></fo:block></fo:block>

                Note that in this version, <fo:inline font-family="monospace">firstName</fo:inline> and <fo:inline font-family="monospace">lastName</fo:inline> are fields initialized
                via injection and <fo:inline font-family="monospace">email</fo:inline> is a resource class property. Constraint annotations on properties are
                specified in their corresponding getters.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Constraint annotations are also allowed on resource classes. In addition to annotating fields and properties, an
                annotation can be defined for the entire class. Let us assume that <fo:inline font-family="monospace">@NonEmptyNames</fo:inline> validates
                that one of the two <fo:inline font-style="italic">name</fo:inline> fields in <fo:inline font-family="monospace">MyResourceClass</fo:inline> is provided. Using
                such an annotation, the example above can be extended to look like <fo:basic-link internal-destination="bv.example.constraints.class"><fo:inline>Example 18.5, “Constraint annotations on class”</fo:inline></fo:basic-link>

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="bv.example.constraints.class"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 18.5. Constraint annotations on class</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e13775">@Path("/")
@NonEmptyNames
class MyResourceClass {

    @NotNull
    @FormParam("firstName")
    private String firstName;

    @NotNull
    @FormParam("lastName")
    private String lastName;

    private String email;

    ...
}</fo:block></fo:block></fo:block>

                Constraint annotations on resource classes are useful for defining cross-field and cross-property constraints.
            </fo:block></fo:block><fo:block id="d0e13778"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Annotation constraints and Validators</fo:marker><fo:block font-size="17.28pt">18.4.2. Annotation constraints and Validators</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Annotation constraints and validators are defined in accordance with the Bean Validation specification.
                The <fo:inline font-family="monospace">@Email</fo:inline> annotation used in <fo:basic-link internal-destination="bv.example.constraints.fields"><fo:inline>Example 18.4, “Constraint annotations on fields”</fo:inline></fo:basic-link> is defined using the
                Bean Validation <fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/Constraint.html)"><fo:inline>@Constraint</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/Constraint.html)">http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/Constraint.html</fo:basic-link>]</fo:inline> meta-annotation, see <fo:basic-link internal-destination="bv.example.constraints.definition"><fo:inline>Example 18.6, “Definition of a constraint annotation”</fo:inline></fo:basic-link>.

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="bv.example.constraints.definition"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 18.6. Definition of a constraint annotation</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e13796">@Target({ METHOD, FIELD, PARAMETER })
@Retention(RUNTIME)
@Constraint(validatedBy = EmailValidator.class)
public @interface Email {

    String message() default "{com.example.validation.constraints.email}";

    Class&lt;?&gt;[] groups() default {};

    Class&lt;? extends Payload&gt;[] payload() default {};
}</fo:block></fo:block></fo:block>

                The <fo:inline font-family="monospace">@Constraint</fo:inline> annotation must include a reference to the validator class that will be used to validate
                decorated values. The <fo:inline font-family="monospace">EmailValidator</fo:inline> class must implement
                <fo:inline font-family="monospace">ConstraintValidator&lt;Email, T&gt;</fo:inline> where <fo:inline font-family="monospace">T</fo:inline> is the type of values being
                validated, as described in <fo:basic-link internal-destination="bv.example.validator.definition"><fo:inline>Example 18.7, “Validator implementation.”</fo:inline></fo:basic-link>.

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="bv.example.validator.definition"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 18.7. Validator implementation.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e13816">public class EmailValidator implements ConstraintValidator&lt;Email, String&gt; {

    public void initialize(Email email) {
        ...
    }

    public boolean isValid(String value, ConstraintValidatorContext context) {
        ...
    }
}</fo:block></fo:block></fo:block>

                Thus, <fo:inline font-family="monospace">EmailValidator</fo:inline> applies to values annotated with <fo:inline font-family="monospace">@Email</fo:inline> that are of type
                <fo:inline font-family="monospace">String</fo:inline>. Validators for other Java types can be defined for the same constraint annotation.
            </fo:block></fo:block><fo:block id="d0e13828"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Entity Validation</fo:marker><fo:block font-size="17.28pt">18.4.3. Entity Validation</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Request entity bodies can be mapped to resource method parameters. There are two ways in which these entities can
                be validated. If the request entity is mapped to a Java bean whose class is decorated with Bean Validation
                annotations, then validation can be enabled using <fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/Valid.html)"><fo:inline>@Valid</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/Valid.html)">http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/Valid.html</fo:basic-link>]</fo:inline> as in <fo:basic-link internal-destination="bv.example.constraints.entity"><fo:inline>Example 18.8, “Entity validation”</fo:inline></fo:basic-link>.

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="bv.example.constraints.entity"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 18.8. Entity validation</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e13841">@StandardUser
class User {

    @NotNull
    private String firstName;

    ...
}


@Path("/")
class MyResourceClass {

    @POST
    @Consumes("application/xml")
    public void registerUser(@Valid User user) {
        ...
    }
}</fo:block></fo:block></fo:block>

                In this case, the validator associated with <fo:inline font-family="monospace">@StandardUser</fo:inline> (as well as those for non-class
                level constraints like <fo:inline font-family="monospace">@NotNull</fo:inline>) will be called to verify the request entity mapped to
                <fo:inline font-family="monospace">user</fo:inline>.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Alternatively, a new annotation can be defined and used directly on the resource
                method parameter (<fo:basic-link internal-destination="bv.example.constraints.entity2"><fo:inline>Example 18.9, “Entity validation 2”</fo:inline></fo:basic-link>).

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="bv.example.constraints.entity2"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 18.9. Entity validation 2</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e13860">@Path("/")
class MyResourceClass {

    @POST
    @Consumes("application/xml")
    public void registerUser(@PremiumUser User user) {
        ...
    }
}</fo:block></fo:block></fo:block>

                In the example above, <fo:inline font-family="monospace">@PremiumUser</fo:inline> rather than <fo:inline font-family="monospace">@StandardUser</fo:inline> will be used
                to validate the request entity. These two ways in which validation of entities can be triggered can also be
                combined by including <fo:inline font-family="monospace">@Valid</fo:inline> in the list of constraints. The presence of <fo:inline font-family="monospace">@Valid</fo:inline> will trigger
                validation of <fo:inline font-style="italic">all</fo:inline> the constraint annotations decorating a Java bean class.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Response entity bodies returned from resource methods can be validated in a similar manner by annotating the
                resource method itself. To exemplify, assuming both <fo:inline font-family="monospace">@StandardUser</fo:inline> and
                <fo:inline font-family="monospace">@PremiumUser</fo:inline> are required to be checked before returning a user, the
                <fo:inline font-family="monospace">getUser</fo:inline> method can be annotated as shown in
                <fo:basic-link internal-destination="bv.example.constraints.entity.response"><fo:inline>Example 18.10, “Response entity validation”</fo:inline></fo:basic-link>.
                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="bv.example.constraints.entity.response"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 18.10. Response entity validation</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e13894">@Path("/")
class MyResourceClass {

    @GET
    @Path("{id}")
    @Produces("application/xml")
    @Valid @PremiumUser
    public User getUser(@PathParam("id") String id) {
        User u = findUser(id);
        return u;
    }

    ...
}</fo:block></fo:block></fo:block>

                Note that <fo:inline font-family="monospace">@PremiumUser</fo:inline> is explicitly listed and <fo:inline font-family="monospace">@StandardUser</fo:inline> is triggered
                by the presence of the <fo:inline font-family="monospace">@Valid</fo:inline> annotation - see definition of <fo:inline font-family="monospace">User</fo:inline> class earlier in
                this section.
            </fo:block></fo:block><fo:block id="d0e13909"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Annotation Inheritance</fo:marker><fo:block font-size="17.28pt">18.4.4. Annotation Inheritance</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The rules for inheritance of constraint annotation are defined in Bean Validation specification. It is worth
                noting that these rules are incompatible with those defined by JAX-RS. Generally speaking, constraint
                annotations in Bean Validation are cumulative (can be strengthen) across a given type hierarchy while JAX-RS
                annotations are inherited or, overridden and ignored.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                For Bean Validation annotations Jersey follows the constraint annotation rules defined in the Bean Validation
                specification.
            </fo:block></fo:block></fo:block><fo:block id="bv.ValidateOnExecution"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">@ValidateOnExecution</fo:marker><fo:block font-size="20.735999999999997pt">18.5. @ValidateOnExecution</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            According to Bean Validation specification, validation is enabled by default only for the so called
            <fo:inline font-style="italic">constrained</fo:inline> methods. Getter
            methods as defined by the Java Beans specification are not constrained methods, so they will not be validated by
            default. The special annotation <fo:inline font-family="monospace">@ValidateOnExecution</fo:inline> can be used to selectively enable
            and disable validation. For example, you can enable validation on method <fo:inline font-family="monospace">getEmail</fo:inline> shown in
            <fo:basic-link internal-destination="bv.example.validateonexecution"><fo:inline>Example 18.11, “Validate getter on execution”</fo:inline></fo:basic-link>.
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="bv.example.validateonexecution"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 18.11. Validate getter on execution</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e13935">@Path("/")
class MyResourceClass {

    @Email
    @ValidateOnExecution
    public String getEmail() {
        return email;
    }

    ...
}</fo:block></fo:block></fo:block>

            The default value for the <fo:inline font-family="monospace">type</fo:inline> attribute of <fo:inline font-family="monospace">@ValidateOnExecution</fo:inline> is
            <fo:inline font-family="monospace">IMPLICIT</fo:inline> which results in method <fo:inline font-family="monospace">getEmail</fo:inline> being validated.
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e13950"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    According to Bean Validation specification <fo:inline font-family="monospace">@ValidateOnExecution</fo:inline> cannot be overridden once is
                    declared on a method (i.e. in subclass/sub-interface) and in this situations a
                    <fo:inline font-family="monospace">ValidationException</fo:inline> should be raised. This default behaviour can be suppressed by
                    setting <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#BV_DISABLE_VALIDATE_ON_EXECUTABLE_OVERRIDE_CHECK)"><fo:inline>ServerProperties.BV_DISABLE_VALIDATE_ON_EXECUTABLE_OVERRIDE_CHECK</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#BV_DISABLE_VALIDATE_ON_EXECUTABLE_OVERRIDE_CHECK)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#BV_DISABLE_VALIDATE_ON_EXECUTABLE_OVERRIDE_CHECK</fo:basic-link>]</fo:inline>
                    property (Jersey specific) to <fo:inline font-family="monospace">true</fo:inline>.
                </fo:block></fo:block></fo:block>
        </fo:block></fo:block><fo:block id="bv.injecting"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Injecting</fo:marker><fo:block font-size="20.735999999999997pt">18.6. Injecting</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Jersey allows you to inject registered resources/providers into your <fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/ConstraintValidator.html)"><fo:inline>ConstraintValidator</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/ConstraintValidator.html)">http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/ConstraintValidator.html</fo:basic-link>]</fo:inline> implementation and you
            can inject <fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/Configuration.html)"><fo:inline>Configuration</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/Configuration.html)">http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/Configuration.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/ValidatorFactory.html)"><fo:inline>ValidatorFactory</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/ValidatorFactory.html)">http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/ValidatorFactory.html</fo:basic-link>]</fo:inline> and <fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/Validator.html)"><fo:inline>Validator</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/Validator.html)">http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/Validator.html</fo:basic-link>]</fo:inline> as required by Bean Validation spec.

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e13983"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Injected <fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/Configuration.html)"><fo:inline>Configuration</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/Configuration.html)">http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/Configuration.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/ValidatorFactory.html)"><fo:inline>ValidatorFactory</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/ValidatorFactory.html)">http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/ValidatorFactory.html</fo:basic-link>]</fo:inline> and <fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/Validator.html)"><fo:inline>Validator</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/Validator.html)">http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/Validator.html</fo:basic-link>]</fo:inline> do not inherit configuration provided
                    by <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/validation/ValidationConfig.html)"><fo:inline>ValidationConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/validation/ValidationConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/validation/ValidationConfig.html</fo:basic-link>]</fo:inline> and need to be configured manually.
                </fo:block></fo:block></fo:block>

            Injection of JAX-RS components into <fo:inline font-family="monospace">ConstraintValidator</fo:inline>s is supported via a custom
            <fo:inline font-family="monospace">ConstraintValidatorFactory</fo:inline> provided by Jersey. An example is shown in
            <fo:basic-link internal-destination="bv.examples.injecting"><fo:inline>Example 18.12, “Injecting UriInfo into a ConstraintValidator”</fo:inline></fo:basic-link>.

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="bv.examples.injecting"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 18.12. Injecting UriInfo into a ConstraintValidator</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14010">public class EmailValidator implements ConstraintValidator&lt;Email, String&gt; {

    @Context
    private UriInfo uriInfo;

    public void initialize(Email email) {
        ...
    }

    public boolean isValid(String value, ConstraintValidatorContext context) {
        // Use UriInfo.

        ...
    }
}</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Using a custom <fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/ConstraintValidatorFactory.html)"><fo:inline>ConstraintValidatorFactory</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/ConstraintValidatorFactory.html)">http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/ConstraintValidatorFactory.html</fo:basic-link>]</fo:inline> of your own disables registration of the one provided by Jersey
            and injection support for resources/providers (if needed) has to be provided by this new implementation.
            <fo:basic-link internal-destination="bv.examples.injecting.factory"><fo:inline>Example 18.13, “Support for injecting Jersey's resources/providers via ConstraintValidatorFactory.”</fo:inline></fo:basic-link> shows how this can be achieved.

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="bv.examples.injecting.factory"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 18.13. Support for injecting Jersey's resources/providers via ConstraintValidatorFactory.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14023">public class InjectingConstraintValidatorFactory implements ConstraintValidatorFactory {

    @Context
    private ResourceContext resourceContext;

    @Override
    public &lt;T extends ConstraintValidator&lt;?, ?&gt;&gt; T getInstance(final Class&lt;T&gt; key) {
        return resourceContext.getResource(key);
    }

    @Override
    public void releaseInstance(final ConstraintValidator&lt;?, ?&gt; instance) {
        // NOOP
    }
}</fo:block></fo:block></fo:block>
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e14026"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    This behaviour may likely change in one of the next version of Jersey to remove the need of
                    manually providing support for injecting resources/providers from Jersey in your own
                    <fo:inline font-family="monospace">ConstraintValidatorFactory</fo:inline> implementation code.
                </fo:block></fo:block></fo:block>
        </fo:block></fo:block><fo:block id="d0e14033"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Error Reporting</fo:marker><fo:block font-size="20.735999999999997pt">18.7. Error Reporting</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Bean Validation specification defines a small hierarchy of exceptions (they all inherit from
            <fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/ValidationException.html)"><fo:inline>ValidationException</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/ValidationException.html)">http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/ValidationException.html</fo:basic-link>]</fo:inline>) that could be thrown during initialization of validation engine or (for our case more
            importantly) during validation of input/output values (<fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/ConstraintViolationException.html)"><fo:inline>ConstraintViolationException</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/ConstraintViolationException.html)">http://docs.jboss.org/hibernate/beanvalidation/spec/1.1/api/javax/validation/ConstraintViolationException.html</fo:basic-link>]</fo:inline>).
            If a thrown exception is a subclass of <fo:inline font-family="monospace">ValidationException</fo:inline> <fo:inline font-style="italic">except</fo:inline>
            <fo:inline font-family="monospace">ConstraintViolationException</fo:inline> then this exception is mapped to a HTTP response with status code 500
            (Internal Server Error).
            On the other hand, when a <fo:inline font-family="monospace">ConstraintViolationException</fo:inline> is throw two different status code would be returned:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e14056"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14057"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>500 (Internal Server Error)</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">If the exception was thrown while validating a method return type.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14062"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>400 (Bad Request)</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Otherwise.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
        </fo:block><fo:block id="bv.ValidationError"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">ValidationError</fo:marker><fo:block font-size="17.28pt">18.7.1. ValidationError</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                By default, (during mapping <fo:inline font-family="monospace">ConstraintViolationException</fo:inline>s) Jersey doesn't return any entities that would
                include validation errors to the client. This default behaviour could be changed by enabling
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#BV_SEND_ERROR_IN_RESPONSE)"><fo:inline>ServerProperties.BV_SEND_ERROR_IN_RESPONSE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#BV_SEND_ERROR_IN_RESPONSE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#BV_SEND_ERROR_IN_RESPONSE</fo:basic-link>]</fo:inline> property in your application
                (<fo:basic-link internal-destination="bv.example.jersey.properties"><fo:inline>Example 18.1, “Configuring Jersey specific properties for Bean Validation.”</fo:inline></fo:basic-link>).
                When this property is enabled then our custom <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/ExceptionMapper.html)"><fo:inline>ExceptionMapper&lt;E extends Throwable&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/ExceptionMapper.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/ExceptionMapper.html</fo:basic-link>]</fo:inline> (that is handling
                <fo:inline font-family="monospace">ValidationException</fo:inline>s) would transform <fo:inline font-family="monospace">ConstraintViolationException</fo:inline>(s) into
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/validation/ValidationError.html)"><fo:inline>ValidationError</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/validation/ValidationError.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/validation/ValidationError.html</fo:basic-link>]</fo:inline>(s) and set this object (collection) as the new response entity which Jersey is
                able to sent to the client.
                Four <fo:inline font-family="monospace">MediaType</fo:inline>s are currently supported when sending <fo:inline font-family="monospace">ValidationError</fo:inline>s to the
                client:

                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e14099"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14100"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-family="monospace">text/plain</fo:inline></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14104"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-family="monospace">text/html</fo:inline></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14108"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-family="monospace">application/xml</fo:inline></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14112"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-family="monospace">application/json</fo:inline></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e14116"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Note: You need to register one of the JSON (JAXB) providers (e.g.
                                <fo:basic-link internal-destination="json.moxy"><fo:inline>MOXy</fo:inline></fo:basic-link>) to marshall validation errors to JSON.
                            </fo:block></fo:block></fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Let's take a look at <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/validation/ValidationError.html)"><fo:inline>ValidationError</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/validation/ValidationError.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/validation/ValidationError.html</fo:basic-link>]</fo:inline> class to see which properties are send to the client:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14128">@XmlRootElement
public final class ValidationError {

    private String message;

    private String messageTemplate;

    private String path;

    private String invalidValue;

    ...
}</fo:block>

                The <fo:inline font-family="monospace">message</fo:inline> property is the interpolated error message, <fo:inline font-family="monospace">messageTemplate</fo:inline>
                represents a non-interpolated error message (or key from your constraint definition e.g.
                <fo:inline font-family="monospace">{javax.validation.constraints.NotNull.message}</fo:inline>), <fo:inline font-family="monospace">path</fo:inline> contains information
                about the path in the validated object graph to the property holding invalid value and
                <fo:inline font-family="monospace">invalidValue</fo:inline> is the string representation of the invalid value itself.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Here are few examples of <fo:inline font-family="monospace">ValidationError</fo:inline> messages sent to client:

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e14151"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 18.14. <fo:inline font-family="monospace">ValidationError</fo:inline> to <fo:inline font-family="monospace">text/plain</fo:inline></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14158">HTTP/1.1 500 Internal Server Error
Content-Length: 114
Content-Type: text/plain
Vary: Accept
Server: Jetty(6.1.24)

Contact with given ID does not exist. (path = ContactCardResource.getContact.&lt;return value&gt;, invalidValue = null)</fo:block></fo:block></fo:block>

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e14161"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 18.15. <fo:inline font-family="monospace">ValidationError</fo:inline> to <fo:inline font-family="monospace">text/html</fo:inline></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14168">HTTP/1.1 500 Internal Server Error
Content-Length: ...
Content-Type: text/plain
Vary: Accept
Server: Jetty(6.1.24)

&lt;div class="validation-errors"&gt;
    &lt;div class="validation-error"&gt;
        &lt;span class="message"&gt;Contact with given ID does not exist.&lt;/span&gt;
        (
        &lt;span class="path"&gt;
            &lt;strong&gt;path&lt;/strong&gt;
            = ContactCardResource.getContact.&lt;return value&gt;
        &lt;/span&gt;
        ,
        &lt;span class="invalid-value"&gt;
            &lt;strong&gt;invalidValue&lt;/strong&gt;
            = null
        &lt;/span&gt;
        )
    &lt;/div&gt;
&lt;/div&gt;</fo:block></fo:block></fo:block>

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e14171"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 18.16. <fo:inline font-family="monospace">ValidationError</fo:inline> to <fo:inline font-family="monospace">application/xml</fo:inline></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14178">HTTP/1.1 500 Internal Server Error
Content-Length: ...
Content-Type: text/plain
Vary: Accept
Server: Jetty(6.1.24)

&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;validationErrors&gt;
    &lt;validationError&gt;
        &lt;message&gt;Contact with given ID does not exist.&lt;/message&gt;
        &lt;messageTemplate&gt;{contact.does.not.exist}&lt;/messageTemplate&gt;
        &lt;path&gt;ContactCardResource.getContact.&amp;lt;return value&amp;gt;&lt;/path&gt;
    &lt;/validationError&gt;
&lt;/validationErrors&gt;</fo:block></fo:block></fo:block>

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e14181"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 18.17. <fo:inline font-family="monospace">ValidationError</fo:inline> to <fo:inline font-family="monospace">application/json</fo:inline></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14188">HTTP/1.1 500 Internal Server Error
Content-Length: 174
Content-Type: application/json
Vary: Accept
Server: Jetty(6.1.24)

[ {
   "message" : "Contact with given ID does not exist.",
   "messageTemplate" : "{contact.does.not.exist}",
   "path" : "ContactCardResource.getContact.&lt;return value&gt;"
} ]</fo:block></fo:block></fo:block>
            </fo:block></fo:block></fo:block><fo:block id="d0e14191"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Example</fo:marker><fo:block font-size="20.735999999999997pt">18.8. Example</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To see a complete working example of using Bean Validation (JSR-349) with Jersey refer to the
            <fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/bean-validation-webapp)"><fo:inline>Bean Validation Example</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/bean-validation-webapp)">https://github.com/jersey/jersey/tree/2.28/examples/bean-validation-webapp</fo:basic-link>]</fo:inline>.</fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Entity Data Filtering</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Entity Data Filtering</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="entity-filtering"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 19. Entity Data Filtering</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Support for Entity Filtering in Jersey introduces a convenient facility for reducing the amount of data exchanged over
        the wire between client and server without a need to create specialized data view components. The main idea behind this
        feature is to give you APIs that will let you to selectively filter out any non-relevant data from the marshalled object
        model before sending the data to the other party based on the context of the particular message exchange.
        This way, only the necessary or relevant portion of the data is transferred over the network with each client request
        or server response, without a need to create special facade models for transferring these limited subsets of the model
        data.
    </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Entity filtering feature allows you to define your own entity-filtering rules for your entity classes based on the
        current context (e.g. matched resource method) and keep these rules in one place (directly in your domain model).
        With Jersey entity filtering facility it is also possible to assign security access rules to entity classes properties
        and property accessors.
    </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        We will first explain the main concepts and then we will explore the entity filtering feature topics from a perspective
        of basic use-cases,

        <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e14209"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14210"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link internal-destination="ef.annotations"><fo:inline>Section 19.3, “Using custom annotations to filter entities”</fo:inline></fo:basic-link></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14213"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link internal-destination="ef.security.annotations"><fo:inline>Section 19.4, “Role-based Entity Filtering using (<fo:inline font-family="monospace">javax.annotation.security</fo:inline>) annotations”</fo:inline></fo:basic-link></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14216"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link internal-destination="ef.selectable.annotations"><fo:inline>Section 19.5, “Entity Filtering based on dynamic and configurable query parameters”</fo:inline></fo:basic-link></fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

        as well as some more complex ones.

        <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e14220"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14221"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link internal-destination="ef.custom.annotations"><fo:inline>Section 19.6, “Defining custom handling for entity-filtering annotations”</fo:inline></fo:basic-link></fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
    </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e14225"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Jersey entity filtering feature is supported via Jersey extension modules listed in <fo:basic-link internal-destination="ef.modules"><fo:inline>Section 19.8, “Modules with support for Entity Data Filtering”</fo:inline></fo:basic-link>.
        </fo:block></fo:block></fo:block><fo:block id="d0e14230"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Enabling and configuring Entity Filtering in your application</fo:marker><fo:block font-size="20.735999999999997pt">19.1. Enabling and configuring Entity Filtering in your application</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Entity Filtering support in Jersey is provided as an extension module and needs to be mentioned explicitly in your
            <fo:inline font-family="monospace">pom.xml</fo:inline> file (in case of using Maven):

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14238">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.ext&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-entity-filtering&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e14241"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    If you're not using Maven make sure to have also all the transitive dependencies
                    (see <fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-entity-filtering/dependencies.html)"><fo:inline>jersey-entity-filtering</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-entity-filtering/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-entity-filtering/dependencies.html</fo:basic-link>]</fo:inline>) on the classpath.
                </fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The entity-filtering extension module provides three <fo:inline font-family="monospace">Feature</fo:inline>s which you can register into server/client
            runtime in prior to use Entity Filtering in an application:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e14253"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14254"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/EntityFilteringFeature.html)"><fo:inline>EntityFilteringFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/EntityFilteringFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/EntityFilteringFeature.html</fo:basic-link>]</fo:inline></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        Filtering based on entity-filtering annotations (or i.e. external configuration file) created using
                        <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/EntityFiltering.html)"><fo:inline>@EntityFiltering</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/EntityFiltering.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/EntityFiltering.html</fo:basic-link>]</fo:inline> meta-annotation.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14263"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/SecurityEntityFilteringFeature.html)"><fo:inline>SecurityEntityFilteringFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/SecurityEntityFilteringFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/SecurityEntityFilteringFeature.html</fo:basic-link>]</fo:inline></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Filtering based on security (<fo:inline font-family="monospace">javax.annotation.security</fo:inline>) and entity-filtering
                        annotations.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14272"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/SelectableEntityFilteringFeature.html)"><fo:inline>SelectableEntityFilteringFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/SelectableEntityFilteringFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/SelectableEntityFilteringFeature.html</fo:basic-link>]</fo:inline></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Filtering based on dynamic and configurable query parameters.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

            If you want to use both entity-filtering annotations and security annotations for entity data filtering it is enough
            to register <fo:inline font-family="monospace">SecurityEntityFilteringFeature</fo:inline> as this feature registers also
            <fo:inline font-family="monospace">EntityFilteringFeature</fo:inline>.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Entity-filtering currently recognizes one property that can be passed into the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configuration.html)"><fo:inline>Configuration</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configuration.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configuration.html</fo:basic-link>]</fo:inline> instance
            (client/server):

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e14290"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14291"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/EntityFilteringFeature.html#ENTITY_FILTERING_SCOPE)"><fo:inline>EntityFilteringFeature.ENTITY_FILTERING_SCOPE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/EntityFilteringFeature.html#ENTITY_FILTERING_SCOPE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/EntityFilteringFeature.html#ENTITY_FILTERING_SCOPE</fo:basic-link>]</fo:inline> - "<fo:inline font-family="monospace">jersey.config.entityFiltering.scope</fo:inline>"</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        Defines one or more annotations that should be used as entity-filtering scope when reading/writing an
                        entity.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e14302"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Processing of entity-filtering annotations to create an entity-filtering scope is defined by
                    following: "<fo:inline font-family="monospace">Request/Resource entity annotations</fo:inline>" &gt;
                    "<fo:inline font-family="monospace">Configuration</fo:inline>" &gt; "<fo:inline font-family="monospace">Resource method/class annotations</fo:inline>"
                    (on server).
                </fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            You can configure entity-filtering on server (basic + security examples) as follows:

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="ef.example.server.registration"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 19.1. Registering and configuring entity-filtering feature on server.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14320">  1 new ResourceConfig()
  2     // Set entity-filtering scope via configuration.
  3     .property(EntityFilteringFeature.ENTITY_FILTERING_SCOPE, new Annotation[] {ProjectDetailedView.Factory.get()})
  4     // Register the EntityFilteringFeature.
  5     .register(EntityFilteringFeature.class)
  6     // Further configuration of ResourceConfig.
  7     .register( ... );</fo:block></fo:block></fo:block>

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="ef.example.server.security.registration"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 19.2. Registering and configuring entity-filtering feature with security annotations on server.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14326">  1 new ResourceConfig()
  2     // Set entity-filtering scope via configuration.
  3     .property(EntityFilteringFeature.ENTITY_FILTERING_SCOPE, new Annotation[] {SecurityAnnotations.rolesAllowed("manager")})
  4     // Register the SecurityEntityFilteringFeature.
  5     .register(SecurityEntityFilteringFeature.class)
  6     // Further configuration of ResourceConfig.
  7     .register( ... );</fo:block></fo:block></fo:block>

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="ef.example.server.selectable.registration"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 19.3. Registering and configuring entity-filtering feature based on dynamic and configurable query parameters.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14332">  1 new ResourceConfig()
  2     // Set query parameter name for dynamic filtering
  3     .property(SelectableEntityFilteringFeature.QUERY_PARAM_NAME, "select")
  4     // Register the SelectableEntityFilteringFeature.
  5     .register(SelectableEntityFilteringFeature.class)
  6     // Further configuration of ResourceConfig.
  7     .register( ... );</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Use similar steps to register entity-filtering on client:

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="ef.example.client.registration"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 19.4. Registering and configuring entity-filtering feature on client.</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14340">  1 final ClientConfig config = new ClientConfig()
  2     // Set entity-filtering scope via configuration.
  3     .property(EntityFilteringFeature.ENTITY_FILTERING_SCOPE, new Annotation[] {ProjectDetailedView.Factory.get()})
  4     // Register the EntityFilteringFeature.
  5     .register(EntityFilteringFeature.class)
  6     // Further configuration of ClientConfig.
  7     .register( ... );
  8 
  9 // Create new client.
 10 final Client client = ClientClientBuilder.newClient(config);
 11 
 12 // Use the client.</fo:block></fo:block></fo:block>
        </fo:block></fo:block><fo:block id="d0e14343"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Components used to describe Entity Filtering concepts</fo:marker><fo:block font-size="20.735999999999997pt">19.2. Components used to describe Entity Filtering concepts</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In the next section the entity-filtering features will be illustrated on a project-tracking application that
            contains three classes in it's domain model and few resources (only <fo:inline font-family="monospace">Project</fo:inline> resource will be
            shown in this chapter). The full source code for the example application can be found in Jersey
            <fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/entity-filtering)"><fo:inline>Entity Filtering example</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/entity-filtering)">https://github.com/jersey/jersey/tree/2.28/examples/entity-filtering</fo:basic-link>]</fo:inline>.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Suppose there are three domain model classes (or entities) in our model:
            <fo:inline font-family="monospace">Project</fo:inline>, <fo:inline font-family="monospace">User</fo:inline> and <fo:inline font-family="monospace">Task</fo:inline> (getters/setter are omitted for
            brevity).

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e14365"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 19.5. Project</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14368">  1 public class Project {
  2 
  3     private Long id;
  4 
  5     private String name;
  6 
  7     private String description;
  8 
  9     private List&lt;Task&gt; tasks;
 10 
 11     private List&lt;User&gt; users;
 12 
 13     // getters and setters
 14 }</fo:block></fo:block></fo:block>

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e14371"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 19.6. User</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14374">  1 public class User {
  2 
  3     private Long id;
  4 
  5     private String name;
  6 
  7     private String email;
  8 
  9     private List&lt;Project&gt; projects;
 10 
 11     private List&lt;Task&gt; tasks;
 12 
 13     // getters and setters
 14 }</fo:block></fo:block></fo:block>

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e14377"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 19.7. Task</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14380">  1 public class Task {
  2 
  3     private Long id;
  4 
  5     private String name;
  6 
  7     private String description;
  8 
  9     private Project project;
 10 
 11     private User user;
 12 
 13     // getters and setters
 14 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            To retrieve the entities from server to client, we have created also a couple of JAX-RS resources from whose the
            <fo:inline font-family="monospace">ProjectsResource</fo:inline> is shown as example.

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e14388"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 19.8. ProjectsResource</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14391">  1 @Path("projects")
  2 @Produces("application/json")
  3 public class ProjectsResource {
  4 
  5     @GET
  6     @Path("{id}")
  7     public Project getProject(@PathParam("id") final Long id) {
  8         return getDetailedProject(id);
  9     }
 10 
 11     @GET
 12     public List&lt;Project&gt; getProjects() {
 13         return getDetailedProjects();
 14     }
 15 }</fo:block></fo:block></fo:block>
        </fo:block></fo:block><fo:block id="ef.annotations"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Using custom annotations to filter entities</fo:marker><fo:block font-size="20.735999999999997pt">19.3. Using custom annotations to filter entities</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Entity filtering via annotations is based on an <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/EntityFiltering.html)"><fo:inline>@EntityFiltering</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/EntityFiltering.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/EntityFiltering.html</fo:basic-link>]</fo:inline> meta-annotation.
            This meta-annotation is used to identify entity-filtering annotations that can be then attached to

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e14402"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14403"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>domain model classes (supported on both, server and client sides), and</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14406"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>resource methods / resource classes (only on server side)</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

            An example of entity-filtering annotation applicable to a class, field or method can be seen in
            <fo:basic-link internal-destination="ef.annotations.sample.annotation"><fo:inline>Example 19.9, “ProjectDetailedView”</fo:inline></fo:basic-link> below.

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="ef.annotations.sample.annotation"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 19.9. ProjectDetailedView</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14415">  1 @Target({ElementType.TYPE, ElementType.METHOD, ElementType.FIELD})
  2 @Retention(RetentionPolicy.RUNTIME)
  3 @Documented
  4 @EntityFiltering
  5 public @interface ProjectDetailedView {
  6 
  7     /**
  8      * Factory class for creating instances of {@code ProjectDetailedView} annotation.
  9      */
 10     public static class Factory
 11                         extends AnnotationLiteral&lt;ProjectDetailedView&gt;
 12                         implements ProjectDetailedView {
 13 
 14         private Factory() {
 15         }
 16 
 17         public static ProjectDetailedView get() {
 18             return new Factory();
 19         }
 20     }
 21 }</fo:block></fo:block></fo:block>

        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Since creating annotation instances directly in Java code is not trivial, it is a good practice to provide an inner
            annotation <fo:inline font-family="monospace">Factory</fo:inline> class in each custom filtering annotation, through which new instances of
            the annotation can be directly created. The annotation factory class can be created by extending the HK2
            <fo:inline font-family="monospace">AnnotationLiteral</fo:inline> class and implementing the annotation interface itself. It should also provide
            a static factory method that will create and return a new instance of the <fo:inline font-family="monospace">Factory</fo:inline> class when
            invoked. Such annotation instances can be then passed to the client and server run-times to define or override
            entity-filtering scopes.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            By placing an entity-filtering annotation on an entity (class, fields, getters or setters) we define a so-called
            <fo:inline font-style="italic">entity-filtering scope</fo:inline> for the entity. The purpose of entity-filtering scope is to identify
            parts of the domain model that should be processed when the model is to be sent over the wire in a particular
            entity-filtering scope. We distinguish between:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e14434"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14435"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        global entity-filtering scope (defined by placing filtering annotation on a class itself), and
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14438"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        local entity-filtering scope (defined by placing filtering annotation on a field, getter or setter)
                    </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

            Unannotated members of a domain model class are automatically added to all existing global entity-filtering scopes.
            If there is no explicit global entity-filtering scope defined on a class a default scope is created for this class
            to group these members.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Creating entity-filtering scopes using custom entity-filtering annotations in domain model classes is illustrated
            in the following examples.

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e14444"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 19.10. Annotated Project</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14447">  1 public class Project {
  2 
  3     private Long id;
  4 
  5     private String name;
  6 
  7     private String description;
  8 
  9     @ProjectDetailedView
 10     private List&lt;Task&gt; tasks;
 11 
 12     @ProjectDetailedView
 13     private List&lt;User&gt; users;
 14 
 15     // getters and setters
 16 }</fo:block></fo:block></fo:block>

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e14450"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 19.11. Annotated User</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14453">  1 public class User {
  2 
  3     private Long id;
  4 
  5     private String name;
  6 
  7     private String email;
  8 
  9     @UserDetailedView
 10     private List&lt;Project&gt; projects;
 11 
 12     @UserDetailedView
 13     private List&lt;Task&gt; tasks;
 14 
 15     // getters and setters
 16 }</fo:block></fo:block></fo:block>

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e14456"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 19.12. Annotated Task</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14459">  1 public class Task {
  2 
  3     private Long id;
  4 
  5     private String name;
  6 
  7     private String description;
  8 
  9     @TaskDetailedView
 10     private Project project;
 11 
 12     @TaskDetailedView
 13     private User user;
 14 
 15     // getters and setters
 16 }</fo:block></fo:block></fo:block>

            As you can see in the examples above, we have defined 3 separate scopes using <fo:inline font-family="monospace">@ProjectDetailedView</fo:inline>,
            <fo:inline font-family="monospace">@UserDetailedView</fo:inline> and <fo:inline font-family="monospace">@TaskDetailedView</fo:inline> annotations and we have applied
            these scopes selectively to certain fields in the domain model classes.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Once the entity-filtering scopes are applied to the parts of a domain model, the entity filtering facility (when
            enabled) will check the active scopes when the model is being sent over the wire, and filter out all parts from
            the model for which there is no active scope set in the given context. Therefore, we need a way how to control
            the scopes active in any given context in order to process the model data in a certain way (e.g. expose the detailed
            view). We need to tell the server/client runtime which entity-filtering scopes we want to apply. There are 2 ways
            how to do this for client-side and 3 ways for server-side:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e14473"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14474"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Out-bound client request or server response programmatically created with entity-filtering annotations
                        that identify the scopes to be applied (available on both, client and server)</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14477"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Property identifying the applied scopes passed through <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configuration.html)"><fo:inline>Configuration</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configuration.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configuration.html</fo:basic-link>]</fo:inline>
                        (available on both, client and server)</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14483"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Entity-filtering annotations identifying the applied scopes attached to a resource method or class
                        (server-side only)</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

            When the multiple approaches are combined, the priorities of calculating the applied scopes are as follows:
            <fo:inline font-family="monospace">Entity annotations in request or response</fo:inline> &gt;
            <fo:inline font-family="monospace">Property passed through Configuration</fo:inline> &gt;
            <fo:inline font-family="monospace">Annotations applied to a resource method or class</fo:inline>.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In a graph of domain model objects, the entity-filtering scopes are applied to the root node as well as transitively
            to all the child nodes. Fields and child nodes that do not match at least a single active scope are filtered out.
            When the scope matching is performed, annotations applied to the domain model classes and fields
            are used to compute the scope for each particular component of the model. If there are no annotations on the class
            or it's fields, the default scope is assumed. During the filtering, first, the annotations on root model class
            and it's fields are considered. For all composite fields that have not been filtered out, the annotations on the
            referenced child class and it's fields are considered next, and so on.
        </fo:block><fo:block id="d0e14498"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Server-side Entity Filtering</fo:marker><fo:block font-size="17.28pt">19.3.1. Server-side Entity Filtering</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                To pass entity-filtering annotations via <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html)"><fo:inline>Response</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.html</fo:basic-link>]</fo:inline> returned from a resource method you can leverage the
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.ResponseBuilder.html#entity(java.lang.Object, java.lang.annotation.Annotation[]))"><fo:inline>Response.ResponseBuilder#entity(Object, Annotation[])</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.ResponseBuilder.html#entity(java.lang.Object, java.lang.annotation.Annotation[]))">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Response.ResponseBuilder.html#entity(java.lang.Object, java.lang.annotation.Annotation[])</fo:basic-link>]</fo:inline>
                method. The next example illustrates this approach. You will also see why every custom entity-filtering
                annotation should contain a factory for creating instances of the annotation.

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e14509"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 19.13. ProjectsResource - Response entity-filtering annotations</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14512">  1 @Path("projects")
  2 @Produces("application/json")
  3 public class ProjectsResource {
  4 
  5     @GET
  6     public Response getProjects(@QueryParam("detailed") final boolean isDetailed) {
  7         return Response
  8                 .ok()
  9                 .entity(new GenericEntity&lt;List&lt;Project&gt;&gt;(EntityStore.getProjects()) {},
 10                         isDetailed ? new Annotation[]{ProjectDetailedView.Factory.get()} : new Annotation[0])
 11                 .build();
 12     }
 13 }</fo:block></fo:block></fo:block>

                Annotating a resource method / class is typically easier although it is less flexible and may require more
                resource methods to be created to cover all the alternative use case scenarios. For example:

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e14515"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 19.14. ProjectsResource - Entity-filtering annotations on methods</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14518">  1 @Path("projects")
  2 @Produces("application/json")
  3 public class ProjectsResource {
  4 
  5     @GET
  6     public List&lt;Project&gt; getProjects() {
  7         return getDetailedProjects();
  8     }
  9 
 10     @GET
 11     @Path("detailed")
 12     @ProjectDetailedView
 13     public List&lt;Project&gt; getDetailedProjects() {
 14         return EntityStore.getProjects();
 15     }
 16 }</fo:block></fo:block></fo:block>

                To see how entity-filtering scopes can be applied using a <fo:inline font-family="monospace">Configuration</fo:inline> property,
                see the <fo:basic-link internal-destination="ef.example.server.registration"><fo:inline>Example 19.1, “Registering and configuring entity-filtering feature on server.”</fo:inline></fo:basic-link> example.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                When a <fo:inline font-family="monospace">Project</fo:inline> model from the example above is requested in a scope represented by
                <fo:inline font-family="monospace">@ProjectDetailedView</fo:inline> entity-filtering annotation, the <fo:inline font-family="monospace">Project</fo:inline> model
                data sent over the wire would contain:

                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e14537"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14538"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">Project</fo:inline> - <fo:inline font-family="monospace">id</fo:inline>, <fo:inline font-family="monospace">name</fo:inline>,
                            <fo:inline font-family="monospace">description</fo:inline>, <fo:inline font-family="monospace">tasks</fo:inline>, <fo:inline font-family="monospace">users</fo:inline>
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14559"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">Task</fo:inline> - <fo:inline font-family="monospace">id</fo:inline>, <fo:inline font-family="monospace">name</fo:inline>,
                            <fo:inline font-family="monospace">description</fo:inline>
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14574"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">User</fo:inline> - <fo:inline font-family="monospace">id</fo:inline>, <fo:inline font-family="monospace">name</fo:inline>, <fo:inline font-family="monospace">email</fo:inline>
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

                Or, to illustrate this in JSON format:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14590">  1 {
  2    "description" : "Jersey is the open source (under dual EPL+GPL license) JAX-RS 2.1 (JSR 370) production quality Reference Implementation for building RESTful Web services.",
  3    "id" : 1,
  4    "name" : "Jersey",
  5    "tasks" : [ {
  6       "description" : "Entity Data Filtering",
  7       "id" : 1,
  8       "name" : "ENT_FLT"
  9    }, {
 10       "description" : "OAuth 1 + 2",
 11       "id" : 2,
 12       "name" : "OAUTH"
 13    } ],
 14    "users" : [ {
 15       "email" : "very@secret.com",
 16       "id" : 1,
 17       "name" : "Jersey Robot"
 18    } ]
 19 }</fo:block>

                For the <fo:inline font-style="italic">default entity-filtering scope</fo:inline> the filtered model would look like:

                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e14596"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14597"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">Project</fo:inline> - <fo:inline font-family="monospace">id</fo:inline>, <fo:inline font-family="monospace">name</fo:inline>, <fo:inline font-family="monospace">description</fo:inline>
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

                Or in JSON format:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14613">  1 {
  2    "description" : "Jersey is the open source (under dual EPL+GPL license) JAX-RS 2.1 (JSR 370) production quality Reference Implementation for building RESTful Web services.",
  3    "id" : 1,
  4    "name" : "Jersey"
  5 }</fo:block>
            </fo:block></fo:block><fo:block id="d0e14616"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Client-side Entity Filtering</fo:marker><fo:block font-size="17.28pt">19.3.2. Client-side Entity Filtering</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                As mentioned above you can define applied entity-filtering scopes using a property set either in the client
                run-time <fo:inline font-family="monospace">Configuration</fo:inline> (see <fo:basic-link internal-destination="ef.example.client.registration"><fo:inline>Example 19.4, “Registering and configuring entity-filtering feature on client.”</fo:inline></fo:basic-link>) or by
                passing the entity-filtering annotations during a creation of an individual request to be sent to server.

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e14626"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 19.15. Client - Request entity-filtering annotations</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14629">  1 ClientBuilder.newClient(config)
  2     .target(uri)
  3     .request()
  4     .post(Entity.entity(project, new Annotation[] {ProjectDetailedView.Factory.get()}));</fo:block></fo:block></fo:block>

                You can use the mentioned method with client injected into a resource as well.

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e14632"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 19.16. Client - Request entity-filtering annotations</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14635">  1 @Path("clients")
  2 @Produces("application/json")
  3 public class ClientsResource {
  4 
  5     @Uri("projects")
  6     private WebTarget target;
  7 
  8     @GET
  9     public List&lt;Project&gt; getProjects() {
 10         return target.request()
 11             .post(Entity.entity(project, new Annotation[] {ProjectDetailedView.Factory.get()}));
 12     }
 13 }</fo:block></fo:block></fo:block>
            </fo:block></fo:block></fo:block><fo:block id="ef.security.annotations"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Role-based Entity Filtering using (<fo:inline font-family="monospace">javax.annotation.security</fo:inline>) annotations</fo:marker><fo:block font-size="20.735999999999997pt">19.4. Role-based Entity Filtering using (<fo:inline font-family="monospace">javax.annotation.security</fo:inline>) annotations</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Filtering the content sent to the client (or server) based on the authorized security roles is a commonly
            required use case. By registering <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/SecurityEntityFilteringFeature.html)"><fo:inline>SecurityEntityFilteringFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/SecurityEntityFilteringFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/SecurityEntityFilteringFeature.html</fo:basic-link>]</fo:inline> you can
            leverage the Jersey Entity Filtering facility in connection with standard
            <fo:inline font-family="monospace">javax.annotation.security</fo:inline> annotations exactly the same way as you would with custom
            entity-filtering annotations described in previous chapters. Supported security annotations are:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e14652"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14653"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/annotation/security/PermitAll.html)"><fo:inline>@PermitAll</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/annotation/security/PermitAll.html)">http://docs.oracle.com/javaee/7/api/javax/annotation/security/PermitAll.html</fo:basic-link>]</fo:inline>,</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14658"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/annotation/security/RolesAllowed.html)"><fo:inline>@RolesAllowed</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/annotation/security/RolesAllowed.html)">http://docs.oracle.com/javaee/7/api/javax/annotation/security/RolesAllowed.html</fo:basic-link>]</fo:inline>, and</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14663"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/annotation/security/DenyAll.html)"><fo:inline>@DenyAll</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/annotation/security/DenyAll.html)">http://docs.oracle.com/javaee/7/api/javax/annotation/security/DenyAll.html</fo:basic-link>]</fo:inline></fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Although the mechanics of the Entity Data Filtering feature used for the security annotation-based filtering is
            the same as with the entity-filtering annotations, the processing of security annotations differs in a few important
            aspects:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e14670"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14671"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        Custom <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/SecurityContext.html)"><fo:inline>SecurityContext</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/SecurityContext.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/SecurityContext.html</fo:basic-link>]</fo:inline> should be set by a container request filter in order to use
                        <fo:inline font-family="monospace">@RolesAllowed</fo:inline> for role-based filtering of domain model data (server-side)
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14680"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        There is no need to provide entity-filtering (or security) annotations on resource methods in order to
                        define entity-filtering scopes for <fo:inline font-family="monospace">@RolesAllowed</fo:inline> that is applied to the domain model
                        components, as all the available roles for the current user are automatically determined using
                        the information from the provided <fo:inline font-family="monospace">SecurityContext</fo:inline> (server-side only).
                    </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e14690"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Instances of security annotations (to be used for programmatically defined scopes either on client or server)
                    can be created using one of the methods in the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/SecurityAnnotations.html)"><fo:inline>SecurityAnnotations</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/SecurityAnnotations.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/SecurityAnnotations.html</fo:basic-link>]</fo:inline> factory class
                    that is part of the Jersey Entity Filtering API.
                </fo:block></fo:block></fo:block>
        </fo:block></fo:block><fo:block id="ef.selectable.annotations"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Entity Filtering based on dynamic and configurable query parameters</fo:marker><fo:block font-size="20.735999999999997pt">19.5. Entity Filtering based on dynamic and configurable query parameters</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Filtering the content sent to the client (or server) dynamically based on query parameters is another commonly
            required use case. By registering <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/SelectableEntityFilteringFeature.html)"><fo:inline>SelectableEntityFilteringFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/SelectableEntityFilteringFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/SelectableEntityFilteringFeature.html</fo:basic-link>]</fo:inline> you can
            leverage the Jersey Entity Filtering facility in connection with query parameters exactly the same way as you would with custom
            entity-filtering annotations described in previous chapters.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e14707"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 19.17. Sever - Query Parameter driven entity-filtering</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14710">  1 @XmlRootElement
  2 public class Address {
  3 
  4     private String streetAddress;
  5 
  6     private String region;
  7 
  8     private PhoneNumber phoneNumber;
  9 }</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Query parameters are supported in comma delimited "dot notation" style similar to <fo:inline font-family="monospace">BeanInfo</fo:inline> objects
            and Spring path expressions. As an example, the following URL:
            <fo:inline font-family="monospace">http://jersey.example.com/addresses/51234?select=region,streetAddress</fo:inline> may render only the address's
            region and street address properties as in the following example:
        </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e14721"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 19.18. </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14722">  1 {
  2    "region" : "CA",
  3    "streetAddress" : "1234 Fake St."
  4 }</fo:block></fo:block></fo:block></fo:block><fo:block id="ef.custom.annotations"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Defining custom handling for entity-filtering annotations</fo:marker><fo:block font-size="20.735999999999997pt">19.6. Defining custom handling for entity-filtering annotations</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            To create a custom entity-filtering annotation with special handling, i.e. an field aggregator annotation used
            to annotate classes like the one in <fo:basic-link internal-destination="ef.custom.annotations.annotation"><fo:inline>Example 19.19, “Entity-filtering annotation with custom meaning”</fo:inline></fo:basic-link> it is, in most cases,
            sufficient to implement and register the following SPI contracts:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e14731"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14732"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/spi/EntityProcessor.html)"><fo:inline>EntityProcessor</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/spi/EntityProcessor.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/spi/EntityProcessor.html</fo:basic-link>]</fo:inline></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Implementations of this SPI are invoked to process entity class and it's members. Custom
                        implementations can extend from <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/spi/AbstractEntityProcessor.html)"><fo:inline>AbstractEntityProcessor</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/spi/AbstractEntityProcessor.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/spi/AbstractEntityProcessor.html</fo:basic-link>]</fo:inline>.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14741"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/spi/ScopeResolver.html)"><fo:inline>ScopeResolver</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/spi/ScopeResolver.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/spi/ScopeResolver.html</fo:basic-link>]</fo:inline></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Implementations of this SPI are invoked to retrieve entity-filtering scopes from an array of
                        provided annotations.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="ef.custom.annotations.annotation"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 19.19. Entity-filtering annotation with custom meaning</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14751">  1 @Target({ElementType.TYPE})
  2 @Retention(RetentionPolicy.RUNTIME)
  3 @EntityFiltering
  4 public @interface FilteringAggregator {
  5 
  6     /**
  7      * Entity-filtering scope to add given fields to.
  8      */
  9     Annotation filteringScope();
 10 
 11     /**
 12      * Fields to be a part of the entity-filtering scope.
 13      */
 14     String[] fields();
 15 }</fo:block></fo:block></fo:block>
        </fo:block></fo:block><fo:block id="ef.custom.providers"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Supporting Entity Data Filtering in custom entity providers or frameworks</fo:marker><fo:block font-size="20.735999999999997pt">19.7. Supporting Entity Data Filtering in custom entity providers or frameworks</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            To support Entity Data Filtering in custom entity providers (e.g. as in <fo:basic-link internal-destination="ef.modules.custom"><fo:inline>Example 19.20, “Entity Data Filtering support in MOXy JSON binding provider”</fo:inline></fo:basic-link>),
            it is sufficient in most of the cases to implement and register the following SPI contracts:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e14761"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14762"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/spi/ObjectProvider.html)"><fo:inline>ObjectProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/spi/ObjectProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/spi/ObjectProvider.html</fo:basic-link>]</fo:inline></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        To be able to obtain an instance of a filtering object model your provider understands and can act on.
                        The implementations can extend <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/spi/AbstractObjectProvider.html)"><fo:inline>AbstractObjectProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/spi/AbstractObjectProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/spi/AbstractObjectProvider.html</fo:basic-link>]</fo:inline>.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14771"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/spi/ObjectGraphTransformer.html)"><fo:inline>ObjectGraphTransformer</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/spi/ObjectGraphTransformer.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/spi/ObjectGraphTransformer.html</fo:basic-link>]</fo:inline></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        To transform a read-only generic representation of a domain object model graph to be processed into
                        an entity-filtering object model your provider understands and can act on. The implementations can
                        extend <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/spi/AbstractObjectProvider.html)"><fo:inline>AbstractObjectProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/spi/AbstractObjectProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/spi/AbstractObjectProvider.html</fo:basic-link>]</fo:inline>.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="ef.modules.custom"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 19.20. Entity Data Filtering support in MOXy JSON binding provider</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14784">  1 @Singleton
  2 public class FilteringMoxyJsonProvider extends ConfigurableMoxyJsonProvider {
  3 
  4     @Inject
  5     private Provider&lt;ObjectProvider&lt;ObjectGraph&gt;&gt; provider;
  6 
  7     @Override
  8     protected void preWriteTo(final Object object, final Class&lt;?&gt; type, final Type genericType, final Annotation[] annotations,
  9                               final MediaType mediaType, final MultivaluedMap&lt;String, Object&gt; httpHeaders,
 10                               final Marshaller marshaller) throws JAXBException {
 11         super.preWriteTo(object, type, genericType, annotations, mediaType, httpHeaders, marshaller);
 12 
 13         // Entity Filtering.
 14         if (marshaller.getProperty(MarshallerProperties.OBJECT_GRAPH) == null) {
 15             final Object objectGraph = provider.get().getFilteringObject(genericType, true, annotations);
 16 
 17             if (objectGraph != null) {
 18                 marshaller.setProperty(MarshallerProperties.OBJECT_GRAPH, objectGraph);
 19             }
 20         }
 21     }
 22 
 23     @Override
 24     protected void preReadFrom(final Class&lt;Object&gt; type, final Type genericType, final Annotation[] annotations,
 25                                final MediaType mediaType, final MultivaluedMap&lt;String, String&gt; httpHeaders,
 26                                final Unmarshaller unmarshaller) throws JAXBException {
 27         super.preReadFrom(type, genericType, annotations, mediaType, httpHeaders, unmarshaller);
 28 
 29         // Entity Filtering.
 30         if (unmarshaller.getProperty(MarshallerProperties.OBJECT_GRAPH) == null) {
 31             final Object objectGraph = provider.get().getFilteringObject(genericType, false, annotations);
 32 
 33             if (objectGraph != null) {
 34                 unmarshaller.setProperty(MarshallerProperties.OBJECT_GRAPH, objectGraph);
 35             }
 36         }
 37     }
 38 }</fo:block></fo:block></fo:block>
        </fo:block></fo:block><fo:block id="ef.modules"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Modules with support for Entity Data Filtering</fo:marker><fo:block font-size="20.735999999999997pt">19.8. Modules with support for Entity Data Filtering</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            List of modules from Jersey workspace that support Entity Filtering:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e14792"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14793"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        <fo:basic-link internal-destination="json.moxy"><fo:inline>MOXy</fo:inline></fo:basic-link>
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14799"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        <fo:basic-link internal-destination="json.jackson"><fo:inline>Jackson (2.x)</fo:inline></fo:basic-link>
                    </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In order to use Entity Filtering in mentioned modules you need to explicitly register either
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/EntityFilteringFeature.html)"><fo:inline>EntityFilteringFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/EntityFilteringFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/EntityFilteringFeature.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/SecurityEntityFilteringFeature.html)"><fo:inline>SecurityEntityFilteringFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/SecurityEntityFilteringFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/SecurityEntityFilteringFeature.html</fo:basic-link>]</fo:inline>
            or <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/SelectableEntityFilteringFeature.html)"><fo:inline>SelectableEntityFilteringFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/SelectableEntityFilteringFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/message/filtering/SelectableEntityFilteringFeature.html</fo:basic-link>]</fo:inline> to activate Entity Filtering for particular module.
        </fo:block></fo:block><fo:block id="d0e14817"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Examples</fo:marker><fo:block font-size="20.735999999999997pt">19.9. Examples</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            To see a complete working examples of entity-filtering feature refer to the:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e14822"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14823"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/entity-filtering)"><fo:inline>Entity Filtering example</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/entity-filtering)">https://github.com/jersey/jersey/tree/2.28/examples/entity-filtering</fo:basic-link>]</fo:inline></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14827"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/entity-filtering-security)"><fo:inline>Entity Filtering example (with security annotations)</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/entity-filtering-security)">https://github.com/jersey/jersey/tree/2.28/examples/entity-filtering-security</fo:basic-link>]</fo:inline></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e14831"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/entity-filtering-selectable)"><fo:inline>Entity Filtering example (based on dynamic and configurable query parameters)</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/entity-filtering-selectable)">https://github.com/jersey/jersey/tree/2.28/examples/entity-filtering-selectable</fo:basic-link>]</fo:inline></fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
        </fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>MVC Templates</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>MVC Templates</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="mvc"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 20. MVC Templates</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Jersey provides an extension to support the Model-View-Controller (MVC) design pattern.
        In the context of Jersey components, the Controller from the MVC pattern corresponds to a resource class or method,
        the View to a template bound to the resource class or method, and the model to a Java object (or a Java bean) returned
        from a resource method (Controller).
    </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e14842"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Some of the passages/examples from this chapter have been taken from
            <fo:basic-link external-destination="url(https://blogs.oracle.com/sandoz/entry/mvcj)"><fo:inline>MVCJ</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://blogs.oracle.com/sandoz/entry/mvcj)">https://blogs.oracle.com/sandoz/entry/mvcj</fo:basic-link>]</fo:inline> blog article written by Paul Sandoz.
        </fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        In Jersey 2, the base MVC API consists of two classes (<fo:inline font-family="monospace">org.glassfish.jersey.server.mvc</fo:inline> package)
        that can be used to bind model to view (template), namely <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Viewable.html)"><fo:inline>Viewable</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Viewable.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Viewable.html</fo:basic-link>]</fo:inline> and <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Template.html)"><fo:inline>@Template</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Template.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Template.html</fo:basic-link>]</fo:inline>.
        These classes determine which approach (explicit/implicit) you would be taking when working with Jersey MVC
        templating support.
    </fo:block><fo:block id="d0e14859"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Viewable</fo:marker><fo:block font-size="20.735999999999997pt">20.1. Viewable</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In this approach a resource method explicitly returns a reference to a view template and the data model to be
            used. For this purpose the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Viewable.html)"><fo:inline>Viewable</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Viewable.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Viewable.html</fo:basic-link>]</fo:inline> class has been introduced in Jersey 1 and is also
            present (under a different package) in Jersey 2. A simple example of usage can be seen in
            <fo:basic-link internal-destination="mvc.example.viewable.simple"><fo:inline>Example 20.1, “Using <fo:inline font-family="monospace">Viewable</fo:inline> in a resource class”</fo:inline></fo:basic-link>.

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="mvc.example.viewable.simple"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 20.1. Using <fo:inline font-family="monospace">Viewable</fo:inline> in a resource class</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14875">package com.example;

@Path("foo")
public class Foo {

    @GET
    public Viewable get() {
        return new Viewable("index.foo", "FOO");
    }
}</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In this example, the <fo:inline font-family="monospace">Foo</fo:inline> JAX-RS resource class is the controller and the
            <fo:inline font-family="monospace">Viewable</fo:inline> instance encapsulates the provided data model (<fo:inline font-family="monospace">FOO</fo:inline> string)
            and a named reference to the associated view template (<fo:inline font-family="monospace">index.foo</fo:inline>).
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e14892"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Tip</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                All HTTP methods may return <fo:inline font-family="monospace">Viewable</fo:inline> instances. Thus a <fo:inline font-family="monospace">POST</fo:inline> method may
                return a template reference to a template that produces a view as a result of processing an
                HTML <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Form.html)"><fo:inline>Form</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Form.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Form.html</fo:basic-link>]</fo:inline>.
            </fo:block></fo:block></fo:block></fo:block><fo:block id="d0e14904"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">@Template</fo:marker><fo:block font-size="20.735999999999997pt">20.2. @Template</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e14907"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Annotating Resource methods</fo:marker><fo:block font-size="17.28pt">20.2.1. Annotating Resource methods</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                There is no need to use <fo:inline font-family="monospace">Viewable</fo:inline> every time you want to bind a model to a template. To
                make the resource method more readable (and to avoid verbose wrapping of a template reference and model into
                <fo:inline font-family="monospace">Viewable</fo:inline>) you can simply annotate a resource method with <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Template.html)"><fo:inline>@Template</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Template.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Template.html</fo:basic-link>]</fo:inline>
                annotation. An updated example, using <fo:inline font-family="monospace">@Template</fo:inline>, from previous section is shown in
                <fo:basic-link internal-destination="mvc.example.template.simple"><fo:inline>Example 20.2, “Using <fo:inline font-family="monospace">@Template</fo:inline> on a resource method”</fo:inline></fo:basic-link> example.

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="mvc.example.template.simple"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 20.2. Using <fo:inline font-family="monospace">@Template</fo:inline> on a resource method</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14932">package com.example;

@Path("foo")
public class Foo {

    @GET
    @Template(name = "index.foo")
    public String get() {
        return "FOO";
    }
}</fo:block></fo:block></fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                In this example, the <fo:inline font-family="monospace">Foo</fo:inline> JAX-RS resource class is still the controller as in previous
                section but the MVC model is now represented by the return value of annotated resource method.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The processing of such a method is then essentially the same as if the return type of the method was an
                instance of the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Viewable.html)"><fo:inline>Viewable</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Viewable.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Viewable.html</fo:basic-link>]</fo:inline> class. If a method is annotated with
                <fo:inline font-family="monospace">@Template</fo:inline> and is also returning a
                <fo:inline font-family="monospace">Viewable</fo:inline> instance then the values from the
                <fo:inline font-family="monospace">Viewable</fo:inline> instance take precedence over those defined in the annotation. Producible
                media types are for both cases, <fo:inline font-family="monospace">Viewable</fo:inline> and <fo:inline font-family="monospace">@Template</fo:inline>,
                determined by the method or class level <fo:inline font-family="monospace">@Produces</fo:inline> annotation.
            </fo:block></fo:block><fo:block id="d0e14963"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Annotating Resource classes</fo:marker><fo:block font-size="17.28pt">20.2.2. Annotating Resource classes</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                A resource class can have templates implicitly associated with it via <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Template.html)"><fo:inline>@Template</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Template.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Template.html</fo:basic-link>]</fo:inline> annotation.
                For example, take a look at the resource class listing in <fo:basic-link internal-destination="mvc.example.implicit.class"><fo:inline>Example 20.3, “Using <fo:inline font-family="monospace">@Template</fo:inline> on a resource class”</fo:inline></fo:basic-link>.

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="mvc.example.implicit.class"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 20.3. Using <fo:inline font-family="monospace">@Template</fo:inline> on a resource class</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14979">@Path("foo")
@Template
public class Foo {

    public String getFoo() {
        return "FOO";
    }
}</fo:block></fo:block></fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The example relies on Jersey MVC conventions a lot and requires more explanation as such. First of all, you may
                have noticed that there is no resource method defined in this JAX-RS resource. Also, there is no template
                reference defined.
                In this case, since the <fo:inline font-family="monospace">@Template</fo:inline> annotation placed on the resource class does not
                contain any information, the default relative template reference <fo:inline font-family="monospace">index</fo:inline> will be used (for more
                on this topic see <fo:basic-link internal-destination="mvc.references"><fo:inline>Section 20.3, “Absolute vs. Relative template reference”</fo:inline></fo:basic-link>).
                As for the missing resource methods, a default <fo:inline font-family="monospace">@GET</fo:inline> method will be automatically generated by Jersey
                for the <fo:inline font-family="monospace">Foo</fo:inline> resource (which is the MVC Controller now). The implementation of the generated
                resource method performs the equivalent of the following explicit resource method:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e14998">@GET
public Viewable get() {
    return new Viewable("index", this);
}</fo:block>

                You can see that the resource class serves in this case also as the model. Producible media types are determined
                based on the <fo:inline font-family="monospace">@Produces</fo:inline> annotation declared on the resource class, if any.

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e15004"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        In case of "resource class"-based implicit MVC view templates, the controller is also the model. In such
                        case the template reference <fo:inline font-family="monospace">index</fo:inline> is special, it is the template reference
                        associated with the controller instance itself.
                    </fo:block></fo:block></fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                In the following example, the MVC controller represented by a JAX-RS <fo:inline font-family="monospace">@GET</fo:inline> sub-resource method,
                is also generated in the resource class annotated with <fo:inline font-family="monospace">@Template</fo:inline>:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e15019">@GET
@Path("{implicit-view-path-parameter}")
public Viewable get(@PathParameter("{implicit-view-path-parameter}") String template) {
    return new Viewable(template, this);
}</fo:block>

                This allows Jersey to support also implicit sub-resource templates. For example, a JAX-RS resource at path
                <fo:inline font-family="monospace">foo/bar</fo:inline> will try to use relative template reference <fo:inline font-family="monospace">bar</fo:inline> that resolves to an
                absolute template reference <fo:inline font-family="monospace">/com/foo/Foo/bar</fo:inline>.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                In other words, a HTTP <fo:inline font-family="monospace">GET</fo:inline> request to a <fo:inline font-family="monospace">/foo/bar</fo:inline> would be handled by this
                auto-generated method in the <fo:inline font-family="monospace">Foo</fo:inline> resource and would delegate the request to a registered
                template processor supports processing of the absolute template reference
                <fo:inline font-family="monospace">/com/foo/Foo/bar</fo:inline>, where the model is still an instance of the same JAX-RS resource class
                <fo:inline font-family="monospace">Foo</fo:inline>.
            </fo:block></fo:block></fo:block><fo:block id="mvc.references"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Absolute vs. Relative template reference</fo:marker><fo:block font-size="20.735999999999997pt">20.3. Absolute vs. Relative template reference</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            As discussed in the previous section, both <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Template.html)"><fo:inline>@Template</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Template.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Template.html</fo:basic-link>]</fo:inline> and <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Viewable.html)"><fo:inline>Viewable</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Viewable.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Viewable.html</fo:basic-link>]</fo:inline> provide means
            to define a reference to a template. We will now discuss how these values are interpreted and how the concrete
            template is found.
        </fo:block><fo:block id="d0e15059"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Relative template reference</fo:marker><fo:block font-size="17.28pt">20.3.1. Relative template reference</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Relative reference is any path that does not start with a leading '<fo:inline font-family="monospace">/</fo:inline>' (slash) character (i.e.
                <fo:inline font-family="monospace">index.foo</fo:inline>). This kind of references is resolved into absolute ones by pre-pending a given value
                with a fully qualified name of the last matched resource.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Consider the <fo:basic-link internal-destination="mvc.example.implicit.class"><fo:inline>Example 20.3, “Using <fo:inline font-family="monospace">@Template</fo:inline> on a resource class”</fo:inline></fo:basic-link> from the previous section,
                the template name reference <fo:inline font-family="monospace">index</fo:inline> is a relative value that Jersey will resolve to its
                absolute template reference using a fully qualified class name of <fo:inline font-family="monospace">Foo</fo:inline> (more on resolving
                relative template name to the absolute one can be found in the JavaDoc of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Viewable.html)"><fo:inline>Viewable</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Viewable.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Viewable.html</fo:basic-link>]</fo:inline> class),
                which, in our case, is:
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e15084">"/com/foo/Foo/index"</fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Jersey will then search all the registered template processors (see <fo:basic-link internal-destination="mvc.spi"><fo:inline>Section 20.7, “Writing Custom Templating Engines”</fo:inline></fo:basic-link>) to find a template
                processor that can resolve the absolute template reference further to a "processable" template reference. If
                a template processor is found then the "processable" template is processed using the supplied data model.
            </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e15091"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    If none or empty template reference is provided (either in <fo:inline font-family="monospace">Viewable</fo:inline> or via
                    <fo:inline font-family="monospace">@Template</fo:inline>) then the <fo:inline font-family="monospace">index</fo:inline> reference is assumed and all further
                    processing is done for this value.
                </fo:block></fo:block></fo:block></fo:block><fo:block id="d0e15103"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Absolute template reference</fo:marker><fo:block font-size="17.28pt">20.3.2. Absolute template reference</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Let's change the resource <fo:inline font-family="monospace">GET</fo:inline> method in our <fo:inline font-family="monospace">Foo</fo:inline> resource a little:

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="mvc.example.viewable.absolutePath"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 20.4. Using absolute path to template in <fo:inline font-family="monospace">Viewable</fo:inline></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e15119">@GET
public Viewable get() {
    return new Viewable("/index", "FOO");
}</fo:block></fo:block></fo:block>

                In this case, since the template reference begins with <fo:inline font-family="monospace">"/"</fo:inline>, Jersey will consider the reference
                to be absolute already and will not attempt to absolutize it again. The reference will be used "as is" when
                resolving it to a "processable" template reference as described earlier.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Absolute template references start with leading '<fo:inline font-family="monospace">/</fo:inline>' (i.e. <fo:inline font-family="monospace">/com/example/index.foo</fo:inline>)
                character and are not further resolved (with respect to the resolving resource class) which means that the
                template is looked for at the provided path directly.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Note, however, that template processors for custom templating engines may modify (and the supported ones do)
                absolute template reference by pre-pending 'base template path' (if defined) and appending template suffix (i.e.
                <fo:inline font-family="monospace">foo</fo:inline>) if the suffix is not provided in the reference.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                For example assume that we want to use Mustache templates for our views and we have defined 'base template path'
                as <fo:inline font-family="monospace">pages</fo:inline>. For the absolute template reference <fo:inline font-family="monospace">/com/example/Foo/index</fo:inline> the template
                processor will transform the reference into the following path: <fo:inline font-family="monospace">/pages/com/example/Foo/index.mustache</fo:inline>.
            </fo:block></fo:block></fo:block><fo:block id="d0e15149"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Handling errors with MVC</fo:marker><fo:block font-size="20.735999999999997pt">20.4. Handling errors with MVC</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In addition to <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Template.html)"><fo:inline>@Template</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Template.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Template.html</fo:basic-link>]</fo:inline> a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/ErrorTemplate.html)"><fo:inline>@ErrorTemplate</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/ErrorTemplate.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/ErrorTemplate.html</fo:basic-link>]</fo:inline> annotation has been introduced in
            Jersey 2.3. The purpose of this annotation is to bind the model to an error view in case an exception has been raised during
            processing of a request. This is true for any exception thrown after the resource matching phase (i.e. this not only
            applies to JAX-RS resources but providers and even Jersey runtime as well). The model in this case is the thrown exception
            itself.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:basic-link internal-destination="mvc.example.error.simple"><fo:inline>Example 20.5, “Using <fo:inline font-family="monospace">@ErrorTemplate</fo:inline> on a resource method”</fo:inline></fo:basic-link> shows how to use <fo:inline font-family="monospace">@ErrorTemplate</fo:inline> on a resource method.
            If all goes well with the method processing, then the <fo:inline font-family="monospace">/short-link</fo:inline> template is used to as page sent
            to the user. Otherwise if an exception is raised then the <fo:inline font-family="monospace">/error-form</fo:inline> template is shown to the user.
        </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="mvc.example.error.simple"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 20.5. Using <fo:inline font-family="monospace">@ErrorTemplate</fo:inline> on a resource method</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e15179">@POST
@Produces({"text/html”})
@Consumes(MediaType.APPLICATION_FORM_URLENCODED)
@Template(name = "/short-link")
@ErrorTemplate(name = "/error-form")
public ShortenedLink createLink(@FormParam("link") final String link) {
    // ...
}</fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Note that <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/ErrorTemplate.html)"><fo:inline>@ErrorTemplate</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/ErrorTemplate.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/ErrorTemplate.html</fo:basic-link>]</fo:inline> can be used on a resource class or a resource method to merely handle
            error states. There is no need to use <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Template.html)"><fo:inline>@Template</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Template.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Template.html</fo:basic-link>]</fo:inline> or <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Viewable.html)"><fo:inline>Viewable</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Viewable.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Viewable.html</fo:basic-link>]</fo:inline> with it.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The annotation is handled by custom <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/ExceptionMapper.html)"><fo:inline>ExceptionMapper&lt;E extends Throwable&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/ExceptionMapper.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/ExceptionMapper.html</fo:basic-link>]</fo:inline> which creates an instance of
            <fo:inline font-family="monospace">Viewable</fo:inline> that is further processed by Jersey. This exception mapper is registered automatically
            with a <fo:inline font-family="monospace">MvcFeature</fo:inline>.
        </fo:block><fo:block id="d0e15203"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">MVC &amp; Bean Validation</fo:marker><fo:block font-size="17.28pt">20.4.1. MVC &amp; Bean Validation</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:inline font-family="monospace">@ErrorTemplate</fo:inline> can be used in also with Bean Validation to display specific error pages in
                case the validation of input/output values fails for some reason. Everything works as described above except the
                model is not the thrown exception but rather a list of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/validation/ValidationError.html)"><fo:inline>ValidationError</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/validation/ValidationError.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/validation/ValidationError.html</fo:basic-link>]</fo:inline>s. This list can be iterated in
                the template and all the validation errors can be shown to the user in a desirable way.
            </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="mvc.example.error.bv"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 20.6. Using <fo:inline font-family="monospace">@ErrorTemplate</fo:inline> with Bean Validation</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e15220">@POST
@Produces({"text/html”})
@Consumes(MediaType.APPLICATION_FORM_URLENCODED)
@Template(name = "/short-link”) @ErrorTemplate(name = "/error-form")
@Valid
public ShortenedLink createLink(@NotEmpty @FormParam("link") final String link) {
    // ...
}</fo:block></fo:block></fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="mvc.example.error.bv.jsp"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 20.7. Iterating through <fo:inline font-family="monospace">ValidationError</fo:inline> in JSP</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e15228">&lt;c:forEach items="${model}" var="error"&gt;
    ${error.message} "&lt;strong&gt;${error.invalidValue}&lt;/strong&gt;"&lt;br/&gt;
&lt;/c:forEach&gt;</fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Support for Bean Validation in Jersey MVC Templates is provided by a <fo:inline font-family="monospace">jersey-mvc-bean-validation</fo:inline>
                extension module. The JAX-RS <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Feature.html)"><fo:inline>Feature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Feature.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Feature.html</fo:basic-link>]</fo:inline> provided by this module
                (<fo:inline font-family="monospace">MvcBeanValidationFeature</fo:inline>) has to be registered in order to use this
                functionality (see <fo:basic-link internal-destination="mvc.registration"><fo:inline>Section 20.5, “Registration and Configuration”</fo:inline></fo:basic-link>).
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Maven users can find this module at coordinates

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e15245">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.ext&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-mvc-bean-validation&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>

                and for non-Maven users the list of dependencies is available at <fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc-bean-validation/dependencies.html)"><fo:inline>jersey-mvc-bean-validation</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc-bean-validation/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc-bean-validation/dependencies.html</fo:basic-link>]</fo:inline>.
            </fo:block></fo:block></fo:block><fo:block id="mvc.registration"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Registration and Configuration</fo:marker><fo:block font-size="20.735999999999997pt">20.5. Registration and Configuration</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            To use the capabilities of Jersey MVC templating support in your JAX-RS/Jersey application you need to register
            specific JAX-RS <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Feature.html)"><fo:inline>Feature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Feature.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Feature.html</fo:basic-link>]</fo:inline>s provided by the MVC modules. For <fo:inline font-family="monospace">jersey-mvc</fo:inline> module it is
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/MvcFeature.html)"><fo:inline>MvcFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/MvcFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/MvcFeature.html</fo:basic-link>]</fo:inline> for others it could be, for example, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/freemarker/FreemarkerMvcFeature.html)"><fo:inline>FreemarkerMvcFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/freemarker/FreemarkerMvcFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/freemarker/FreemarkerMvcFeature.html</fo:basic-link>]</fo:inline>
            (<fo:inline font-family="monospace">jersey-mvc-freemarker</fo:inline>).

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e15271"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 20.8. Registering <fo:inline font-family="monospace">MvcFeature</fo:inline></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e15276">new ResourceConfig()
    .register(org.glassfish.jersey.server.mvc.MvcFeature.class)
    // Further configuration of ResourceConfig.
    .register( ... );</fo:block></fo:block></fo:block>

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e15279"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 20.9. Registering <fo:inline font-family="monospace">FreemarkerMvcFeature</fo:inline></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e15284">new ResourceConfig()
    .register(org.glassfish.jersey.server.mvc.freemarker.FreemarkerMvcFeature.class)
    // Further configuration of ResourceConfig.
    .register( ... );</fo:block></fo:block></fo:block>

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e15287"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Modules that uses capabilities of the base Jersey MVC module register <fo:inline font-family="monospace">MvcFeature</fo:inline>
                    automatically, so you don't need to register this feature explicitly in your code.
                </fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Almost all of the MVC modules are further configurable and either contain a <fo:inline font-family="monospace">*Properties</fo:inline>
            (e.g. <fo:inline font-family="monospace">FreemarkerMvcProperties</fo:inline>) class describing all the available properties which could be
            set in a JAX-RS <fo:inline font-family="monospace">Application</fo:inline> / <fo:inline font-family="monospace">ResourceConfig</fo:inline>. Alternatively, the properties
            are listed directly in the module <fo:inline font-family="monospace">*Feature</fo:inline> class.

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="mvc.ex.rc.properties"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 20.10. Setting <fo:inline font-family="monospace">MvcFeature.TEMPLATE_BASE_PATH</fo:inline> value in <fo:inline font-family="monospace">ResourceConfig</fo:inline></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e15319">new ResourceConfig()
    .property(MvcFeature.TEMPLATE_BASE_PATH, "templates")
    .register(MvcFeature.class)
    // Further configuration of ResourceConfig.
    .register( ... );</fo:block></fo:block></fo:block>

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="mvc.ex.web.xml.properties"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 20.11. Setting <fo:inline font-family="monospace">FreemarkerMvcProperties.TEMPLATE_BASE_PATH</fo:inline> value in <fo:inline font-family="monospace">web.xml</fo:inline></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e15330">&lt;servlet&gt;
    &lt;servlet-name&gt;org.glassfish.jersey.examples.freemarker.MyApplication&lt;/servlet-name&gt;
    &lt;servlet-class&gt;org.glassfish.jersey.servlet.ServletContainer&lt;/servlet-class&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;javax.ws.rs.Application&lt;/param-name&gt;
        &lt;param-value&gt;org.glassfish.jersey.examples.freemarker.MyApplication&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;init-param&gt;
        &lt;param-name&gt;jersey.config.server.mvc.templateBasePath.freemarker&lt;/param-name&gt;
        &lt;param-value&gt;freemarker&lt;/param-value&gt;
    &lt;/init-param&gt;
    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
&lt;/servlet&gt;</fo:block></fo:block></fo:block>
        </fo:block></fo:block><fo:block id="d0e15333"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Supported templating engines</fo:marker><fo:block font-size="20.735999999999997pt">20.6. Supported templating engines</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Jersey provides extension modules that enable support for several templating engines. This section lists all the
            supported engines and their modules as well as discusses any module-specific details.
        </fo:block><fo:block id="d0e15338"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Mustache</fo:marker><fo:block font-size="17.28pt">20.6.1. Mustache</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                An integration module for <fo:basic-link external-destination="url(https://github.com/spullara/mustache.java)"><fo:inline>Mustache</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/spullara/mustache.java)">https://github.com/spullara/mustache.java</fo:basic-link>]</fo:inline>-based
                templating engine.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Mustache template processor resolves absolute template references to processable template references represented
                as Mustache templates as follows:
            </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" keep-together.within-column="auto" id="d0e15348"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Procedure 20.1. Resolving Mustache template reference</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-distance-between-starts="2em" provisional-label-separation="0.2em"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block id="d0e15351">1.
          </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        if the absolute template reference does not end in <fo:inline font-family="monospace">.mustache</fo:inline> append this suffix to the
                        reference; and
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block id="d0e15357">2.
          </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        if <fo:inline font-family="monospace">ServletContext.getResource</fo:inline>, <fo:inline font-family="monospace">Class.getResource</fo:inline> or
                        <fo:inline font-family="monospace">File.exists</fo:inline>returns a non-<fo:inline font-family="monospace">null</fo:inline> value for the reference then
                        return the reference as the processable template reference otherwise return <fo:inline font-family="monospace">null</fo:inline>
                        (to indicate the absolute reference has not been resolved by the Mustache template processor).
                    </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Thus the absolute template reference <fo:inline font-family="monospace">/com/foo/Foo/index</fo:inline> would be resolved as
                <fo:inline font-family="monospace">/com/foo/Foo/index.mustache</fo:inline>, provided there exists a
                <fo:inline font-family="monospace">/com/foo/Foo/index.mustache</fo:inline>
                Mustache template in the application.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Available configuration properties:

                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e15388"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e15389"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-family="monospace">MustacheMvcFeature.TEMPLATE_BASE_PATH</fo:inline> -
                            <fo:inline font-family="monospace">jersey.config.server.mvc.templateBasePath.mustache</fo:inline></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The base path where Mustache templates are located.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e15398"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-family="monospace">MustacheMvcFeature.CACHE_TEMPLATES</fo:inline> -
                            <fo:inline font-family="monospace">jersey.config.server.mvc.caching.mustache</fo:inline></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Enables caching of Mustache templates to avoid multiple compilation.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e15407"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-family="monospace">MustacheMvcFeature.TEMPLATE_OBJECT_FACTORY</fo:inline> -
                            <fo:inline font-family="monospace">jersey.config.server.mvc.factory.mustache</fo:inline></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Property used to pass user-configured <fo:inline font-family="monospace">MustacheFactory</fo:inline>.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e15419"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-family="monospace">MustacheMvcFeature.ENCODING</fo:inline> -
                            <fo:inline font-family="monospace">jersey.config.server.mvc.encoding.mustache</fo:inline></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Property used to configure a default encoding that will be used
                            if none is specified in <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html)"><fo:inline>@Produces</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html</fo:basic-link>]</fo:inline> annotation. If property is not defined
                            the UTF-8 encoding will be used as a default value.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Maven users can find this module at coordinates

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e15434">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.ext&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-mvc-mustache&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>

                and for non-Maven users the list of dependencies is available at <fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc-mustache/dependencies.html)"><fo:inline>jersey-mvc-mustache</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc-mustache/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc-mustache/dependencies.html</fo:basic-link>]</fo:inline>.
            </fo:block></fo:block><fo:block id="d0e15440"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Freemarker</fo:marker><fo:block font-size="17.28pt">20.6.2. Freemarker</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                An integration module for <fo:basic-link external-destination="url(http://freemarker.org/)"><fo:inline>Freemarker</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://freemarker.org/)">http://freemarker.org/</fo:basic-link>]</fo:inline>-based templating engine.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Freemarker template processor resolves absolute template references to processable template references represented
                as Freemarker templates as follows:
            </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" keep-together.within-column="auto" id="d0e15450"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Procedure 20.2. Resolving Freemarker template reference</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-distance-between-starts="2em" provisional-label-separation="0.2em"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block id="d0e15453">1.
          </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        if the absolute template reference does not end in <fo:inline font-family="monospace">.ftl</fo:inline> append this suffix to the
                        reference; and
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block id="d0e15459">2.
          </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        if <fo:inline font-family="monospace">ServletContext.getResource</fo:inline>, <fo:inline font-family="monospace">Class.getResource</fo:inline> or
                        <fo:inline font-family="monospace">File.exists</fo:inline>returns a non-<fo:inline font-family="monospace">null</fo:inline> value for the reference then
                        return the reference as the processable template reference otherwise return <fo:inline font-family="monospace">null</fo:inline>
                        (to indicate the absolute reference has not been resolved by the Freemarker template processor).
                    </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Thus the absolute template reference <fo:inline font-family="monospace">/com/foo/Foo/index</fo:inline> would be resolved to
                <fo:inline font-family="monospace">/com/foo/Foo/index.ftl</fo:inline>, provided there exists a <fo:inline font-family="monospace">/com/foo/Foo/index.ftl</fo:inline>
                Freemarker template in the application.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Jersey will assign the model instance to an attribute named <fo:inline font-family="monospace">model</fo:inline>.
                So it is possible to reference the <fo:inline font-family="monospace">foo</fo:inline> key from the provided <fo:inline font-family="monospace">Map</fo:inline> (MVC Model)
                resource from the Freemarker template as follows:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e15499">&lt;h1&gt;${model.foo}&lt;/h1&gt;</fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Available configuration properties:

                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e15504"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e15505"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-family="monospace">FreemarkerMvcFeature.TEMPLATE_BASE_PATH</fo:inline> -
                            <fo:inline font-family="monospace">jersey.config.server.mvc.templateBasePath.freemarker</fo:inline></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The base path where Freemarker templates are located.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e15514"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-family="monospace">FreemarkerMvcFeature.CACHE_TEMPLATES</fo:inline> -
                            <fo:inline font-family="monospace">jersey.config.server.mvc.caching.freemarker</fo:inline></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Enables caching of Freemarker templates to avoid multiple compilation.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e15523"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-family="monospace">FreemarkerMvcFeature.TEMPLATE_OBJECT_FACTORY</fo:inline> -
                            <fo:inline font-family="monospace">jersey.config.server.mvc.factory.freemarker</fo:inline></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Property used to pass user-configured <fo:inline font-family="monospace">FreemarkerFactory</fo:inline>.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e15535"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-family="monospace">FreemarkerMvcFeature.ENCODING</fo:inline> -
                            <fo:inline font-family="monospace">jersey.config.server.mvc.encoding.freemarker</fo:inline></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Property used to configure a default encoding that will be used
                            if none is specified in <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html)"><fo:inline>@Produces</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/Produces.html</fo:basic-link>]</fo:inline> annotation. If property is not defined
                            the UTF-8 encoding will be used as a default value.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Maven users can find this module at coordinates

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e15550">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.ext&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-mvc-freemarker&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>

                and for non-Maven users the list of dependencies is available at <fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc-freemarker/dependencies.html)"><fo:inline>jersey-mvc-freemarker</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc-freemarker/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc-freemarker/dependencies.html</fo:basic-link>]</fo:inline>.
            </fo:block></fo:block><fo:block id="d0e15556"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">JSP</fo:marker><fo:block font-size="17.28pt">20.6.3. JSP</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                An integration module for JSP-based templating engine.
            </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e15561"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Limitations of Jersey JSP MVC Templates</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Jersey web applications that want to use JSP templating support should be registered as Servlet
                    filters rather than Servlets in the application's <fo:inline font-family="monospace">web.xml</fo:inline>. The
                    <fo:inline font-family="monospace">web.xml</fo:inline>-less deployment style introduced in Servlet 3.0 is not supported at the moment
                    for web applications that require use of Jersey MVC templating support.
                </fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                JSP template processor resolves absolute template references to processable template references represented as JSP
                pages as follows:
            </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" keep-together.within-column="auto" id="d0e15574"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Procedure 20.3. Resolving JSP template reference</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-distance-between-starts="2em" provisional-label-separation="0.2em"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block id="d0e15577">1.
          </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        if the absolute template reference does not end in <fo:inline font-family="monospace">.jsp</fo:inline> append this suffix to the
                        reference; and
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:list-item-label end-indent="label-end()"><fo:block id="d0e15583">2.
          </fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        if <fo:inline font-family="monospace">ServletContext.getResource</fo:inline> returns a non-<fo:inline font-family="monospace">null</fo:inline> value for the reference then
                        return the reference as the processable template reference otherwise return <fo:inline font-family="monospace">null</fo:inline>
                        (to indicate the absolute reference has not been resolved by the JSP template processor).
                    </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Thus the absolute template reference <fo:inline font-family="monospace">/com/foo/Foo/index</fo:inline> would be resolved to
                <fo:inline font-family="monospace">/com/foo/Foo/index.jsp</fo:inline>, provided there exists a <fo:inline font-family="monospace">/com/foo/Foo/index.jsp</fo:inline>
                JSP page in the web application.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Jersey will assign the model instance to the attribute named <fo:inline font-family="monospace">model</fo:inline> or <fo:inline font-family="monospace">it</fo:inline>.
                So it is possible to reference the <fo:inline font-family="monospace">foo</fo:inline> property on the <fo:inline font-family="monospace">Foo</fo:inline> resource
                from the JSP template as follows:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e15620">&lt;h1&gt;${model.foo}&lt;/h1&gt;</fo:block>

                or

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e15623">&lt;h1&gt;${it.foo}&lt;/h1&gt;</fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                To include another JSP page in the currently processed one a custom <fo:inline font-family="monospace">include</fo:inline> tag can be used.
                Mandatory parameter <fo:inline font-family="monospace">page</fo:inline> represents a relative template name which would be absolutized using
                the same resolving resource class as the parent JSP page template.

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e15634"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 20.12. Including JSP page into JSP page</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e15637">&lt;%@page contentType="text/html"%&gt;
&lt;%@page pageEncoding="UTF-8"%&gt;

&lt;%@taglib prefix="rbt" uri="urn:org:glassfish:jersey:servlet:mvc" %&gt;

&lt;html&gt;
    &lt;body&gt;

    &lt;rbt:include page="include.jsp"/&gt;

    &lt;/body&gt;
&lt;/html&gt;</fo:block></fo:block></fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Available configuration properties:

                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e15642"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e15643"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-family="monospace">JspMvcFeature.TEMPLATE_BASE_PATH</fo:inline> -
                            <fo:inline font-family="monospace">jersey.config.server.mvc.templateBasePath.jsp</fo:inline></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The base path where JSP templates are located.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Maven users can find this module at coordinates

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e15655">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.ext&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-mvc-jsp&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>

                and for non-Maven users the list of dependencies is available at <fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc-jsp/dependencies.html)"><fo:inline>jersey-mvc-jsp</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc-jsp/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc-jsp/dependencies.html</fo:basic-link>]</fo:inline>.
            </fo:block></fo:block></fo:block><fo:block id="mvc.spi"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Writing Custom Templating Engines</fo:marker><fo:block font-size="20.735999999999997pt">20.7. Writing Custom Templating Engines</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            To add support for other (custom) templating engines into Jersey MVC Templating facility, you need to implement the
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/spi/TemplateProcessor.html)"><fo:inline>TemplateProcessor</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/spi/TemplateProcessor.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/spi/TemplateProcessor.html</fo:basic-link>]</fo:inline> and register this class into your application.

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e15669"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Tip</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    When writing template processors it is recommend that you use an appropriate unique suffix for the
                    processable template references, in which case it is then possible to easily support mixing of multiple
                    templating engines in a single application without conflicts.
                </fo:block></fo:block></fo:block>

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e15673"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 20.13. Custom <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/spi/TemplateProcessor.html)"><fo:inline>TemplateProcessor</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/spi/TemplateProcessor.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/spi/TemplateProcessor.html</fo:basic-link>]</fo:inline></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e15678">@Provider
class MyTemplateProcessor implements TemplateProcessor&lt;String&gt; {

    @Override
    public String resolve(String path, final MediaType mediaType) {
        final String extension = ".testp";

        if (!path.endsWith(extension)) {
            path = path + extension;
        }

        final URL u = this.getClass().getResource(path);
        return u == null ? null : path;
    }

    @Override
    public void writeTo(String templateReference,
                        Viewable viewable,
                        MediaType mediaType,
                        OutputStream out) throws IOException {
        final PrintStream ps = new PrintStream(out);
        ps.print("path=");
        ps.print(templateReference);
        ps.println();
        ps.print("model=");
        ps.print(viewable.getModel().toString());
        ps.println();
    }

}</fo:block></fo:block></fo:block>

            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e15681"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 20.14. Registering custom <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/spi/TemplateProcessor.html)"><fo:inline>TemplateProcessor</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/spi/TemplateProcessor.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/spi/TemplateProcessor.html</fo:basic-link>]</fo:inline></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e15686">new ResourceConfig()
    .register(MyTemplateProcessor.class)
    // Further configuration of ResourceConfig.
    .register( ... );</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e15689"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                In a typical set-up projects using the Jersey MVC templating support would depend on the base module that
                provides the API and SPI and a single templating engine module for the templating engine of your choice.
                These modules need to be mentioned explicitly in your <fo:inline font-family="monospace">pom.xml</fo:inline> file.
            </fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            If you want to use just templating API infrastructure provided by Jersey for the MVC templating support in order to
            implement your custom support for a templating engine other than the ones provided by Jersey,
            you will need to add the base <fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc/dependencies.html)"><fo:inline>jersey-mvc</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-mvc/dependencies.html</fo:basic-link>]</fo:inline> module into the list of your dependencies:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e15700">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.ext&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-mvc&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>
        </fo:block></fo:block><fo:block id="d0e15703"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Other Examples</fo:marker><fo:block font-size="20.735999999999997pt">20.8. Other Examples</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To see an example of MVC (JSP) templating support in Jersey refer to the
            <fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/bookstore-webapp)"><fo:inline>MVC (Bookstore) Example</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/bookstore-webapp)">https://github.com/jersey/jersey/tree/2.28/examples/bookstore-webapp</fo:basic-link>]</fo:inline>.</fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Logging</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Logging</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="logging_chapter"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 21. Logging</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="logging"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Logging traffic</fo:marker><fo:block font-size="20.735999999999997pt">21.1. Logging traffic</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e15718"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Introduction</fo:marker><fo:block font-size="17.28pt">21.1.1. Introduction</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Jersey Logging supports the logging request and response via internal client and server filters, which are
                configured and registered by <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html)"><fo:inline>LoggingFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html</fo:basic-link>]</fo:inline> 's properties. <fo:inline font-family="monospace">LoggingFeature</fo:inline>
                has been introduced in Jersey 2.23 version and deprecates an older <fo:inline font-family="monospace">LoggingFilter</fo:inline>.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:inline font-family="monospace">LoggingFeature</fo:inline> might be discovered by
                <fo:basic-link internal-destination="deployment.autodiscoverable"><fo:inline>auto-discoverable mechanism</fo:inline></fo:basic-link>
                or initialized by registering on client or server components. Client or server logging filter is initialized
                depending on which context is <fo:inline font-family="monospace">LoggingFeature</fo:inline> registered with.
            </fo:block></fo:block><fo:block id="d0e15743"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Configuration and registering</fo:marker><fo:block font-size="17.28pt">21.1.2. Configuration and registering</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e15746"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">21.1.2.1. Configuration options</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Configurable options</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e15751"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e15754"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:inline font-family="monospace">Logger name</fo:inline>
                            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Defines a logger used to log request and response messages.
                            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Default value is <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#DEFAULT_LOGGER_NAME)"><fo:inline>LoggingFeature.DEFAULT_LOGGER_NAME</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#DEFAULT_LOGGER_NAME)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#DEFAULT_LOGGER_NAME</fo:basic-link>]</fo:inline>.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e15767"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:inline font-family="monospace">Logger level</fo:inline>
                            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Defines level that will be used to log messages by logging filters. Messages will be logged only
                                if the effective level of the logger allows it.
                            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Default value is <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#DEFAULT_LOGGER_LEVEL)"><fo:inline>LoggingFeature.DEFAULT_LOGGER_LEVEL</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#DEFAULT_LOGGER_LEVEL)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#DEFAULT_LOGGER_LEVEL</fo:basic-link>]</fo:inline>.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e15780"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:inline font-family="monospace">Verbosity</fo:inline>
                            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Verbosity determines how detailed message will be logged.
                                See <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.Verbosity.html)"><fo:inline>LoggingFeature.Verbosity</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.Verbosity.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.Verbosity.html</fo:basic-link>]</fo:inline> javadoc.
                                <fo:list-block provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e15791"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e15792"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                            The lowest verbosity <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.Verbosity.html#HEADERS_ONLY)"><fo:inline>LoggingFeature.Verbosity.HEADERS_ONLY</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.Verbosity.html#HEADERS_ONLY)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.Verbosity.html#HEADERS_ONLY</fo:basic-link>]</fo:inline> will log
                                            only request/response headers.
                                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e15798"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                            The medium verbosity (<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.Verbosity.html#PAYLOAD_TEXT)"><fo:inline>LoggingFeature.Verbosity.PAYLOAD_TEXT</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.Verbosity.html#PAYLOAD_TEXT)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.Verbosity.html#PAYLOAD_TEXT</fo:basic-link>]</fo:inline>) will log
                                            request/response headers, as well as an entity if considered a readable text. The
                                            entity is considered a readable text, if <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/MediaType.html)"><fo:inline>MediaType</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/MediaType.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/MediaType.html</fo:basic-link>]</fo:inline> is
                                            <fo:inline font-family="monospace">text/*</fo:inline>
                                            or is one of
                                            <fo:list-block provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e15810"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e15811"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                                        <fo:inline font-family="monospace">application/atom+xml</fo:inline>
                                                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e15817"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                                        <fo:inline font-family="monospace">application/json</fo:inline>
                                                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e15823"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                                        <fo:inline font-family="monospace">application/svg+xml</fo:inline>
                                                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e15829"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                                        <fo:inline font-family="monospace">application/x-www-form-urlencoded</fo:inline>
                                                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e15835"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                                        <fo:inline font-family="monospace">application/xhtml+xml</fo:inline>
                                                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e15841"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                                        <fo:inline font-family="monospace">application/xml</fo:inline>
                                                    </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
                                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e15848"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                            The highest verbosity <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.Verbosity.html#PAYLOAD_ANY)"><fo:inline>LoggingFeature.Verbosity.PAYLOAD_ANY</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.Verbosity.html#PAYLOAD_ANY)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.Verbosity.html#PAYLOAD_ANY</fo:basic-link>]</fo:inline>
                                            will log all types of an entity (besides the request/response headers.
                                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
                                Note that the entity is logged up to the specified maximum number of bytes
                                (see <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_MAX_ENTITY_SIZE)"><fo:inline>LoggingFeature.LOGGING_FEATURE_MAX_ENTITY_SIZE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_MAX_ENTITY_SIZE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_MAX_ENTITY_SIZE</fo:basic-link>]</fo:inline>).
                            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Default value is <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#DEFAULT_VERBOSITY)"><fo:inline>LoggingFeature.DEFAULT_VERBOSITY</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#DEFAULT_VERBOSITY)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#DEFAULT_VERBOSITY</fo:basic-link>]</fo:inline>.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e15863"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:inline font-family="monospace">Maximum entity size</fo:inline>
                            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Maximum number of entity bytes to be logged (and buffered) - if the entity is larger, logging
                                filter will print (and buffer in memory) only the specified number of bytes and print "...more..."
                                string at the end. Negative values are interpreted as zero.
                            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Default value <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#DEFAULT_MAX_ENTITY_SIZE)"><fo:inline>LoggingFeature.DEFAULT_MAX_ENTITY_SIZE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#DEFAULT_MAX_ENTITY_SIZE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#DEFAULT_MAX_ENTITY_SIZE</fo:basic-link>]</fo:inline>.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
                </fo:block></fo:block><fo:block id="d0e15877"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">21.1.2.2. Configuration properties</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The feature is enabled on when auto-discoverable mechanism is not disabled and at least one of the feature's
                    property is set. For enabling client or server logging filter one of the
                    <fo:basic-link internal-destination="appendix-properties-common"><fo:inline>common properties</fo:inline></fo:basic-link> or
                    <fo:inline font-family="monospace">_CLIENT</fo:inline>
                    suffixed <fo:basic-link internal-destination="appendix-properties-client"><fo:inline>properties</fo:inline></fo:basic-link>, or
                    <fo:inline font-family="monospace">_SERVER</fo:inline> <fo:basic-link internal-destination="appendix-properties-server"><fo:inline>properties</fo:inline></fo:basic-link>
                    respectively.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    An example of initializing server-side logging with the highest verbosity.
                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e15899"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 21.1. Logging on the client side</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e15902">  1     ClientConfig clientConfig = new ClientConfig();
  2     clientConfig.property(LoggingFeature.LOGGING_FEATURE_VERBOSITY_CLIENT, LoggingFeature.Verbosity.PAYLOAD_ANY);
  3     Client client = ClientBuilder.newClient(clientConfig);
  4                         </fo:block></fo:block></fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The <fo:inline font-family="monospace">LoggingFeature</fo:inline> might be registered explicitly on <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)"><fo:inline>ResourceConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html</fo:basic-link>]</fo:inline> for
                    server-side logging or on <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)"><fo:inline>Client</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html</fo:basic-link>]</fo:inline> for client-side logging.
                </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e15916"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 21.2. Register <fo:inline font-family="monospace">LoggingFeature</fo:inline> via constructor
                    </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e15922">  1         ResourceConfig config = new ResourceConfig(HelloWorldResource.class);
  2         config.register(new LoggingFeature(LOGGER, LoggingFeature.Verbosity.PAYLOAD_ANY));
  3 </fo:block></fo:block></fo:block></fo:block><fo:block id="d0e15924"><fo:block/><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Following examples demonstrate registering <fo:inline font-family="monospace">LoggingFeature</fo:inline> on server-side with default
                    values and values defined by one of the public constructors (see <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html)"><fo:inline>LoggingFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html</fo:basic-link>]</fo:inline>).
                </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e15933"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 21.3. Register <fo:inline font-family="monospace">LoggingFeature</fo:inline> class
                    </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e15939">  1         ResourceConfig config = new ResourceConfig(HelloWorldResource.class);
  2         config.register(LoggingFeature.class);
  3 </fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">An example of server-side logging with entity
                    <fo:inline font-family="monospace">Hello World!</fo:inline>
                </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e15946">  1 May 09, 2016 2:55:33 PM org.glassfish.jersey.logging.LoggingInterceptor log
  2 INFO: 1 * Server has received a request on thread grizzly-http-server-0
  3 1 &gt; GET http://localhost:9998/helloworld
  4 1 &gt; accept: text/plain
  5 1 &gt; accept-encoding: gzip,deflate
  6 1 &gt; connection: Keep-Alive
  7 1 &gt; host: localhost:9998
  8 1 &gt; user-agent: Jersey/3.0-SNAPSHOT (Apache HttpClient 4.5)
  9 
 10 May 09, 2016 2:55:33 PM org.glassfish.jersey.logging.LoggingInterceptor log
 11 INFO: 1 * Server responded with a response on thread grizzly-http-server-0
 12 1 &lt; 200
 13 1 &lt; Content-Type: text/plain
 14 Hello World!</fo:block></fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Monitoring and Diagnostics</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Monitoring and Diagnostics</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="monitoring_tracing"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 22. Monitoring and Diagnostics</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="monitoring"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Monitoring Jersey Applications</fo:marker><fo:block font-size="20.735999999999997pt">22.1. Monitoring Jersey Applications</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e15955"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Introduction</fo:marker><fo:block font-size="17.28pt">22.1.1. Introduction</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e15958"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Important</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Jersey monitoring support has been released as a <fo:inline font-style="italic">beta release</fo:inline> in Jersey 2.1 version.
                    As such, the exposed monitoring public APIs and functionality described in this section may change in the
                    future Jersey releases.
                </fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Jersey provides functionality for monitoring JAX-RS/Jersey applications. Application monitoring is useful in cases
                when you need to identify the performance hot-spots in your JAX-RS application, observe
                execution statistics of particular resources or listen to application
                or request lifecycle events. Note that this functionality is Jersey-specific extension to JAX-RS API.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Jersey monitoring support is divided into three functional areas:

                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="d0e15968" provisional-distance-between-starts="24em * 0.60+1em" provisional-label-separation="1em"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e15969"><fo:list-item-label end-indent="label-end()" text-align="start"><fo:block><fo:inline>Event Listeners</fo:inline></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                Event listeners allow users to receive and process a predefined set of events that occur during
                                a application lifecycle (such as application initialization, application destroy) as well as
                                request processing lifecycle events (request started, resource method finished, exception thrown,
                                etc.). This feature is always enabled in Jersey server runtime and is leveraged by the other
                                monitoring features.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e15975"><fo:list-item-label end-indent="label-end()" text-align="start"><fo:block><fo:inline>Monitoring Statistics</fo:inline></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                Jersey can be configured to process lifecycle events in order to expose a wide range of
                                runtime monitoring statistics to the end user. The statistics are accessible trough an injectable
                                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatistics.html)"><fo:inline>MonitoringStatistics</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatistics.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatistics.html</fo:basic-link>]</fo:inline> interface. The statistics provide general information
                                about the application as well as fine-grained execution statistics on particular resources and sub
                                resources and exposed URIs. For performance reasons, this functionality must be explicitly enabled
                                prior using.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e15984"><fo:list-item-label end-indent="label-end()" text-align="start"><fo:block><fo:inline>JMX MBeans with statistics</fo:inline></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                In addition to the injectable <fo:inline font-family="monospace">MonitoringStatistics</fo:inline> data, Jersey
                                is able to expose the statistics as JMX MBeans (for example
                                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ApplicationMXBean.html)"><fo:inline>ApplicationMXBean</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ApplicationMXBean.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ApplicationMXBean.html</fo:basic-link>]</fo:inline>).
                                Jersey monitoring MXBeans can be accessed programmatically using JMX APIs or browsed via JMX-enabled
                                tool (<fo:inline font-family="monospace">JConsole</fo:inline> for example). This functionality is, too,  by default disabled for
                                performance reasons and must be enabled if needed.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

                All monitoring related APIs (beta!) can be found in the <fo:inline font-family="monospace">jersey-server</fo:inline> module in
                <fo:inline font-family="monospace">org.glassfish.jersey.server.monitoring</fo:inline> package. Monitoring in Jersey is currently supported on
                the server side.
            </fo:block></fo:block><fo:block id="d0e16006"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Event Listeners</fo:marker><fo:block font-size="17.28pt">22.1.2. Event Listeners</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Jersey defines two types of event listeners that you can implement and register with your application:

                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e16011"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16012"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ApplicationEventListener.html)"><fo:inline>ApplicationEventListener</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ApplicationEventListener.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ApplicationEventListener.html</fo:basic-link>]</fo:inline> for listening to application events, and</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16017"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/RequestEventListener.html)"><fo:inline>RequestEventListener</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/RequestEventListener.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/RequestEventListener.html</fo:basic-link>]</fo:inline> for listening to events of request processing.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

                Only the first type, <fo:inline font-family="monospace">ApplicationEventListener</fo:inline>
                can be directly registered as an application-wide provider. The <fo:inline font-family="monospace">RequestEventListener</fo:inline>
                is designed to be specific to every request and can be only returned from the
                <fo:inline font-family="monospace">ApplicationEventListener</fo:inline> as such.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Let's start with an example. The following examples show simple implementations of Jersey event listeners as well
                as a test JAX-RS resource that will be monitored.

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e16034"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 22.1. Application event listener</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e16037">  1 public class MyApplicationEventListener
  2             implements ApplicationEventListener {
  3     private volatile int requestCnt = 0;
  4 
  5     @Override
  6     public void onEvent(ApplicationEvent event) {
  7         switch (event.getType()) {
  8             case INITIALIZATION_FINISHED:
  9                 System.out.println("Application "
 10                         + event.getResourceConfig().getApplicationName()
 11                         + " was initialized.");
 12                 break;
 13             case DESTROY_FINISHED:
 14                 System.out.println("Application "
 15                     + event.getResourceConfig().getApplicationName() destroyed.");
 16                 break;
 17         }
 18     }
 19 
 20     @Override
 21     public RequestEventListener onRequest(RequestEvent requestEvent) {
 22         requestCnt++;
 23         System.out.println("Request " + requestCnt + " started.");
 24         // return the listener instance that will handle this request.
 25         return new MyRequestEventListener(requestCnt);
 26     }
 27 }</fo:block></fo:block></fo:block>

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e16040"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 22.2. Request event listener</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e16043">  1 public class MyRequestEventListener implements RequestEventListener {
  2     private final int requestNumber;
  3     private final long startTime;
  4 
  5     public MyRequestEventListener(int requestNumber) {
  6         this.requestNumber = requestNumber;
  7         startTime = System.currentTimeMillis();
  8     }
  9 
 10     @Override
 11     public void onEvent(RequestEvent event) {
 12         switch (event.getType()) {
 13             case RESOURCE_METHOD_START:
 14                 System.out.println("Resource method "
 15                     + event.getUriInfo().getMatchedResourceMethod()
 16                         .getHttpMethod()
 17                     + " started for request " + requestNumber);
 18                 break;
 19             case FINISHED:
 20                 System.out.println("Request " + requestNumber
 21                     + " finished. Processing time "
 22                     + (System.currentTimeMillis() - startTime) + " ms.");
 23                 break;
 24         }
 25     }
 26 }</fo:block></fo:block></fo:block>

                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e16046"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 22.3. Event listener test resource</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e16049">  1 @Path("resource")
  2 public class TestResource {
  3     @GET
  4     public String getSomething() {
  5         return "get";
  6     }
  7 
  8     @POST
  9     public String postSomething(String entity) {
 10         return "post";
 11     }
 12 }</fo:block></fo:block></fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Once the listeners and the monitored resource is defined, it's time to initialize our application. The following
                piece of code shows a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)"><fo:inline>ResourceConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html</fo:basic-link>]</fo:inline> that is used to initialize the application (please
                note that only <fo:inline font-family="monospace">ApplicationEventListener</fo:inline> is registered as provider).

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e16060">  1 ResourceConfig resourceConfig =
  2             new ResourceConfig(TestResource.class, MyApplicationEventListener.class)
  3             .setApplicationName("my-monitored-application");</fo:block>

                Our example application now contains a simple resource <fo:inline font-family="monospace">TestResource</fo:inline> that defines resource methods
                for <fo:inline font-family="monospace">GET</fo:inline> and <fo:inline font-family="monospace">POST</fo:inline> and a custom <fo:inline font-family="monospace">MyApplicationEventListener</fo:inline> event listener.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The registered <fo:inline font-family="monospace">MyApplicationEventListener</fo:inline> implements two methods defined by the
                <fo:inline font-family="monospace">ApplicationEventListener</fo:inline> interface. A method <fo:inline font-family="monospace">onEvent()</fo:inline> handles
                all application lifecycle events. In our case the method handles only 2 application events - initialization
                and destroy. Other event types are ignored. All application event types are defined
                in <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ApplicationEvent.html)"><fo:inline>ApplicationEvent</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ApplicationEvent.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ApplicationEvent.html</fo:basic-link>]</fo:inline><fo:inline font-family="monospace">.Type</fo:inline>. The second method <fo:inline font-family="monospace">onRequest</fo:inline>
                is invoked by Jersey runtime every time a new request is received. The request event type passed to the method
                is always <fo:inline font-family="monospace">START</fo:inline>. If you want to listen to any other request lifecycle events for the new request,
                you are expected to return an instance of <fo:inline font-family="monospace">RequestEventListener</fo:inline> that will handle the
                request. It is important to understand, that the instance will handle only the request for which it has been returned
                from an <fo:inline font-family="monospace">ApplicationEventListener.onRequest</fo:inline> method and not any other requests. In our case the
                returned request event listener keeps information about the request number of the current request and a start time of
                the request which is later used to print out the request processing times statistics. This demonstrates the principle
                of listening to request events: for one request there is a one instance which can be used to hold all the information
                about the particular request. In other words, <fo:inline font-family="monospace">RequestEventListener</fo:inline> is designed to be
                implicitly request-scoped.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Jersey represents lifecycle events via <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/RequestEvent.html)"><fo:inline>RequestEvent</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/RequestEvent.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/RequestEvent.html</fo:basic-link>]</fo:inline> and
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ApplicationEvent.html)"><fo:inline>ApplicationEvent</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ApplicationEvent.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ApplicationEvent.html</fo:basic-link>]</fo:inline> types. Instances of these classes contain information
                about respective events. The most important information is the event type <fo:inline font-family="monospace">Type</fo:inline> retrievable via
                <fo:inline font-family="monospace">getType()</fo:inline> method,
                which identifies the type of the event. Events contain also additional information that is dependent on a particular
                event type. This information can be retrieved via event getters. Again, some getters return valid information for all
                event types, some are specific to a sub-set of event types. For example, in the
                <fo:inline font-family="monospace">RequestEvent</fo:inline>, the <fo:inline font-family="monospace">getExceptionCause()</fo:inline> method returns valid
                information only when event type is <fo:inline font-family="monospace">ON_EXCEPTION</fo:inline>. On the other hand,
                a <fo:inline font-family="monospace">getContainerRequest()</fo:inline> can be used to return current request context for any request event type.
                See javadoc of events and event types to get familiar with event types and information valid for each event type.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Our <fo:inline font-family="monospace">MyRequestEventListener</fo:inline> implementation is focused on processing 2 request events. First,
                it listens for an event that is triggered before a resource method is executed. Also, it hooks to a "request finished"
                event. As mentioned earlier, the request event <fo:inline font-family="monospace">START</fo:inline> is handled only in the
                <fo:inline font-family="monospace">MyApplicationEventListener</fo:inline>. The <fo:inline font-family="monospace">START</fo:inline> event type will never be invoked on
                <fo:inline font-family="monospace">RequestEventListener</fo:inline>. Therefore the logic for measuring the <fo:inline font-family="monospace">startTime</fo:inline> is in the
                constructor which is invoked from <fo:inline font-family="monospace">MyApplicationEventListener.onRequest()</fo:inline>. An attempt to handling
                the request <fo:inline font-family="monospace">START</fo:inline> event in a <fo:inline font-family="monospace">RequestEventListener.onEvent()</fo:inline> method would be a
                mistake.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Let's deploy the application and use a simple test client code to produce some activity in order to spawn new events:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e16163">  1 target.path("resource").request()
  2         .post(Entity.entity("post", MediaType.TEXT_PLAIN_TYPE));
  3     target.path("resource").request().get();</fo:block>

                In the code above, the <fo:inline font-family="monospace">target</fo:inline> is a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html)"><fo:inline>WebTarget</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html</fo:basic-link>]</fo:inline> instance pointing to the application
                context root path. Using the <fo:basic-link internal-destination="client"><fo:inline>Chapter 5, <fo:inline font-style="italic">Client API</fo:inline></fo:inline></fo:basic-link>, we invoke <fo:inline font-family="monospace">GET</fo:inline> and <fo:inline font-family="monospace">POST</fo:inline> methods
                on the <fo:inline font-family="monospace">MyResource</fo:inline> JAX-RS resource class that we implemented earlier.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                When we start the application, run the test client and then stop the application, the console output for the
                deployed server-side application would contain the following output:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e16185">Application my-monitored-application was initialized.
Request 1 started.
Resource method POST started for request 1
Request 1 finished. Processing time 330 ms.
Request 2 started.
Resource method GET started for request 2
Request 2 finished. Processing time 4 ms.
Application my-monitored-application destroyed.</fo:block>
            </fo:block><fo:block id="d0e16188"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">22.1.2.1. Guidelines for implementing Jersey event listeners</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e16191"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16192"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        Implement event listeners as thread safe. While individual events will be arriving serially,
                        individual listener invocations may occur from different threads. Thus make sure that your listeners
                        are processing data safely with respect to their
                        <fo:basic-link external-destination="url(http://en.wikipedia.org/wiki/Java_Memory_Model)"><fo:inline>Java Memory Model</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://en.wikipedia.org/wiki/Java_Memory_Model)">http://en.wikipedia.org/wiki/Java_Memory_Model</fo:basic-link>]</fo:inline> visibility (in the example
                        above the fields <fo:inline font-family="monospace">requestNumber</fo:inline>, <fo:inline font-family="monospace">startTime</fo:inline> of
                        <fo:inline font-family="monospace">MyRequestEventListener</fo:inline> are final and therefore the same value is
                        visible for all threads executing the <fo:inline font-family="monospace">onEvent()</fo:inline> method).
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16210"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        Do not block the thread executing the event listeners by performing long-running tasks. Execution of event
                        listeners is a part of the standard application and request processing and as such needs to finish as quickly
                        as possible to avoid negative impact on overall application performance.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16213"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        Do not try to modify mutable objects returned from <fo:inline font-family="monospace">ApplicationEvent</fo:inline> and
                        <fo:inline font-family="monospace">RequestEvent</fo:inline> getters to avoid experiencing undefined behavior.
                        Events listeners should use the information for read only purposes only. Use different techniques like
                        filters, interceptors or other providers to modify the processing of requests and applications. Even though
                        modification might be possible and might work as desired now, your code is in risk of producing intermittent
                        failures or unexpected behaviour (for example after migrating to new Jersey version).
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16222"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        If you do not want to listen to request events, do not return an empty listener in the
                        <fo:inline font-family="monospace">onRequest()</fo:inline> method. Return <fo:inline font-family="monospace">null</fo:inline> instead. Returning empty listener
                        might have a negative performance impact. Do not rely on JIT optimizing out the empty listener invocation
                        code.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16231"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        If you miss any event type or any detail in the events, let us know via Jersey user mailing list.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block id="d0e16234"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">22.1.2.2. Monitoring Statistics</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Event listeners described in the previous section are all-purpose facility. For example, you may decide to
                    use them to measure various execution statistics of your application. While this might be an easy task for simple
                    statistics like "how much time was spent on execution of each Java method?", nevertheless, if you want to measure
                    statistics based on URIs and individual resources, the implementation might get rather complex soon, especially
                    when considering sub-resources and sub-resource locators. To save you the trouble, Jersey provides feature for
                    collecting events and calculating a pre-defined set of monitoring and execution statistics, including
                    application configuration, exception mappers execution, minimum/maximum/average execution times for individual
                    resource methods as well as entire request processing etc.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Calculating the monitoring statistics has obviously a performance impact, therefore this feature is
                    disabled by default. To enable the feature, set the following configuration property to <fo:inline font-family="monospace">true</fo:inline>:
                </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e16244">jersey.config.server.monitoring.statistics.enabled=true</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The property description can be found in <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_STATISTICS_ENABLED)"><fo:inline>ServerProperties.MONITORING_STATISTICS_ENABLED</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_STATISTICS_ENABLED)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_STATISTICS_ENABLED</fo:basic-link>]</fo:inline>
                    This will calculate the statistics. The easiest way how to get statistics is to let Jersey
                    to inject them. See the following example:
                </fo:block><fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e16251"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 22.4. Injecting MonitoringStatistics</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e16254">  1 @Path("resource")
  2 public static class StatisticsResource {
  3     @Inject
  4     Provider&lt;MonitoringStatistics&gt; monitoringStatisticsProvider;
  5 
  6     @GET
  7     public String getSomething() {
  8         final MonitoringStatistics snapshot
  9             = monitoringStatisticsProvider.get().snapshot();
 10 
 11         final TimeWindowStatistics timeWindowStatistics
 12             = snapshot.getRequestStatistics()
 13               .getTimeWindowStatistics().get(0l);
 14 
 15         return "request count: " + timeWindowStatistics.getRequestCount()
 16             + ", average request processing [ms]: "
 17             + timeWindowStatistics.getAverageDuration();
 18     }
 19 }}</fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatistics.html)"><fo:inline>MonitoringStatistics</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatistics.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatistics.html</fo:basic-link>]</fo:inline> are
                    injected into the resource using an <fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/inject/Inject.html)"><fo:inline>@Inject</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/inject/Inject.html)">http://docs.oracle.com/javaee/7/api/javax/inject/Inject.html</fo:basic-link>]</fo:inline> annotation.
                    Please note the usage of the <fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/inject/Provider.html)"><fo:inline>Provider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/inject/Provider.html)">http://docs.oracle.com/javaee/7/api/javax/inject/Provider.html</fo:basic-link>]</fo:inline> for injection (it will be discussed later).
                    Firstly, the snapshot of statistics is retrieved by the <fo:inline font-family="monospace">snapshot()</fo:inline> method.
                    The snapshot of statistics is an immutable copy of statistics which does not change over the time.
                    Additionally, data in a snapshot are consistent. It's recommended to create snapshots before working with
                    the statistics data and then process the snapshot data.
                    Working with original non-snapshot data makes sense when data consistency is not important and
                    performance is of highest concern. While it is currently not the case, the injected non-snapshot data may
                    be implemented as mutable for performance reasons in a future release of Jersey.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The injected monitoring statistics represent the root of the collected statistics hierarchy. The hierarchy
                    can be traversed to retrieve any partial statistics data. In the example, we retrieve certain request
                    <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/TimeWindowStatistics.html)"><fo:inline>TimeWindowStatistics</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/TimeWindowStatistics.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/TimeWindowStatistics.html</fo:basic-link>]</fo:inline> data. In our case, those are the request execution statistics
                    for a time window defined by long value 0 which means unlimited time window. This means we are retrieving
                    the global request execution statistics measured since a start of the application.
                    Finally, request count and average duration from the statistics are used to produce the String response.
                    When we invoke few <fo:inline font-family="monospace">GET</fo:inline> requests on the <fo:inline font-family="monospace">StatisticsResource</fo:inline>, we get the
                    following console output:
                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e16281">request count: 1, average request processing [ms]: 260
request count: 2, average request processing [ms]: 135
request count: 3, average request processing [ms]: 93
request count: 4, average request processing [ms]: 73</fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Let's look closer at <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatistics.html)"><fo:inline>MonitoringStatistics</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatistics.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatistics.html</fo:basic-link>]</fo:inline> interface.
                    <fo:inline font-family="monospace">MonitoringStatistics</fo:inline> interface defines getters by which other nested
                    statistics can be retrieved. All statistics are in the same package and ends with
                    <fo:inline font-family="monospace">Statistics</fo:inline> postfix. Statistics interfaces are the following:
                    <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" id="d0e16295" provisional-distance-between-starts="24em * 0.60+1em" provisional-label-separation="1em"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16296"><fo:list-item-label end-indent="label-end()" text-align="start"><fo:block><fo:inline><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatistics.html)"><fo:inline>MonitoringStatistics</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatistics.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatistics.html</fo:basic-link>]</fo:inline></fo:inline></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>main top level statistics</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16303"><fo:list-item-label end-indent="label-end()" text-align="start"><fo:block><fo:inline><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ResponseStatistics.html)"><fo:inline>ResponseStatistics</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ResponseStatistics.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ResponseStatistics.html</fo:basic-link>]</fo:inline></fo:inline></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>response statistics (eg. response status codes and their count)</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16310"><fo:list-item-label end-indent="label-end()" text-align="start"><fo:block><fo:inline><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ResourceStatistics.html)"><fo:inline>ResourceStatistics</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ResourceStatistics.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ResourceStatistics.html</fo:basic-link>]</fo:inline></fo:inline></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>statistics of execution of resources (resource classes or resource URIs)</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16317"><fo:list-item-label end-indent="label-end()" text-align="start"><fo:block><fo:inline><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ResourceMethodStatistics.html)"><fo:inline>ResourceMethodStatistics</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ResourceMethodStatistics.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ResourceMethodStatistics.html</fo:basic-link>]</fo:inline></fo:inline></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>statistics of execution of resource methods</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16324"><fo:list-item-label end-indent="label-end()" text-align="start"><fo:block><fo:inline><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ExecutionStatistics.html)"><fo:inline>ExecutionStatistics</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ExecutionStatistics.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ExecutionStatistics.html</fo:basic-link>]</fo:inline></fo:inline></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>statistic of execution of a target (resource, request, resource method)</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16331"><fo:list-item-label end-indent="label-end()" text-align="start"><fo:block><fo:inline><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/TimeWindowStatistics.html)"><fo:inline>TimeWindowStatistics</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/TimeWindowStatistics.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/TimeWindowStatistics.html</fo:basic-link>]</fo:inline></fo:inline></fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>statistics of execution time in specific interval (eg. executions in last 5 minutes)</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Each time-monitored target contains <fo:inline font-family="monospace">ExecutionStatistics</fo:inline>. So, for example
                    resource method contains execution statistics of its execution. Each
                    <fo:inline font-family="monospace">ExecutionStatistics</fo:inline> contains multiple
                    <fo:inline font-family="monospace">TimeWindowStatistics</fo:inline>. Currently, each
                    <fo:inline font-family="monospace">ExecutionStatistics</fo:inline> contains
                    <fo:inline font-family="monospace">TimeWindowStatistics</fo:inline> for these time windows:

                    <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e16356"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16357"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>0: unlimited=&gt; all execution since start of the application</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16360"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>1000: 1s =&gt; stats measured in last 1 second</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16363"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>15000: 15s =&gt; stats measured in last 15 seconds</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16366"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>60000: 1min =&gt; stats measured in last 1 minute</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16369"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>900000: 15min =&gt; stats measured in last 15 minutes</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16372"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>3600000: 1hour =&gt; stats measured in last hour minutes</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

                    All the time window statistics can be retrieved from a <fo:inline font-family="monospace">Map&lt;Long, TimeWindowStatistics&gt;</fo:inline>
                    map returned from <fo:inline font-family="monospace">ExecutionStatistics.getTimeWindowStatistics()</fo:inline>. Key of the map
                    is the number of milliseconds of interval (so, for example key 60000 points
                    to statistics for last one minute).
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Note, that <fo:inline font-family="monospace">snapshot()</fo:inline> method was called in the example only on the top level
                    <fo:inline font-family="monospace">MonitoringStatistics</fo:inline>. This produced a snapshot of the entire
                    tree of statistics and therefore we do not need to call <fo:inline font-family="monospace">snapshot()</fo:inline>
                    on <fo:inline font-family="monospace">TimeWindowStatistics</fo:inline> again.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Statistics are injected using the <fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/inject/Provider.html)"><fo:inline>Provider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/inject/Provider.html)">http://docs.oracle.com/javaee/7/api/javax/inject/Provider.html</fo:basic-link>]</fo:inline>. This is preferred way of
                    injecting statistics. The reason is simple. Statistics might change over time and contract
                    of <fo:inline font-family="monospace">MonitoringStatistics</fo:inline> does not make any assumptions about mutability of
                    monitoring statistics instances (to allow future optimizations and changes in implementation strategy). In
                    order to get always latest statistics, we recommend injecting a <fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/inject/Provider.html)"><fo:inline>Provider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/inject/Provider.html)">http://docs.oracle.com/javaee/7/api/javax/inject/Provider.html</fo:basic-link>]</fo:inline> rather than a
                    direct reference and use it's <fo:inline font-family="monospace">get()</fo:inline> method to retrieve the latest statistics. For example,
                    in singleton resources the use of the technique is very important otherwise statistics might correspond
                    to the time when singleton was firstly created and might not update since that time.
                </fo:block><fo:block id="d0e16410"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="12pt">22.1.2.2.1. Listening to statistics changes</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        Statistics are not calculated for each request or each change. Statistics are calculated only
                        from the collected data in regular intervals for performance reasons (for example once per second).
                        If you want to be notified about new statistics, register an implementation of
                        <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatisticsListener.html)"><fo:inline>MonitoringStatisticsListener</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatisticsListener.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatisticsListener.html</fo:basic-link>]</fo:inline> as one of your custom application providers.
                        Your listener will be called every time the new statistics are calculated and the updated statistics
                        data will be passed to the listener method. This is another way of receiving statistics.
                        See the linked listener API documentation for more information.
                    </fo:block></fo:block></fo:block><fo:block id="d0e16418"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">22.1.2.3. Monitoring Statistics as MBeans</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e16421"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        Jersey examples contains a
                        <fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/monitoring-webapp)"><fo:inline>Monitoring Web Application Example</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/monitoring-webapp)">https://github.com/jersey/jersey/tree/2.28/examples/monitoring-webapp</fo:basic-link>]</fo:inline>
                        which demonstrates usage of MBean statistics.
                    </fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Jersey provides feature to expose monitoring statistics as JMX MXBeans.
                    In order to enable monitoring statistics MXBeans exposure, the
                    <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_STATISTICS_MBEANS_ENABLED)"><fo:inline>ServerProperties.MONITORING_STATISTICS_MBEANS_ENABLED</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_STATISTICS_MBEANS_ENABLED)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_STATISTICS_MBEANS_ENABLED</fo:basic-link>]</fo:inline> must be set to <fo:inline font-family="monospace">true</fo:inline>.
                </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e16435">jersey.config.server.monitoring.statistics.mbeans.enabled=true</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Note that enabling exposure of monitoring MXBeans causes that also the calculation of
                    <fo:inline font-family="monospace">MonitoringStatistics</fo:inline> is automatically enabled as the exposed
                    MXBean statistics are extracted from <fo:inline font-family="monospace">MonitoringStatistics</fo:inline>.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    The easiest way is to browse the MXBeans in the JConsole. Open the JConsole
                    (<fo:inline font-family="monospace">$JAVA_HOME/bin/jconsole</fo:inline>). Then connect to the process where JAX-RS application is running
                    (server on which the application is running). Switch to a MBean tab and in the MBean tree on the left side
                    find a group <fo:inline font-family="monospace">org.glassfish.jersey</fo:inline>. All deployed Jersey applications are located under this
                    group. If you don't see such this group, then MBeans are not exposed (check the configuration property and
                    logs if they not contain any exceptions or errors). The following figure is an example of an output from the
                    JConsole:
                </fo:block><fo:block id="d0e16453" text-align="center"><fo:external-graphic src="url(images/monitoring-jsconsole.png)" width="100%" height="auto" content-width="scale-to-fit" content-height="scale-to-fit" content-type="content-type:image/png" text-align="center"/></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Under the root <fo:inline font-family="monospace">org.glassfish.jersey</fo:inline> Jersey MBean group you can find your application.
                    If the server contains more Jersey application, all will be present under the root Jersey the group. In the
                    screen-shot, the deployed JAX-RS application is named <fo:inline font-family="monospace">myApplication</fo:inline> (the name can be defined
                    via <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)"><fo:inline>ResourceConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html</fo:basic-link>]</fo:inline> directly or by setting the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#APPLICATION_NAME)"><fo:inline>ServerProperties.APPLICATION_NAME</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#APPLICATION_NAME)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#APPLICATION_NAME</fo:basic-link>]</fo:inline>
                    property).
                    Each application contains <fo:inline font-family="monospace">Global</fo:inline>, <fo:inline font-family="monospace">Resource</fo:inline> and
                    <fo:inline font-family="monospace">Uris</fo:inline> sub-groups. The <fo:inline font-family="monospace">Global</fo:inline> group contains all global
                    statistics like overall requests statistics of the entire application (<fo:inline font-family="monospace">AllRequestTimes</fo:inline>),
                    configuration of the JAX-RS application (<fo:inline font-family="monospace">Configuration</fo:inline>), statistics about
                    <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/ExceptionMapper.html)"><fo:inline>ExceptionMapper&lt;E extends Throwable&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/ExceptionMapper.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/ExceptionMapper.html</fo:basic-link>]</fo:inline> execution (<fo:inline font-family="monospace">ExceptionMapper</fo:inline>) and statistics about
                    produced responses (<fo:inline font-family="monospace">Responses</fo:inline>).
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    <fo:inline font-family="monospace">Resources</fo:inline> and <fo:inline font-family="monospace">Uris</fo:inline> groups contains monitoring statistics specific to
                    individual resources.
                    Statistics in <fo:inline font-family="monospace">Resources</fo:inline> are bound to the JAX-RS resource Java classes loaded by the
                    application. <fo:inline font-family="monospace">Uris</fo:inline> contains statistics of resources based on the matched application Uris
                    (one URI entry represents all methods bound to the particular URI, e.g. <fo:inline font-family="monospace">/resource/exception</fo:inline>).
                    As Jersey provides programmatic resource builders (described in the chapter
                    <fo:basic-link internal-destination="resource-builder"><fo:inline>"Programmatic API for Building Resources"</fo:inline></fo:basic-link>), one Java resource class
                    can be an endpoint for resource methods on many different URIs. And also one URI can be served by method from
                    many different Java classes. Therefore both views are not to be compared 1:1. Instead they provide
                    different loggical views on your JAX-RS application. This monitoring feature can also help when designing
                    the JAX-RS APIs as it provides nice view on available root application URIs.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Both logical views on the resources exposed by application share few common principles. A single resource entry
                    is always a set of resource methods which are available under the <fo:inline font-family="monospace">methods</fo:inline> sub-group. Statistics
                    can be found in MBeans <fo:inline font-family="monospace">MethodTimes</fo:inline> and <fo:inline font-family="monospace">RequestTimes</fo:inline>.
                    <fo:inline font-family="monospace">MethodTimes</fo:inline> contains statistics measured on on resource methods (duration of execution of a
                    code of the a resource method), whereas <fo:inline font-family="monospace">RequestTimes</fo:inline> contains statistics of an entire request
                    execution (not only a time of the execution of the resource method but the overall time of the execution of whole
                    request by Jersey runtime). Another useful information is that statistics directly under resource (not under
                    the <fo:inline font-family="monospace">methods</fo:inline> sub-group) contains summary of statistics for all resource methods grouped in the
                    resource entry.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Additional useful details that about statistics</fo:block><fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e16539"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16540"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-family="monospace">Global-&gt;Configuration-&gt;Registered(Classes/Instances)</fo:inline>:
                        registered resource classes and instances by the user (i.e., not added by <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/model/ModelProcessor.html)"><fo:inline>ModelProcessor</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/model/ModelProcessor.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/model/ModelProcessor.html</fo:basic-link>]</fo:inline>
                        during deployment for example).
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16548"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:inline font-family="monospace">Global-&gt;ExceptionMapper-&gt;ExceptionMapperCount</fo:inline>:
                        map that contains exception mapper classes as keys and number of their execution as values.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16553"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        <fo:inline font-family="monospace">Global-&gt;Responses-&gt;ResponseCodesToCountMap</fo:inline>:
                        map that contains response codes as keys and their total occurrence in responses as values.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16559"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        Resource groups contain also entries for resources that were added by Jersey at deployment time using
                        <fo:inline font-family="monospace">ModelProcessor</fo:inline> (for example all <fo:inline font-family="monospace">OPTIONS</fo:inline> methods, <fo:inline font-family="monospace">WADL</fo:inline>).
                        <fo:inline font-family="monospace">HEAD</fo:inline> methods are not present in the MXBeans view (even HEAD methods are in resources).
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16574"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        Execution statistics for different time windows have different update intervals. The shorter the time window,
                        the shorter the update interval. This causes that immediately after the application start, the shorter time
                        windows (such as 15 seconds) may contain higher values than longer ones (e.g. 1 hour time window). The reason
                        is that 1 hour interval will show information that is not up to date and therefore has smaller value. This
                        inconsistency is not so much significant when application is running longer time. Total unlimited time windows
                        contains always up-to-date data. This inconsistency will get fixed in a future Jersey release.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    MXBeans can be also accessed using JMX. To do so, you would need to use the interfaces of MXBeans.
                    These interfaces are even useful when working with MXBeans only trough <fo:inline font-family="monospace">JConsole</fo:inline> as
                    they contain Javadocs for each MXBean and attribute. Monitoring MBeans are defined by following interfaces:

                    <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e16582"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16583"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ApplicationMXBean.html)"><fo:inline>ApplicationMXBean</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ApplicationMXBean.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ApplicationMXBean.html</fo:basic-link>]</fo:inline>: contains configuration statistics
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16589"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ExceptionMapperMXBean.html)"><fo:inline>ExceptionMapperMXBean</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ExceptionMapperMXBean.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ExceptionMapperMXBean.html</fo:basic-link>]</fo:inline>: contains statistics of exception mappers
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16595"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ResourceMethodMXBean.html)"><fo:inline>ResourceMethodMXBean</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ResourceMethodMXBean.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ResourceMethodMXBean.html</fo:basic-link>]</fo:inline>: contains statistics of resource method
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16601"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ResourceMXBean.html)"><fo:inline>ResourceMXBean</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ResourceMXBean.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ResourceMXBean.html</fo:basic-link>]</fo:inline>: contains statistics of resource
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16607"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ResponseMXBean.html)"><fo:inline>ResponseMXBean</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ResponseMXBean.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ResponseMXBean.html</fo:basic-link>]</fo:inline>: contains statistics of responses
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

                    The list does not contain MXBean for the execution and time window statistics. The reason is that
                    this bean is defined as a <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/javax/management/DynamicMBean.html)"><fo:inline>DynamicMBean</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/javax/management/DynamicMBean.html)">http://docs.oracle.com/javase/6/docs/api/javax/management/DynamicMBean.html</fo:basic-link>]</fo:inline>. Attributes of this dynamic MBean contains
                    statistics for all time windows available.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    MXBeans do not reference each other but can be retrieved by their <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/javax/management/ObjectName.html)"><fo:inline>ObjectName</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/javax/management/ObjectName.html)">http://docs.oracle.com/javase/6/docs/api/javax/management/ObjectName.html</fo:basic-link>]</fo:inline>s which
                    are designed in the way, that final MBean tree looks nicely organized in <fo:inline font-style="italic">JConsole</fo:inline>.
                    Each MXBean is uniquely identified by its <fo:inline font-family="monospace">ObjectName</fo:inline> and properties of
                    <fo:inline font-family="monospace">ObjectName</fo:inline> are structured hierarchically, so that each MXBean can be identified to which
                    parent it belong to (e.g. execution statistics dynamic MXBean belongs to resource method MXBean, which
                    belongs to resource and which belongs to application). Check the <fo:inline font-family="monospace">ObjectName</fo:inline>s of
                    exposed MXBeans to investigate the structure (for example through JConsole).
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    To reiterate, exposing Jersey MXBeans and the calculating monitoring statistics may have an performance impact
                    on your application and therefore should be enabled only when needed. Also, please note, that it Jersey
                    monitoring is exposing quite a lot of information about the monitored application which might be viewed as
                    problematic in some cases (e.g. in production server deployments).
                </fo:block></fo:block></fo:block></fo:block><fo:block id="tracing"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Tracing Support</fo:marker><fo:block font-size="20.735999999999997pt">22.2. Tracing Support</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Apart from monitoring and collecting application statistics described in <fo:basic-link internal-destination="monitoring"><fo:inline>Section 22.1, “Monitoring Jersey Applications”</fo:inline></fo:basic-link>, Jersey
            can also provide tracing or diagnostic information about server-side processing of individual requests.
            This facility may provide vital information when troubleshooting your misbehaving Jersey or JAX-RS application.
            When enabled, Jersey tracing facility collects useful information from all parts of JAX-RS server-side request
            processing pipeline:
            <fo:inline font-family="monospace">PreMatchRequestFilter</fo:inline>, <fo:inline font-family="monospace">ResourceMatching</fo:inline>, <fo:inline font-family="monospace">RequestFilter</fo:inline>,
            <fo:inline font-family="monospace">ReadIntercept</fo:inline>, <fo:inline font-family="monospace">MBR</fo:inline>, <fo:inline font-family="monospace">Invoke</fo:inline>,
            <fo:inline font-family="monospace">ResponseFilter</fo:inline>, <fo:inline font-family="monospace">WriteIntercept</fo:inline>, <fo:inline font-family="monospace">MBW</fo:inline>, as well as
            <fo:inline font-family="monospace">ExceptionHandling</fo:inline>.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The collected tracing information related to a single request is returned to the requesting client in the HTTP
            headers of a response for the request. The information is also logged on the server side using a dedicated Java
            Logger instance.
        </fo:block><fo:block id="tracing.configuration"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Configuration options</fo:marker><fo:block font-size="17.28pt">22.2.1. Configuration options</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Tracing support is disabled by default. You can enable it either "globally" for all application requests
                or selectively per request. The tracing support activation is controlled by setting the
                <fo:inline font-family="monospace">jersey.config.server.tracing.type</fo:inline> application configuration property. The property value
                is expected to be one of the following:

                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e16683"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16684"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">OFF</fo:inline> - tracing support is disabled (default value).
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16690"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">ON_DEMAND</fo:inline> - tracing support is in a stand-by mode; it is enabled selectively
                            per request, via a special <fo:inline font-family="monospace">X-Jersey-Tracing-Accept</fo:inline> HTTP request header.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16699"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">ALL</fo:inline> - tracing support is enabled for all request.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The level of detail of the information provided by Jersey tracing facility - the tracing threshold - can be
                customized. The tracing threshold can be set at the application level via
                <fo:inline font-family="monospace">jersey.config.server.tracing.threshold</fo:inline> application configuration property,
                or at a request level, via <fo:inline font-family="monospace">X-Jersey-Tracing-Threshold</fo:inline> HTTP request header. The request level
                configuration overrides any application level setting. There are 3 supported levels of detail for Jersey tracing:
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e16714"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16715"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">SUMMARY</fo:inline> - very basic summary information about the main request processing stages.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16721"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">TRACE</fo:inline> - detailed information about activities in all the main request processing
                            stages (default threshold value).
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16727"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">VERBOSE</fo:inline> - most verbose mode that provides extended information similar to
                            <fo:inline font-family="monospace">TRACE</fo:inline> level, however with details on entity providers
                            (<fo:inline font-family="monospace">MBR</fo:inline>/<fo:inline font-family="monospace">MBW</fo:inline>) that were skipped during the provider selection
                            phase for any reason (lower priority, pattern matching, etc). Additionally, in this mode all
                            received request headers are echoed as part of the tracing information.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block></fo:block><fo:block id="d0e16743"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Tracing Log</fo:marker><fo:block font-size="17.28pt">22.2.2. Tracing Log</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                As mentioned earlier, all tracing information is also logged using a dedicated Java Logger. The individual
                tracing messages are logged immediately as the tracing events occur. The default name of the tracing logger
                is prefixed <fo:inline font-family="monospace">org.glassfish.jersey.tracing.</fo:inline> with a default suffix <fo:inline font-family="monospace">general</fo:inline>.
                This logger name can be customized per request by including a <fo:inline font-family="monospace">X-Jersey-Tracing-Logger</fo:inline>
                HTTP request header as will be shown later.
            </fo:block></fo:block><fo:block id="d0e16757"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Configuring tracing support via HTTP request headers</fo:marker><fo:block font-size="17.28pt">22.2.3. Configuring tracing support via HTTP request headers</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Whenever the tracing support is active (<fo:inline font-family="monospace">ON_DEMAND</fo:inline> or <fo:inline font-family="monospace">ALL</fo:inline>) you
                can customize the tracing behaviour by including one or more of the following request HTTP headers in your
                individual requests:
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e16768"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16769"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">X-Jersey-Tracing-Accept</fo:inline> - used to enable the tracing support for the particular
                            request. It is applied only when the application-level tracing support is configured to
                            <fo:inline font-family="monospace">ON_DEMAND</fo:inline> mode. The value of the header is not used by the Jersey tracing
                            facility and as such it can be any arbitrary (even empty) string.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16778"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">X-Jersey-Tracing-Threshold</fo:inline> - used to override the tracing level of detail.
                            Allowed values are: <fo:inline font-family="monospace">SUMMARY</fo:inline>, <fo:inline font-family="monospace">TRACE</fo:inline>, <fo:inline font-family="monospace">VERBOSE</fo:inline>.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16793"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">X-Jersey-Tracing-Logger</fo:inline> - used to override the tracing Java logger name suffix.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block></fo:block><fo:block id="d0e16800"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Format of the HTTP response headers</fo:marker><fo:block font-size="17.28pt">22.2.4. Format of the HTTP response headers</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                At the end of request processing all tracing messages are appended to the HTTP response as individual
                headers named <fo:inline font-family="monospace">X-Jersey-Tracing-</fo:inline><fo:inline font-style="italic"><fo:inline font-family="monospace">nnn</fo:inline></fo:inline> where
                <fo:inline font-style="italic"><fo:inline font-family="monospace">nnn</fo:inline></fo:inline> is index number of message starting at <fo:inline font-family="monospace">0</fo:inline>.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Each tracing message is in the following format: <fo:inline font-family="monospace">CATEGORY [TIME] TEXT</fo:inline>, e.g.
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e16823">X-Jersey-Tracing-007: WI          [85.95 / 183.69 ms | 46.77 %] WriteTo summary: 4 interceptors</fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The <fo:inline font-family="monospace">CATEGORY</fo:inline> is used to categorize tracing events according to the following
                event types:
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e16831"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16832"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">START</fo:inline> - start of request processing information
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16838"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">PRE-MATCH</fo:inline> - pre-matching request filter processing
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16844"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">MATCH</fo:inline> - matching request URI to a resource method
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16850"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">REQ-FILTER</fo:inline> - request filter processing
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16856"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">RI</fo:inline> - entity reader interceptor processing
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16862"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">MBR</fo:inline> - message body reader selection and invocation
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16868"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">INVOKE</fo:inline> - resource method invocation
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16874"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">RESP-FILTER</fo:inline> - response filter processing
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16880"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">WI</fo:inline> - write interceptor processing
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16886"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">MBW</fo:inline> - message body writer selection and invocation
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16892"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">MVC</fo:inline> - template engine integration
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16898"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">EXCEPTION</fo:inline> - exception mapping
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16904"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">FINISHED</fo:inline> - processing finish summary
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The <fo:inline font-family="monospace">TIME</fo:inline>, if present, is a composite value that consists of 3 parts
                <fo:inline font-family="monospace">[ duration / time_from_start | total_req_ratio ]</fo:inline>:
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.2em" id="d0e16919"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16920"><fo:list-item-label end-indent="label-end()"><fo:block>1.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">duration</fo:inline> - the duration of the current trace event [milliseconds];
                            e.g. duration of filter processing
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16926"><fo:list-item-label end-indent="label-end()"><fo:block>2.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">time_from_start</fo:inline> - the end time of the current event with respect to
                            the request processing start time [milliseconds]
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e16932"><fo:list-item-label end-indent="label-end()"><fo:block>3.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">total_req_ratio</fo:inline> - the duration of the current event with respect to
                            the total request processing time [percentage]; this value tells you how significant part
                            of the whole request processing time has been spent in the processing phase described by
                            the current event
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
                There are certain tracing events that do not have any duration. In such case, duration values are not set
                (<fo:inline font-family="monospace">----</fo:inline> literal).
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                The tracing event <fo:inline font-family="monospace">TEXT</fo:inline> is a free-form detailed text information about the
                current diagnostic event.
                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e16947"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Tip</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        For better identification, instances of JAX-RS components are represented by class name,
                        identity hash code and <fo:inline font-family="monospace">@Priority</fo:inline> value if set, e.g.
                        <fo:inline font-family="monospace">[org.glassfish.jersey.tests.integration.tracing.ContainerResponseFilter5001 @494a8227 #5001]</fo:inline>.
                    </fo:block></fo:block></fo:block>
            </fo:block></fo:block><fo:block id="d0e16957"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Tracing Examples</fo:marker><fo:block font-size="17.28pt">22.2.5. Tracing Examples</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Example of <fo:inline font-family="monospace">SUMMARY</fo:inline> level messages
                from <fo:inline font-family="monospace">tests/integration/tracing-support</fo:inline> module:
                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e16968"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 22.5. Summary level messages</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e16971">  1 $ curl -i http://localhost:9998/ALL/root/sub-resource-locator/sub-resource-method -H content-type:application/x-jersey-test --data '-=#[LKR]#=-' -H X-Jersey-Tracing-Threshold:SUMMARY -H accept:application/x-jersey-test -X POST
  2 
  3 X-Jersey-Tracing-000: START       [ ---- /  ---- ms |  ---- %] baseUri=[http://localhost:9998/ALL/] requestUri=[http://localhost:9998/ALL/root/sub-resource-locator/sub-resource-method] method=[POST] authScheme=[n/a] accept=[application/x-jersey-test] accept-encoding=n/a accept-charset=n/a accept-language=n/a content-type=[application/x-jersey-test] content-length=[11]
  4 X-Jersey-Tracing-001: PRE-MATCH   [ 0.01 /  0.68 ms |  0.01 %] PreMatchRequest summary: 2 filters
  5 X-Jersey-Tracing-002: MATCH       [ 8.44 /  9.15 ms |  4.59 %] RequestMatching summary
  6 X-Jersey-Tracing-003: REQ-FILTER  [ 0.01 /  9.20 ms |  0.00 %] Request summary: 2 filters
  7 X-Jersey-Tracing-004: RI          [86.14 / 95.49 ms | 46.87 %] ReadFrom summary: 3 interceptors
  8 X-Jersey-Tracing-005: INVOKE      [ 0.04 / 95.70 ms |  0.02 %] Resource [org.glassfish.jersey.tests.integration.tracing.SubResource @901a4f3] method=[public org.glassfish.jersey.tests.integration.tracing.Message org.glassfish.jersey.tests.integration.tracing.SubResource.postSub(org.glassfish.jersey.tests.integration.tracing.Message)]
  9 X-Jersey-Tracing-006: RESP-FILTER [ 0.01 / 96.55 ms |  0.00 %] Response summary: 2 filters
 10 X-Jersey-Tracing-007: WI          [85.95 / 183.69 ms | 46.77 %] WriteTo summary: 4 interceptors
 11 X-Jersey-Tracing-008: FINISHED    [ ---- / 183.79 ms |  ---- %] Response status: 200/SUCCESSFUL|OK</fo:block></fo:block></fo:block>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Example <fo:inline font-family="monospace">TRACE</fo:inline> level messages of <fo:inline font-family="monospace">jersey-mvc-jsp</fo:inline> integration,
                from <fo:inline font-family="monospace">examples/bookstore-webapp</fo:inline> module:
                <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e16985"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 22.6. On demand request, snippet of MVC JSP forwarding</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e16988">  1 $ curl -i http://localhost:9998/items/3/tracks/0 -H X-Jersey-Tracing-Accept:whatever
  2 
  3 ...
  4 X-Jersey-Tracing-033: WI          [ 0.00 / 23.39 ms |  0.02 %] [org.glassfish.jersey.server.mvc.internal.TemplateMethodInterceptor @141bcd49 #4000] BEFORE context.proceed()
  5 X-Jersey-Tracing-034: WI          [ 0.01 / 23.42 ms |  0.02 %] [org.glassfish.jersey.filter.LoggingFilter @2d427def #-2147483648] BEFORE context.proceed()
  6 X-Jersey-Tracing-035: MBW         [ ---- / 23.45 ms |  ---- %] Find MBW for type=[org.glassfish.jersey.server.mvc.internal.ImplicitViewable] genericType=[org.glassfish.jersey.server.mvc.internal.ImplicitViewable] mediaType=[[javax.ws.rs.core.MediaType @7bfbfeae]] annotations=[]
  7 X-Jersey-Tracing-036: MBW         [ ---- / 23.52 ms |  ---- %] [org.glassfish.jersey.server.mvc.internal.ViewableMessageBodyWriter @78b353d4] IS writeable
  8 X-Jersey-Tracing-037: MVC         [ ---- / 24.05 ms |  ---- %] Forwarding view to JSP page [/org/glassfish/jersey/examples/bookstore/webapp/resource/Track/index.jsp], model [org.glassfish.jersey.examples.bookstore.webapp.resource.Track @3937f594]
  9 X-Jersey-Tracing-038: MBW         [ 1.09 / 24.63 ms |  4.39 %] WriteTo by [org.glassfish.jersey.server.mvc.internal.ViewableMessageBodyWriter @78b353d4]
 10 X-Jersey-Tracing-039: WI          [ 0.00 / 24.67 ms |  0.01 %] [org.glassfish.jersey.filter.LoggingFilter @2d427def #-2147483648] AFTER context.proceed()
 11 X-Jersey-Tracing-040: WI          [ 0.00 / 24.70 ms |  0.01 %] [org.glassfish.jersey.server.mvc.internal.TemplateMethodInterceptor @141bcd49 #4000] AFTER context.proceed()
 12 ...</fo:block></fo:block></fo:block>
            </fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Custom Injection and Lifecycle Management</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Custom Injection and Lifecycle Management</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="ioc"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 23. Custom Injection and Lifecycle Management</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Since version 2.0, Jersey uses <fo:basic-link external-destination="url(http://hk2.java.net/)"><fo:inline>HK2</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://hk2.java.net/)">http://hk2.java.net/</fo:basic-link>]</fo:inline> library for component life cycle management and dependency injection.
        Rather than spending a lot of effort in maintaining Jersey specific API (as it used to be before Jersey 2.0 version),
        Jersey defines several extension points where end-user application can directly manipulate Jersey HK2 bindings
        using the HK2 public API to customize life cycle management and dependency injection of application components.
    </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Jersey user guide can by no means supply an exhaustive documentation of HK2 API in it's entire scope.
        This chapter only points out the most common scenarios related
        to dependency injection in Jersey and suggests possible options to implement these scenarios.
        It is highly recommended to check out the <fo:basic-link external-destination="url(http://hk2.java.net/)"><fo:inline>HK2</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://hk2.java.net/)">http://hk2.java.net/</fo:basic-link>]</fo:inline> website and read HK2 documentation in order to get
        better understanding of suggested approaches. HK2 documentation should also help in resolving use cases
        that are not discussed in this writing.
    </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        There are typically three main use cases, where your application may consider dealing with
        HK2 APIs exposed in Jersey:

        <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e17007"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17008"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Implementing a custom injection provider that allows an application to define
                additional types to be injectable into Jersey-managed JAX-RS components.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17011"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Defining a custom injection annotation (other than <fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/inject/Inject.html)"><fo:inline>@Inject</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/inject/Inject.html)">http://docs.oracle.com/javaee/7/api/javax/inject/Inject.html</fo:basic-link>]</fo:inline>
                or <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html)"><fo:inline>@Context</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Context.html</fo:basic-link>]</fo:inline>) to mark application injection points.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17020"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Specifying a custom component life cycle management for your application
                components.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
    </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Relying on Servlet HTTP session concept is not very RESTful. It turns the originally state-less HTTP
        communication schema into a state-full manner. However, it could serve
        as a good example that will help me demonstrate implementation of the use cases described above.
        The following examples should work on top of Jersey Servlet integration module. The approach that will be
        demonstrated could be further generalized.
        Bellow i will show how to make actual Servlet <fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpSession.html)"><fo:inline>HttpSession</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpSession.html)">http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpSession.html</fo:basic-link>]</fo:inline> injectable into JAX-RS components
        and how to make this injection work with a custom inject annotation type. Finally, i will demonstrate
        how you can write <fo:inline font-family="monospace">HttpSession</fo:inline>-scoped JAX-RS resources.
    </fo:block><fo:block id="d0e17032"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Implementing Custom Injection Provider</fo:marker><fo:block font-size="20.735999999999997pt">23.1. Implementing Custom Injection Provider</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Jersey implementation allows you to directly inject <fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServletRequest.html)"><fo:inline>HttpServletRequest</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServletRequest.html)">http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServletRequest.html</fo:basic-link>]</fo:inline> instance into
            your JAX-RS components.
            It is quite straight forward to get the appropriate <fo:inline font-family="monospace">HttpSession</fo:inline> instance out of the
            injected request instance.
            Let say, you want to get <fo:inline font-family="monospace">HttpSession</fo:inline> instance directly injected into your JAX-RS
            types like in the code snippet below.

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17046">@Path("di-resource")
public class MyDiResource {

    @Inject HttpSession httpSession;

    ...

}</fo:block>

            To make the above injection work, you will need to define an additional HK2 binding in your
            application <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)"><fo:inline>ResourceConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html</fo:basic-link>]</fo:inline>.
            Let's start with a custom HK2 <fo:basic-link external-destination="url(https://hk2.java.net/apidocs/org/glassfish/hk2/api/Factory.html)"><fo:inline>Factory</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://hk2.java.net/apidocs/org/glassfish/hk2/api/Factory.html)">https://hk2.java.net/apidocs/org/glassfish/hk2/api/Factory.html</fo:basic-link>]</fo:inline> implementation that knows how to extract
            <fo:inline font-family="monospace">HttpSession</fo:inline> out of given <fo:inline font-family="monospace">HttpServletRequest</fo:inline>.

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17061">import org.glassfish.hk2.api.Factory;
    ...

    public class HttpSessionFactory implements Factory&lt;HttpSession&gt; {

    private final HttpServletRequest request;

    @Inject
    public HttpSessionFactory(HttpServletRequest request) {
        this.request = request;
    }

    @Override
    public HttpSession provide() {
       return request.getSession();
    }

    @Override
    public void dispose(HttpSession t) {
    }
}</fo:block>

            Please note that the factory implementation itself relies on having the actual
            <fo:inline font-family="monospace">HttpServletRequest</fo:inline> instance injected.
            In your implementation, you can of course depend on other types (and inject them conveniently)
            as long as these other types are bound to the actual HK2 service locator by Jersey or by your
            application. The key notion to remember here is that your HK2 <fo:inline font-family="monospace">Factory</fo:inline> implementation
            is responsible for implementing the <fo:inline font-family="monospace">provide()</fo:inline> method that is used by HK2
            runtime to retrieve the injected instance. Those of you who worked with Guice binding API in the
            past will most likely find this concept very familiar.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Once implemented, the factory can be used in a custom HK2 <fo:inline font-family="monospace">Binder</fo:inline> to define the
            new injection binding for <fo:inline font-family="monospace">HttpSession</fo:inline>. Finally, the implemented binder
            can be registered in your <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)"><fo:inline>ResourceConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html</fo:basic-link>]</fo:inline>:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17084">import org.glassfish.hk2.utilities.binding.AbstractBinder;
...

public class MyApplication extends ResourceConfig {

    public MyApplication() {

        ...

        register(new AbstractBinder() {
            @Override
            protected void configure() {
                bindFactory(HttpSessionFactory.class).to(HttpSession.class)
                .proxy(true).proxyForSameScope(false).in(RequestScoped.class);
            }
        });
    }
}</fo:block>

            Note that we did not define any explicit injection scope for the new injection binding.
            By default, HK2 factories are bound in a HK2 <fo:basic-link external-destination="url(https://hk2.java.net/apidocs/org/glassfish/hk2/api/PerLookup.html)"><fo:inline>PerLookup</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://hk2.java.net/apidocs/org/glassfish/hk2/api/PerLookup.html)">https://hk2.java.net/apidocs/org/glassfish/hk2/api/PerLookup.html</fo:basic-link>]</fo:inline> scope, which is in most
            cases a good choice and it is suitable also in our example.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            To summarize the approach described above, here is a list of steps to follow
            when implementing custom injection provider in your Jersey application :

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e17092"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17093"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Implement your own HK2 <fo:inline font-family="monospace">Factory</fo:inline> to provide the
                    injectable instances.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17099"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Use the HK2 <fo:inline font-family="monospace">Factory</fo:inline> to define an injection
                    binding for the injected instance via custom HK2 <fo:inline font-family="monospace">Binder</fo:inline>.</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17108"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Register the custom HK2 <fo:inline font-family="monospace">Binder</fo:inline> in your application
                    <fo:inline font-family="monospace">ResourceConfig</fo:inline>.</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            While the <fo:inline font-family="monospace">Factory</fo:inline>-based approach is quite straight-forward and should help you to
            quickly prototype or even implement final solutions, you should bear in mind, that your
            implementation does not need to be based on factories. You can for instance bind your own
            types directly, while still taking advantage of HK2 provided dependency injection.
            Also, in your implementation you may want to pay more attention to defining or managing
            injection binding scopes for the sake of performance or correctness of your custom injection
            extension.

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e17123"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Important</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    While the individual injection binding implementations vary and depend on your use case,
                    to enable your custom injection extension in Jersey, you must register your custom HK2 <fo:basic-link external-destination="url(https://hk2.java.net/apidocs/org/glassfish/hk2/utilities/Binder.html)"><fo:inline>Binder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://hk2.java.net/apidocs/org/glassfish/hk2/utilities/Binder.html)">https://hk2.java.net/apidocs/org/glassfish/hk2/utilities/Binder.html</fo:basic-link>]</fo:inline>
                    implementation in your application <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)"><fo:inline>ResourceConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html</fo:basic-link>]</fo:inline>!
                </fo:block></fo:block></fo:block>
        </fo:block></fo:block><fo:block id="d0e17133"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Defining Custom Injection Annotation</fo:marker><fo:block font-size="20.735999999999997pt">23.2. Defining Custom Injection Annotation</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Java annotations are a convenient way for attaching metadata to various elements of Java code.
            Sometimes you may even decide to combine the metadata with additional functionality, such as
            ability to automatically inject the instances based on the annotation-provided metadata.
            The described scenario is one of the use cases where having means of defining a custom injection
            annotation in your Jersey application may prove to be useful. Obviously, this use case applies also
            to re-used existing, 3rd-party annotation types.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In the following example, we will describe how a custom injection annotation can be supported.
            Let's start with defining a new custom <fo:inline font-family="monospace">SessionInject</fo:inline> injection annotation
            that we will specifically use to inject instances of <fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpSession.html)"><fo:inline>HttpSession</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpSession.html)">http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpSession.html</fo:basic-link>]</fo:inline>
            (similarly to the previous example):

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17146">@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.FIELD)
public @interface SessionInject { }</fo:block>

            The above <fo:inline font-family="monospace">@SessionInject</fo:inline> annotation should be then used as follows:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17152">@Path("di-resource")
public class MyDiResource {

    @SessionInject HttpSession httpSession;

    ...

}</fo:block>

            Again, the semantics remains the same as in the example described in the previous section.
            You want to have the actual HTTP Servlet session instance injected into your
            <fo:inline font-family="monospace">MyDiResource</fo:inline> instance. This time however, you expect that the
            <fo:inline font-family="monospace">httpSession</fo:inline> field to be injected must be annotated with
            a custom <fo:inline font-family="monospace">@SessionInject</fo:inline> annotation. Obviously, in this simplistic case
            the use of a custom injection annotation is an overkill, however, the simplicity of the
            use case will help us to avoid use case specific distractions and allow us better focus on
            the important aspects of the job of defining a custom injection annotation.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            If you remember from the previous section, to make the injection in the code snippet above work,
            you first need to implement the injection provider (HK2 <fo:basic-link external-destination="url(https://hk2.java.net/apidocs/org/glassfish/hk2/api/Factory.html)"><fo:inline>Factory</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://hk2.java.net/apidocs/org/glassfish/hk2/api/Factory.html)">https://hk2.java.net/apidocs/org/glassfish/hk2/api/Factory.html</fo:basic-link>]</fo:inline>) as well as define the
            injection binding for the <fo:inline font-family="monospace">HttpSession</fo:inline> type. That part we have already
            done in the previous section.
            We will now focus on what needs to be done to inform the HK2 runtime about our <fo:inline font-family="monospace">@SessionInject</fo:inline>
            annotation type that we want to support as a new injection point marker annotation. To do that,
            we need to implement our own HK2 <fo:basic-link external-destination="url(https://hk2.java.net/apidocs/org/glassfish/hk2/api/InjectionResolver.html)"><fo:inline>InjectionResolver</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://hk2.java.net/apidocs/org/glassfish/hk2/api/InjectionResolver.html)">https://hk2.java.net/apidocs/org/glassfish/hk2/api/InjectionResolver.html</fo:basic-link>]</fo:inline> for the annotation as demonstrated
            in the following listing:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17178">import javax.inject.Inject;
import javax.inject.Named;

import javax.servlet.http.HttpSession;

import org.glassfish.hk2.api.InjectionResolver;
import org.glassfish.hk2.api.ServiceHandle;

...

public class SessionInjectResolver implements InjectionResolver&lt;SessionInject&gt; {

    @Inject
    @Named(InjectionResolver.SYSTEM_RESOLVER_NAME)
    InjectionResolver&lt;Inject&gt; systemInjectionResolver;

    @Override
    public Object resolve(Injectee injectee, ServiceHandle&lt;?&gt; handle) {
        if (HttpSession.class == injectee.getRequiredType()) {
            return systemInjectionResolver.resolve(injectee, handle);
        }

        return null;
    }

    @Override
    public boolean isConstructorParameterIndicator() {
        return false;
    }

    @Override
    public boolean isMethodParameterIndicator() {
        return false;
    }
}</fo:block>

            The <fo:inline font-family="monospace">SessionInjectResolver</fo:inline> above just delegates to the default
            HK2 system injection resolver to do the actual work.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            You again need to register your injection resolver with your Jersey application,
            and you can do it the same was as in the previous case. Following listing includes
            HK2 binder that registers both, the injection provider from the previous step
            as well as the new HK2 inject resolver with Jersey application <fo:inline font-family="monospace">ResourceConfig</fo:inline>.
            Note that in this case we're explicitly binding the <fo:inline font-family="monospace">SessionInjectResolver</fo:inline>
            to a <fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/inject/Singleton.html)"><fo:inline>@Singleton</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/inject/Singleton.html)">http://docs.oracle.com/javaee/7/api/javax/inject/Singleton.html</fo:basic-link>]</fo:inline> scope to avoid the unnecessary proliferation of
            <fo:inline font-family="monospace">SessionInjectResolver</fo:inline> instances in the application:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17198">import org.glassfish.hk2.api.TypeLiteral;
import org.glassfish.hk2.utilities.binding.AbstractBinder;

import javax.inject.Singleton;

...

public class MyApplication extends ResourceConfig {

    public MyApplication() {

        ...

        register(new AbstractBinder() {
            @Override
            protected void configure() {
                bindFactory(HttpSessionFactory.class).to(HttpSession.class);

                bind(SessionInjectResolver.class)
                    .to(new TypeLiteral&lt;InjectionResolver&lt;SessionInject&gt;&gt;(){})
                    .in(Singleton.class);
            }
        });
    }
}</fo:block>
        </fo:block></fo:block><fo:block id="d0e17201"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Custom Life Cycle Management</fo:marker><fo:block font-size="20.735999999999997pt">23.3. Custom Life Cycle Management</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The last use case discussed in this chapter will cover managing custom-scoped components
            within a Jersey application.
            If not configured otherwise, then all JAX-RS resources are by default managed on a per-request basis. A new instance
            of given resource class will be created for each incoming request that should be handled by that resource class.
            Let say you want to have your resource class managed in a per-session manner. It means a new instance of your
            resource class should be created only when a new Servlet <fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpSession.html)"><fo:inline>HttpSession</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpSession.html)">http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpSession.html</fo:basic-link>]</fo:inline> is established.
            (As with previous examples in the chapter, this example assumes the deployment of your application
            to a Servlet container.)
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Following is an example of such a resource class that builds on the support for
            <fo:inline font-family="monospace">HttpSession</fo:inline> injection from the earlier examples described in this chapter.
            The <fo:inline font-family="monospace">PerSessionResource</fo:inline> class allows you to count the number of requests made within
            a single client session and provides you a handy sub-resource method to obtain the number via
            a HTTP <fo:inline font-family="monospace">GET</fo:inline> method call:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17220">@Path("session")
public class PerSessionResource {

    @SessionInject HttpSession httpSession;

    AtomicInteger counter = new AtomicInteger();

    @GET
    @Path("id")
    public String getSession() {
        counter.incrementAndGet();
        return httpSession.getId();
    }

    @GET
    @Path("count")
    public int getSessionRequestCount() {
        return counter.incrementAndGet();
    }
}</fo:block>

            Should the above resource be per-request scoped (default option), you would never be able to obtain
            any other number but 1 from it's getReqs sub-resource method, because then for each request
            a new instance of our <fo:inline font-family="monospace">PerSessionResource</fo:inline> class would get created with a fresh
            instance <fo:inline font-family="monospace">counter</fo:inline> field set to 0.
            The value of this field would get incremented to 1 in the the <fo:inline font-family="monospace">getSessionRequestCount</fo:inline>
            method before this value is returned.
            In order to achieve what we want, we have to find a way how to bind the instances of
            our <fo:inline font-family="monospace">PerSessionResource</fo:inline> class to <fo:inline font-family="monospace">HttpSession</fo:inline> instances and
            then reuse those bound instances whenever new request bound to the same HTTP client session arrives.
            Let's see how to achieve this.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            To get better control over your Jersey component instantiation and life cycle,
            you need to implement a custom Jersey <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ComponentProvider.html)"><fo:inline>ComponentProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ComponentProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ComponentProvider.html</fo:basic-link>]</fo:inline> SPI,
            that would manage your custom components.
            Although it might seem quite complex to implement such a thing,
            the component provider concept in Jersey is in fact very simple. It allows you to define
            your own HK2 injection bindings for the types that you are interested in,
            while informing the Jersey runtime at the same time that it should back out and leave
            the component management to your provider in such a case.
            By default, if there is no custom component provider found for any given component type, Jersey
            runtime assumes the role of the default component provider and automatically defines the default
            HK2 binding for the component type.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Following example shows a simple <fo:inline font-family="monospace">ComponentProvider</fo:inline> implementation,
            for our use case. Some comments on the code follow.

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17248">import javax.inject.Inject;
import javax.inject.Provider;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
...
import org.glassfish.hk2.api.DynamicConfiguration;
import org.glassfish.hk2.api.DynamicConfigurationService;
import org.glassfish.hk2.api.Factory;
import org.glassfish.hk2.api.PerLookup;
import org.glassfish.hk2.api.ServiceLocator;
import org.glassfish.hk2.utilities.binding.BindingBuilderFactory;
import org.glassfish.jersey.server.spi.ComponentProvider;

@javax.ws.rs.ext.Provider
public class PerSessionComponentProvider implements ComponentProvider {

    private ServiceLocator locator;

    static class PerSessionFactory implements Factory&lt;PerSessionResource&gt;{
        static ConcurrentHashMap&lt;String, PerSessionResource&gt; perSessionMap
                = new ConcurrentHashMap&lt;String, PerSessionResource&gt;();


        private final Provider&lt;HttpServletRequest&gt; requestProvider;
        private final ServiceLocator locator;

        @Inject
        public PerSessionFactory(
                Provider&lt;HttpServletRequest&gt; request,
                ServiceLocator locator) {

            this.requestProvider = request;
            this.locator = locator;
        }

        @Override
        @PerLookup
        public PerSessionResource provide() {
            final HttpSession session = requestProvider.get().getSession();

            if (session.isNew()) {
                PerSessionResource newInstance = createNewPerSessionResource();
                perSessionMap.put(session.getId(), newInstance);

                return newInstance;
            } else {
                return perSessionMap.get(session.getId());
            }
        }

        @Override
        public void dispose(PerSessionResource r) {
        }

        private PerSessionResource createNewPerSessionResource() {
            final PerSessionResource perSessionResource = new PerSessionResource();
            locator.inject(perSessionResource);
            return perSessionResource;
        }
    }

    @Override
    public void initialize(ServiceLocator locator) {
        this.locator = locator;
    }

    @Override
    public boolean bind(Class&lt;?&gt; component, Set&lt;Class&lt;?&gt;&gt; providerContracts) {
        if (component == PerSessionResource.class) {

            final DynamicConfigurationService dynamicConfigService =
                locator.getService(DynamicConfigurationService.class);
            final DynamicConfiguration dynamicConfiguration =
                dynamicConfigService.createDynamicConfiguration();

            BindingBuilderFactory
                .addBinding(BindingBuilderFactory.newFactoryBinder(PerSessionFactory.class)
                .to(PerSessionResource.class), dynamicConfiguration);

            dynamicConfiguration.commit();

            return true;
        }
        return false;
    }

    @Override
    public void done() {
    }
}</fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The first and very important aspect of writing your own <fo:inline font-family="monospace">ComponentProvider</fo:inline>
            in Jersey is to store the actual HK2 <fo:basic-link external-destination="url(https://hk2.java.net/apidocs/org/glassfish/hk2/api/ServiceLocator.html)"><fo:inline>ServiceLocator</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://hk2.java.net/apidocs/org/glassfish/hk2/api/ServiceLocator.html)">https://hk2.java.net/apidocs/org/glassfish/hk2/api/ServiceLocator.html</fo:basic-link>]</fo:inline> instance that will be passed to you as
            the only argument of the provider <fo:inline font-family="monospace">initialize</fo:inline> method.
            Your component provider instance will not get injected at all so this is more less your only chance
            to get access to the HK2 runtime of your application. Please bear in mind, that at the time when
            your component provider methods get invoked, the <fo:inline font-family="monospace">ServiceLocator</fo:inline> is not fully configured yet.
            This limitation applies to all component provider methods, as the main goal of any component provider
            is to take part in configuring the application's <fo:inline font-family="monospace">ServiceLocator</fo:inline>.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Now let's examine the <fo:inline font-family="monospace">bind</fo:inline> method, which is where your provider tells the HK2
            how to bind your component.
            Jersey will invoke this method multiple times, once for each type that is registered with the
            actual application.
            Every time the <fo:inline font-family="monospace">bind</fo:inline> method is invoked, your component provider needs to decide
            if it is taking control over the component or not. In our case we know exactly which Java type
            we are interested in (<fo:inline font-family="monospace">PerSessionResource</fo:inline> class),
            so the logic in our <fo:inline font-family="monospace">bind</fo:inline> method is quite straightforward. If we see our
            <fo:inline font-family="monospace">PerSessionResource</fo:inline> class it is our turn to provide our custom binding for the class,
            otherwise we just return false to make Jersey poll other providers and, if no provider kicks in,
            eventually provide the default HK2 binding for the component.
            Please, refer to the <fo:basic-link external-destination="url(http://hk2.java.net/)"><fo:inline>HK2</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://hk2.java.net/)">http://hk2.java.net/</fo:basic-link>]</fo:inline> documentation for the details of the concrete HK2 APIs used in
            the <fo:inline font-family="monospace">bind</fo:inline> method implementation above. The main idea behind the code is that
            we register a new HK2 <fo:basic-link external-destination="url(https://hk2.java.net/apidocs/org/glassfish/hk2/api/Factory.html)"><fo:inline>Factory</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://hk2.java.net/apidocs/org/glassfish/hk2/api/Factory.html)">https://hk2.java.net/apidocs/org/glassfish/hk2/api/Factory.html</fo:basic-link>]</fo:inline> (<fo:inline font-family="monospace">PerSessionFactory</fo:inline>), to provide
            the <fo:inline font-family="monospace">PerSessionResource</fo:inline> instances to HK2.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The implementation of the <fo:inline font-family="monospace">PerSessionFactory</fo:inline> is is also included above.
            Please note that as opposed to a component provider implementation that should never itself rely
            on an injection support, the factory bound by our component provider would get injected just fine,
            since it is only instantiated later, once the Jersey runtime for the application is fully
            initialized including the fully configured HK2 runtime.
            Whenever a new session is seen, the factory instantiates and injects
            a new PerSessionResource instance. The instance is then stored in the perSessionMap for later use
            (for future calls).
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In a real life scenario, you would want to pay more attention to possible synchronization issues.
            Also, we do not consider a mechanism that would clean-up any obsolete resources for closed, expired or
            otherwise invalidated HTTP client sessions.
            We have omitted those considerations here for the sake of brevity of our example.
        </fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Jersey CDI Container Agnostic Support</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Jersey CDI Container Agnostic Support</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="cdi.support"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 24. Jersey CDI Container Agnostic Support</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="cdi.support.intro"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Introduction</fo:marker><fo:block font-size="20.735999999999997pt">24.1. Introduction</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          At the time of this writing, Java SE support is being discussed as one of important additions to CDI 2.0 specification.
          Existing CDI implementations brought this feature already, only container bootstrapping has not yet been standardized.
          In Jersey version 2.15 we introduced Weld SE support, so that people could take advantage of CDI features 
          also when running in Java SE environment. As part of this work, the old Jersey CDI module has been refactored
          so that it supports CDI integration in any CDI-enabled HTTP container.
        </fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e17316"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                This chapter is mainly focused on server-side Jersey Weld SE support.
                We will mention other containers that are known to be working with Jersey CDI integration modules.
                We will also describe features demonstrated in Jersey HelloWorld Weld example
                and provide some hints on how to enable Java SE support for other (non Weld) CDI implementations.
            </fo:block></fo:block></fo:block></fo:block><fo:block id="cdi.support.existing.containers"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Containers Known to Work With Jersey CDI Support</fo:marker><fo:block font-size="20.735999999999997pt">24.2. Containers Known to Work With Jersey CDI Support</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          To stick with JAX-RS specification, Jersey has to support JAX-RS/CDI integration in Java EE environment.
          The two containers supporting JAX-RS/CDI integration out of the box are Oracle GlassFish and Oracle WebLogic application server.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          Apache Tomcat is another Servlet container that is known to work fine with Jersey CDI support.
          However, things do not work there out of the box. You need to enable CDI support in Tomcat e.g. using Weld.
          Jersey <fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/cdi-webapp)"><fo:inline>CDI example</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/cdi-webapp)">https://github.com/jersey/jersey/tree/2.28/examples/cdi-webapp</fo:basic-link>]</fo:inline> shows how a WAR application could be packaged
          (see <fo:inline font-family="monospace">tomcat-packaging</fo:inline> profile in the pom file) in order to enable JAX-RS/CDI integration
          in Tomcat with Jersey using Weld.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          If not bundled already with underlying Servlet container, the following Jersey module needs to be packaged with the application
          or otherwise included in the container class-path:
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17334">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.ext.cdi&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-cdi1x&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;
            </fo:block>
        </fo:block></fo:block><fo:block id="cdi.support.request.scope.binding"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Request Scope Binding</fo:marker><fo:block font-size="20.735999999999997pt">24.3. Request Scope Binding</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        There is a common pattern for all above mentioned containers. Jersey CDI integration builds upon existing CDI/Servlet integration there.
        In other words, in all above cases, Jersey application must be deployed as a Servlet, where the underlying Servlet container
        has CDI integrated already and CDI container bootstrapped properly.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The key feature in CDI/Servlet integration is proper request scope binding. If this feature was missing,
        you would not be able to use any request scoped CDI beans in your Jersey application. To make Jersey work with CDI
        in containers that do not have request scope binding resolved, some extra work is required.
      </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        To allow smooth integration with Jersey request scope a new SPI, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ExternalRequestScope.html)"><fo:inline>ExternalRequestScope</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ExternalRequestScope.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ExternalRequestScope.html</fo:basic-link>]</fo:inline>, was introduced in Jersey version 2.15.
        An SPI implementation should be registered via the standard <fo:inline font-family="monospace">META-INF/services</fo:inline> mechanism
        and needs to make sure CDI implentation request scope has been properly managed and request scoped data kept in the right context. 
        For performance reasons, at most a single external request scope provider is allowed by Jersey runtime.
      </fo:block></fo:block><fo:block id="cdi.support.weld.se"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Jersey Weld SE Support</fo:marker><fo:block font-size="20.735999999999997pt">24.4. Jersey Weld SE Support</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The extra work to align HTTP request with CDI request scope was already done by Jersey team for Weld 2.x implementation.
            In order to utilize Jersey/Weld request scope binding, you need to use the following module:
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17357">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.ext.cdi&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-weld2-se&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;
            </fo:block>
            Then you could use your CDI backed JAX-RS components in a Jersey application running in Grizzly HTTP container
            bootstrapped as follows:
            <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e17360"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 24.1. Bootstrapping Jersey application with Weld support on Grizzly</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17363">  1             Weld weld = new Weld();
  2             weld.initialize();
  3 
  4             final HttpServer server = GrizzlyHttpServerFactory.createHttpServer(URI.create("http://localhost:8080/weld/"), jerseyResourceConfig);
  5 
  6             // ...
  7 
  8             server.shutdownNow();
  9             weld.shutdown();</fo:block></fo:block></fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
          The above pattern could be applied also for other Jersey supported HTTP containers as long as you stick with CDI Weld 2.x implementation.
          You simply add the above mentioned <fo:inline font-family="monospace">jersey-weld2-se</fo:inline> module into you class-path and bootstrap the Weld container manually
          before starting the HTTP container.
        </fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Spring DI</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Spring DI</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="spring"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 25. Spring DI</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Jersey provides an extension to support Spring DI.
        This enables Jersey to use Spring beans as JAX-RS components (e.g. resources and providers) and also allows
        Spring to inject into Jersey managed components.
    </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        The Spring extension module configuration is based on annotations.
        Spring beans are injected and JAX-RS classes are made Spring managed using annotations.
        Injected Spring beans can have further dependencies injected using Spring XML configuration.
        Spring singleton and request scopes are supported.
    </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        To enable JAX-RS resources to work Spring functionality that requires proxying, such as Spring transaction management
        (with <fo:inline font-family="monospace">@Transactional</fo:inline>), Spring Security and aspect oriented programming (such as <fo:inline font-family="monospace">@Aspect</fo:inline>), the resources
        must themselves be managed by Spring, by annotating with <fo:inline font-family="monospace">@Component</fo:inline>, <fo:inline font-family="monospace">@Service</fo:inline>,
        <fo:inline font-family="monospace">@Controller</fo:inline> or <fo:inline font-family="monospace">@Repository</fo:inline>:

        <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17399">  1 import javax.ws.rs.GET;
  2 import javax.ws.rs.Path;
  3 import org.springframework.stereotype.Component;
  4 
  5 @Component
  6 @Path("/")
  7 public class SomeResource {
  8 
  9     @Transactional
 10     @GET
 11     public void updateResource() {
 12         // ...
 13     }
 14 }
 15         </fo:block>
    </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Limitations:

        <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e17404"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17405"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>Spring beans can't be injected directly into JAX-RS classes by using Spring XML configuration</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
    </fo:block><fo:block id="d0e17409"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Dependencies</fo:marker><fo:block font-size="20.735999999999997pt">25.1. Dependencies</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            If you want to use Jersey Spring DI support
            you will need to add the <fo:inline font-family="monospace">jersey-spring4</fo:inline> module into the list of your dependencies:

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17417">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.ext&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-spring4&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The above module adds transitive dependencies on Spring modules.
            See <fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-spring4/dependencies.html)"><fo:inline>jersey-spring4</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/project-info/2.28/jersey/project/jersey-spring4/dependencies.html)">https://jersey.github.io/project-info/2.28/jersey/project/jersey-spring4/dependencies.html</fo:basic-link>]</fo:inline> module dependencies for more details about list and scope of dependencies.
            Please note the module depends on <fo:basic-link external-destination="url(https://hk2.java.net/spring-bridge/)"><fo:inline>The Spring/HK2 Bridge</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://hk2.java.net/spring-bridge/)">https://hk2.java.net/spring-bridge/</fo:basic-link>]</fo:inline> that is used to inject Spring services into HK2 services
            or inject HK2 services into Spring services.
        </fo:block></fo:block><fo:block id="d0e17428"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Registration and Configuration</fo:marker><fo:block font-size="20.735999999999997pt">25.2. Registration and Configuration</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            To use capabilities of Jersey Spring 3 DI support in your JAX-RS/Jersey application you need to have
            the above mentioned module on your class-path.
        </fo:block></fo:block><fo:block id="d0e17433"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Example</fo:marker><fo:block font-size="20.735999999999997pt">25.3. Example</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">To see an example of Spring DI support in Jersey refer to the
            <fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/helloworld-spring-webapp)"><fo:inline>Spring DI Example</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/2.28/examples/helloworld-spring-webapp)">https://github.com/jersey/jersey/tree/2.28/examples/helloworld-spring-webapp</fo:basic-link>]</fo:inline>.</fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Jersey Test Framework</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Jersey Test Framework</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="test-framework"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 26. Jersey Test Framework</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Jersey Test Framework originated as an internal tool used for verifying the correct implementation of
        server-side components. Testing RESTful applications became a more pressing issue with "modern" approaches like
        test-driven development and users started to look for a tool that could help with designing and running
        the tests as fast as possible but with many options related to test execution environment.
    </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
        Current implementation of Jersey Test Framework supports the following set of features:

        <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e17449"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17450"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>pre-configured client to access deployed application</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17453"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>support for multiple containers - grizzly, in-memory, jdk, simple, jetty</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17456"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>able to run against any external container</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17459"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>automated configurable traffic logging</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

        Jersey Test Framework is primarily based on JUnit but you can run tests using TestNG as well. It works almost out-of-the
        box and it is easy to integrate it within your Maven-based project. While it is usable on all environments where you can
        run JUnit, we support primarily the Maven-based setups.
    </fo:block><fo:block id="d0e17463"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Basics</fo:marker><fo:block font-size="20.735999999999997pt">26.1. Basics</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17466">  1 public class SimpleTest extends JerseyTest {
  2 
  3     @Path("hello")
  4     public static class HelloResource {
  5         @GET
  6         public String getHello() {
  7             return "Hello World!";
  8         }
  9     }
 10 
 11     @Override
 12     protected Application configure() {
 13         return new ResourceConfig(HelloResource.class);
 14     }
 15 
 16     @Test
 17     public void test() {
 18         final String hello = target("hello").request().get(String.class);
 19         assertEquals("Hello World!", hello);
 20     }
 21 }</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            If you want to develop a test using Jersey Test Framework, you need to subclass <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html)"><fo:inline>JerseyTest</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html</fo:basic-link>]</fo:inline> and
            configure the set of resources and/or providers that will be deployed as part of the test application. This short
            code snippet shows basic resource class <fo:inline font-family="monospace">HelloResource</fo:inline> used in tests defined as part of the
            <fo:inline font-family="monospace">SimpleTest</fo:inline> class. The overridden <fo:inline font-family="monospace">configure</fo:inline> method returns
            a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)"><fo:inline>ResourceConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html</fo:basic-link>]</fo:inline> of the test application,that contains only the <fo:inline font-family="monospace">HelloResource</fo:inline>
            resource class. <fo:inline font-family="monospace">ResourceConfig</fo:inline> is a sub-class of JAX-RS <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)"><fo:inline>Application</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html</fo:basic-link>]</fo:inline>. It is a Jersey
            convenience class for configuring JAX-RS applications. <fo:inline font-family="monospace">ResourceConfig</fo:inline> also implements JAX-RS
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html)"><fo:inline>Configurable</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Configurable.html</fo:basic-link>]</fo:inline> interface to make the application configuration more flexible.
        </fo:block></fo:block><fo:block id="d0e17500"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Supported Containers</fo:marker><fo:block font-size="20.735999999999997pt">26.2. Supported Containers</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html)"><fo:inline>JerseyTest</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html</fo:basic-link>]</fo:inline> supports deploying applications on various containers, all (except the external container
            wrapper) need to have some "glue" code to be supported. Currently Jersey Test Framework provides support for
            Grizzly, In-Memory, JDK (<fo:inline font-family="monospace">com.sun.net.httpserver.HttpServer</fo:inline>), Simple HTTP container
            (<fo:inline font-family="monospace">org.simpleframework.http</fo:inline>) and Jetty HTTP container (<fo:inline font-family="monospace">org.eclipse.jetty</fo:inline>).
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            A test container is selected based on various inputs.
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html#getTestContainerFactory())"><fo:inline>JerseyTest#getTestContainerFactory()</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html#getTestContainerFactory())">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html#getTestContainerFactory()</fo:basic-link>]</fo:inline>
            is always executed, so if you override it and provide your own version of
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/spi/TestContainerFactory.html)"><fo:inline>TestContainerFactory</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/spi/TestContainerFactory.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/spi/TestContainerFactory.html</fo:basic-link>]</fo:inline>, nothing else will be considered.
            Setting a system variable
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/TestProperties.html#CONTAINER_FACTORY)"><fo:inline>TestProperties#CONTAINER_FACTORY</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/TestProperties.html#CONTAINER_FACTORY)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/TestProperties.html#CONTAINER_FACTORY</fo:basic-link>]</fo:inline>
            has similar effect. This way you may defer the decision on which containers you want to run your tests
            from the compile time to the test execution time.
            Default implementation of <fo:inline font-family="monospace">TestContainerFactory</fo:inline> looks for container factories on classpath.
            If more than one instance is found and there is a Grizzly test container factory among them, it will be used; if not,
            a warning will be logged and the first found factory will be instantiated.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Following is a brief description of all container factories supported in Jersey Test Framework.
            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e17533"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17534"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        Jersey provides 2 different test container factories based on Grizzly.
                        The <fo:inline font-family="monospace">GrizzlyTestContainerFactory</fo:inline> creates a container that can run as a light-weight,
                        plain HTTP container. Almost all Jersey tests are using Grizzly HTTP test container factory.
                        Second factory is <fo:inline font-family="monospace">GrizzlyWebTestContainerFactory</fo:inline> that is Servlet-based and supports
                        Servlet deployment context for tested applications. This factory can be useful when testing more complex
                        Servlet-based application deployments.

                        <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17543">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.test-framework.providers&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-test-framework-provider-grizzly2&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17546"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        In-Memory container is not a real container. It starts Jersey application and directly calls internal
                        APIs to handle request created by client provided by test framework. There is no network communication
                        involved. This containers does not support servlet and other container dependent features, but it is
                        a perfect choice for simple unit tests.

                        <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17549">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.test-framework.providers&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-test-framework-provider-inmemory&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17552"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        <fo:inline font-family="monospace">HttpServer</fo:inline> from Oracle JDK is another supported test container.

                        <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17558">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.test-framework.providers&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-test-framework-provider-jdk-http&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17561"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        Simple container (<fo:inline font-family="monospace">org.simpleframework.http</fo:inline>) is another light-weight HTTP container
                        that integrates with Jersey and is supported by Jersey Test Framework.

                        <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17567">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.test-framework.providers&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-test-framework-provider-simple&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17570"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        Jetty container (<fo:inline font-family="monospace">org.eclipse.jetty</fo:inline>) is another high-performance, light-weight HTTP server
                        that integrates with Jersey and is supported by Jersey Test Framework.

                        <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17576">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.test-framework.providers&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-test-framework-provider-jetty&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>
                    </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
        </fo:block></fo:block><fo:block id="testng"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Running TestNG Tests</fo:marker><fo:block font-size="20.735999999999997pt">26.3. Running TestNG Tests</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            It is possible to run not only JUnit tests but also tests based on TestNG. In order to do this you need to make sure
            the following 2 steps are fulfilled:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e17585"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17586"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        Extend <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTestNg.html)"><fo:inline>JerseyTestNg</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTestNg.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTestNg.html</fo:basic-link>]</fo:inline>, or one of it's inner classes <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTestNg.ContainerPerClassTest.html)"><fo:inline>JerseyTestNg.ContainerPerClassTest</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTestNg.ContainerPerClassTest.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTestNg.ContainerPerClassTest.html</fo:basic-link>]</fo:inline>
                        / <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTestNg.ContainerPerMethodTest.html)"><fo:inline>JerseyTestNg.ContainerPerMethodTest</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTestNg.ContainerPerMethodTest.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTestNg.ContainerPerMethodTest.html</fo:basic-link>]</fo:inline>, instead of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html)"><fo:inline>JerseyTest</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html</fo:basic-link>]</fo:inline>.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17601"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        Add TestNG to your class-patch, i.e.:

                        <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17604">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.test-framework&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-test-framework-core&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.testng&lt;/groupId&gt;
    &lt;artifactId&gt;testng&lt;/artifactId&gt;
    &lt;version&gt;...&lt;/version&gt;
&lt;/dependency&gt;</fo:block>
                    </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            To discuss the former requirement in more depth we need to take a look at the differences between JUnit and TestNG.
            JUnit creates a new instance of a test class for every test present in that class which, from the point of view of
            Jersey Test Framework, means that new test container and client is created for each test of a test class. However,
            TestNG creates only one instance of a test class and the initialization of the test container depends more on
            setup/teardown methods (driven by <fo:inline font-family="monospace">@BeforeXXX</fo:inline> and <fo:inline font-family="monospace">@AfterXXX</fo:inline> annotations) than in
            JUnit. This means that, basically, you can start one instance of test container for all tests present in a test class
            or separate test container for each and every test. For this reason a separate subclasses of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTestNg.html)"><fo:inline>JerseyTestNg</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTestNg.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTestNg.html</fo:basic-link>]</fo:inline>
            have been created:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e17619"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17620"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTestNg.ContainerPerClassTest.html)"><fo:inline>JerseyTestNg.ContainerPerClassTest</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTestNg.ContainerPerClassTest.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTestNg.ContainerPerClassTest.html</fo:basic-link>]</fo:inline> creates one container to run all the tests in. Setup method
                        is annotated with <fo:inline font-family="monospace">@BeforeClass</fo:inline>, teardown method with <fo:inline font-family="monospace">@AfterClass</fo:inline>.
                    </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        For example take a look at <fo:inline font-family="monospace">ContainerPerClassTest</fo:inline> test. It contains two test
                        methods (<fo:inline font-family="monospace">first</fo:inline> and <fo:inline font-family="monospace">second</fo:inline>), one singleton resource that returns an
                        increasing sequence of number. Since we spawn only one instance of a test container for the whole class the
                        value expected in the first test is <fo:inline font-family="monospace">1</fo:inline> and in the second it's <fo:inline font-family="monospace">2</fo:inline>.

                        <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17649">  1 public class ContainerPerClassTest extends JerseyTestNg.ContainerPerClassTest {
  2 
  3     @Path("/")
  4     @Singleton
  5     @Produces("text/plain")
  6     public static class Resource {
  7 
  8         private int i = 1;
  9 
 10         @GET
 11         public int get() {
 12             return i++;
 13         }
 14     }
 15 
 16     @Override
 17     protected Application configure() {
 18         return new ResourceConfig(Resource.class);
 19     }
 20 
 21     @Test(priority = 1)
 22     public void first() throws Exception {
 23         test(1);
 24     }
 25 
 26     @Test(priority = 2)
 27     public void second() throws Exception {
 28         test(2);
 29     }
 30 
 31     private void test(final Integer expected) {
 32         final Response response = target().request().get();
 33 
 34         assertEquals(response.getStatus(), 200);
 35         assertEquals(response.readEntity(Integer.class), expected);
 36     }
 37 }</fo:block>
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17652"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTestNg.ContainerPerMethodTest.html)"><fo:inline>JerseyTestNg.ContainerPerMethodTest</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTestNg.ContainerPerMethodTest.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTestNg.ContainerPerMethodTest.html</fo:basic-link>]</fo:inline> creates separate container for each test. Setup method
                        is annotated with <fo:inline font-family="monospace">@BeforeMethod</fo:inline>, teardown method with <fo:inline font-family="monospace">@AfterMethod</fo:inline>.
                    </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                        We can create a similar test to the previous one. Take a look at <fo:inline font-family="monospace">ContainerPerMethodTest</fo:inline>
                        test. It looks the same except the expected values and extending class: it contains two test
                        methods (<fo:inline font-family="monospace">first</fo:inline> and <fo:inline font-family="monospace">second</fo:inline>), one singleton resource that returns an
                        increasing sequence of number. In this case we create a separate test container for each test so
                        value expected in the first test is <fo:inline font-family="monospace">1</fo:inline> and in the second it's also <fo:inline font-family="monospace">1</fo:inline>.

                        <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17681">  1 public class ContainerPerMethodTest extends JerseyTestNg.ContainerPerMethodTest {
  2 
  3     @Path("/")
  4     @Singleton
  5     @Produces("text/plain")
  6     public static class Resource {
  7 
  8         private int i = 1;
  9 
 10         @GET
 11         public int get() {
 12             return i++;
 13         }
 14     }
 15 
 16     @Override
 17     protected Application configure() {
 18         return new ResourceConfig(Resource.class);
 19     }
 20 
 21     @Test
 22     public void first() throws Exception {
 23         test(1);
 24     }
 25 
 26     @Test
 27     public void second() throws Exception {
 28         test(1);
 29     }
 30 
 31     private void test(final Integer expected) {
 32         final Response response = target().request().get();
 33 
 34         assertEquals(response.getStatus(), 200);
 35         assertEquals(response.readEntity(Integer.class), expected);
 36     }
 37 }</fo:block>
                    </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            If you need more complex setup of your test you can achieve this by directly extending the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTestNg.html)"><fo:inline>JerseyTestNg</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTestNg.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTestNg.html</fo:basic-link>]</fo:inline>
            class create setup/teardown methods suited to your needs and provide a strategy for storing and handling a test
            container / client instance (see <fo:inline font-family="monospace">JerseyTestNg.configureStrategy(TestNgStrategy)</fo:inline> method).
        </fo:block></fo:block><fo:block id="d0e17693"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Advanced features</fo:marker><fo:block font-size="20.735999999999997pt">26.4. Advanced features</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e17696"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker"><fo:inline font-family="monospace">JerseyTest</fo:inline> Features</fo:marker><fo:block font-size="17.28pt">26.4.1. <fo:inline font-family="monospace">JerseyTest</fo:inline> Features</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:inline font-family="monospace">JerseyTest</fo:inline> provide
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html#enable(java.lang.String))"><fo:inline>enable(...)</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html#enable(java.lang.String))">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html#enable(java.lang.String)</fo:basic-link>]</fo:inline>,
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html#forceEnable(java.lang.String))"><fo:inline>forceEnable(...)</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html#forceEnable(java.lang.String))">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html#forceEnable(java.lang.String)</fo:basic-link>]</fo:inline>
                and <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html#disable(java.lang.String))"><fo:inline>disable(...)</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html#disable(java.lang.String))">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html#disable(java.lang.String)</fo:basic-link>]</fo:inline>
                methods, that give you control over configuring values of the properties defined and described in the
                <fo:inline font-family="monospace">TestProperties</fo:inline> class. A typical code that overrides the default property values is listed
                below:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17717">  1 public class SimpleTest extends JerseyTest {
  2     // ...
  3 
  4     @Override
  5     protected Application configure() {
  6         enable(TestProperties.LOG_TRAFFIC);
  7         enable(TestProperties.DUMP_ENTITY);
  8 
  9         // ...
 10 
 11     }
 12 }</fo:block>

                The code in the example above enables test traffic logging (inbound and outbound headers) as well as
                dumping the HTTP message entity as part of the traffic logging.
            </fo:block></fo:block><fo:block id="d0e17720"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">External container</fo:marker><fo:block font-size="17.28pt">26.4.2. External container</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Complicated test scenarios may require fully started containers with complex setup configuration, that is not
                easily doable with current Jersey container support. To address these use cases, Jersey Test Framework providers
                general fallback mechanism - an External Test Container Factory. Support of this external container "wrapper" is
                provided as the following module:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17725">&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.jersey.test-framework.providers&lt;/groupId&gt;
    &lt;artifactId&gt;jersey-test-framework-provider-external&lt;/artifactId&gt;
    &lt;version&gt;2.28&lt;/version&gt;
&lt;/dependency&gt;</fo:block>

                As indicated, the "container" exposed by this module is just a wrapper or stub, that redirects all request to
                a configured host and port. Writing tests for this container is same as for any other but you have to provide
                the information about host and port during the test execution:

                <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17728">mvn test -Djersey.test.host=myhost.org -Djersey.config.test.container.port=8080</fo:block>
            </fo:block></fo:block><fo:block id="d0e17731"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Test Client configuration</fo:marker><fo:block font-size="17.28pt">26.4.3. Test Client configuration</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Tests might require some advanced client configuration. This is possible by overriding
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html#configureClient(org.glassfish.jersey.client.ClientConfig))"><fo:inline>configureClient(ClientConfig clientConfig)</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html#configureClient(org.glassfish.jersey.client.ClientConfig))">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html#configureClient(org.glassfish.jersey.client.ClientConfig)</fo:basic-link>]</fo:inline>
                method. Typical use case for this is registering more providers, such as <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)"><fo:inline>MessageBodyReader&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyReader.html</fo:basic-link>]</fo:inline>s or
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html)"><fo:inline>MessageBodyWriter&lt;T&gt;</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/MessageBodyWriter.html</fo:basic-link>]</fo:inline>s, or enabling additional features.
            </fo:block></fo:block><fo:block id="d0e17745"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Accessing the logged test records programmatically</fo:marker><fo:block font-size="17.28pt">26.4.4. Accessing the logged test records programmatically</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Sometimes you might need to check a logged message as part of your test assertions. For this purpose Jersey Test
                Framework provides convenient access to the logged records via
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html#getLastLoggedRecord())"><fo:inline>JerseyTest#getLastLoggedRecord()</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html#getLastLoggedRecord())">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html#getLastLoggedRecord()</fo:basic-link>]</fo:inline>
                and
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html#getLoggedRecords())"><fo:inline>JerseyTest#getLoggedRecords()</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html#getLoggedRecords())">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html#getLoggedRecords()</fo:basic-link>]</fo:inline>
                methods. Note that this feature is not enabled by default, see
                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/TestProperties.html#RECORD_LOG_LEVEL)"><fo:inline>TestProperties#RECORD_LOG_LEVEL</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/TestProperties.html#RECORD_LOG_LEVEL)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/TestProperties.html#RECORD_LOG_LEVEL</fo:basic-link>]</fo:inline>
                for more information.
            </fo:block></fo:block></fo:block><fo:block id="parallel"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Parallel Testing with Jersey Test Framework</fo:marker><fo:block font-size="20.735999999999997pt">26.5. Parallel Testing with Jersey Test Framework</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            For a purpose of running multiple test containers in parallel you need to set the
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/TestProperties.CONTAINER_PORT.html)"><fo:inline>TestProperties.CONTAINER_PORT</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/TestProperties.CONTAINER_PORT.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/TestProperties.CONTAINER_PORT.html</fo:basic-link>]</fo:inline>
            to <fo:inline font-family="monospace">0</fo:inline> value. This will tell Jersey Test Framework (and the underlying test container) to use the
            first available port.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            You can set the value as a system property (via command line option) or directly in the test (to not affect ports of
            other tests):

            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17772">  1 @Override
  2     protected Application configure() {
  3         // Find first available port.
  4         forceSet(TestProperties.CONTAINER_PORT, "0");
  5 
  6         return new ResourceConfig(Resource.class);
  7     }</fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            The easiest way to setup your JUnit or TestNG tests to run in parallel is to configure Maven Surefire plugin. You can
            do this via configuration options <fo:inline font-family="monospace">parallel</fo:inline> and <fo:inline font-family="monospace">threadCount</fo:inline>, i.e.:

                            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17783">...
&lt;configuration&gt;
    &lt;parallel&gt;methods&lt;/parallel&gt;
    &lt;threadCount&gt;5&lt;/threadCount&gt;
    ...
&lt;/configuration&gt;
...</fo:block>

            For more information about this topic consult the following Maven Surefire articles:

            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e17786"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17787"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(http://maven.apache.org/surefire/maven-surefire-plugin/examples/fork-options-and-parallel-execution.html)"><fo:inline>Fork Options and Parallel Test Execution</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://maven.apache.org/surefire/maven-surefire-plugin/examples/fork-options-and-parallel-execution.html)">http://maven.apache.org/surefire/maven-surefire-plugin/examples/fork-options-and-parallel-execution.html</fo:basic-link>]</fo:inline></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17791"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(http://maven.apache.org/surefire/maven-surefire-plugin/examples/testng.html#Running_tests_in_parallel)"><fo:inline>Using TestNG - Running tests in parallel</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://maven.apache.org/surefire/maven-surefire-plugin/examples/testng.html#Running_tests_in_parallel)">http://maven.apache.org/surefire/maven-surefire-plugin/examples/testng.html#Running_tests_in_parallel</fo:basic-link>]</fo:inline></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17795"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block><fo:basic-link external-destination="url(http://maven.apache.org/surefire/maven-surefire-plugin/examples/junit.html#Running_tests_in_parallel)"><fo:inline>Using JUnit - Running tests in parallel</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://maven.apache.org/surefire/maven-surefire-plugin/examples/junit.html#Running_tests_in_parallel)">http://maven.apache.org/surefire/maven-surefire-plugin/examples/junit.html#Running_tests_in_parallel</fo:basic-link>]</fo:inline></fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
        </fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Building and Testing Jersey</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Building and Testing Jersey</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="how-to-build"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 27. Building and Testing Jersey</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="checkout"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Checking Out the Source</fo:marker><fo:block font-size="20.735999999999997pt">27.1. Checking Out the Source</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Jersey source code is available on GitHub. You can browse the sources at
            <fo:basic-link external-destination="url(https://github.com/jersey/jersey)"><fo:inline>https://github.com/jersey/jersey</fo:inline></fo:basic-link>.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            In case you are not familiar with Git, we recommend reading some of the many "Getting Started with Git" articles
            you can find on the web. For example this
            <fo:basic-link external-destination="url(http://refcardz.dzone.com/refcardz/getting-started-git)"><fo:inline>DZone RefCard</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://refcardz.dzone.com/refcardz/getting-started-git)">http://refcardz.dzone.com/refcardz/getting-started-git</fo:basic-link>]</fo:inline>.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            To clone the Jersey repository you can execute the following command on the command-line
            (provided you have a command-line Git client installed on your machine):
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17826">git clone git://github.com/jersey/jersey.git</fo:block>
            This creates read-only copy of Jersey workspace. If you want to contribute, please use "pull request":
            <fo:basic-link external-destination="url(https://help.github.com/articles/creating-a-pull-request)"><fo:inline>https://help.github.com/articles/creating-a-pull-request</fo:inline></fo:basic-link>.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Milestones and releases of Jersey are tagged. You can list the tags by executing the standard Git command in the repository directory:
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17834">git tag -l</fo:block> or by visiting
            <fo:basic-link external-destination="url(https://github.com/jersey/jersey/tags)"><fo:inline>https://github.com/jersey/jersey/tags</fo:inline></fo:basic-link>.
        </fo:block></fo:block><fo:block id="building"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Building the Source</fo:marker><fo:block font-size="20.735999999999997pt">27.2. Building the Source</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Jersey source code requires Java SE 7 or higher. The build is based on Maven.
            Maven 3.1 or higher is highly recommended. Also it is recommended you use the following
            Maven options when building the workspace (can be set in <fo:inline font-family="monospace">MAVEN_OPTS</fo:inline> environment
            variable):
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17848">-Xmx1048m -XX:PermSize=64M -XX:MaxPermSize=128M</fo:block>
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            It is recommended to build all of Jersey after you cloned the source code repository.
            To do that execute the following commands in the directory where jersey source repository
            was cloned (typically the directory named "jersey"):
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17853">mvn -Dmaven.test.skip=true clean install</fo:block>
            This command will build Jersey, but skip the test execution.
            If you don't want to skip the tests, execute the following instead:
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17856">mvn clean install</fo:block>
            Building the whole Jersey project including tests could take significant amount of time.
        </fo:block></fo:block><fo:block id="testing"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Testing</fo:marker><fo:block font-size="20.735999999999997pt">27.3. Testing</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Jersey contains many tests. Unit tests are in the individual Jersey modules,
            integration and end-to-end tests are in <fo:inline font-family="monospace">jersey/tests/e2e</fo:inline> directory.
            You can run tests related to a particular area using the following command:
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e17867">mvn -Dtest=&lt;pattern&gt; test</fo:block>
            where
            <fo:inline font-family="monospace">pattern</fo:inline>
            may be a comma separated set of names matching tests classes or individual methods (like
            <fo:inline font-family="monospace">LinkTest#testDelimiters</fo:inline>).
        </fo:block></fo:block><fo:block id="netbeans-build"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Using NetBeans</fo:marker><fo:block font-size="20.735999999999997pt">27.4. Using NetBeans</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:basic-link external-destination="url(http://netbeans.org)"><fo:inline>NetBeans IDE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://netbeans.org)">http://netbeans.org</fo:basic-link>]</fo:inline>
            has excellent maven support. The Jersey maven
            modules can be loaded, built and tested in NetBeans without any additional
            NetBeans-specific project files.
        </fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Migration Guide</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Migration Guide</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="migration"><fo:block font-family="sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pt"><fo:block font-size="24.8832pt" font-weight="bold"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Chapter 28. Migration Guide</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="mig-2.27"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Migrating from Jersey 2.23 to 2.27</fo:marker><fo:block font-size="20.735999999999997pt">28.1. Migrating from Jersey 2.23 to 2.27</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="mig-2.27-breaking-changes"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Breaking Changes</fo:marker><fo:block font-size="17.28pt">28.1.1. Breaking Changes</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e17896"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17897"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            The most fundamental change in Jersey 2.26 and later is that all the modules (including the client 
                            module) are now being built with Java SE 8 and with 1.8 language level.
                        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            As a consequential change, one of the modules was dropped, the<fo:inline font-family="monospace">rx-client-jsr166e</fo:inline>.
                            This implementation relied on the
                            <fo:inline font-family="monospace">ConcurrentHashMapV8</fo:inline>
                            and was made redundant by the JDK upgrade. Please use
                            <fo:inline font-family="monospace">rx-client-java8</fo:inline>
                            instead.
                        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            Spring version used in the extension module was upgraded to 4.2.1.RELEASE. The reason for that is lack
                            of Java 8 support with Spring 3.x versions.
                        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            Jersey proprietary reactive client API has beed dropped and replaced by JAX-RS 2.1 Reactive Client API.
                            The backwards compatibility rule couldn't be respected in this case, since the JAX-RS API are based on
                            what was done in Jersey and there were unresolvable code incompatibilities.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block></fo:block><fo:block id="mig-2.27-injection-manager"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Breaking Changes - Injection Manager</fo:marker><fo:block font-size="17.28pt">28.1.2. Breaking Changes - Injection Manager</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Following breaking changes are caused by removing and replacing HK2 (<fo:inline font-family="monospace">ServiceLocator</fo:inline>) by
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/internal/inject/InjectionManager.html)"><fo:inline>InjectionManager</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/internal/inject/InjectionManager.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/internal/inject/InjectionManager.html</fo:basic-link>]</fo:inline>. Jersey injection API is considered as an internal API (except
            <fo:inline font-family="monospace">InjectionManager</fo:inline>) </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e17932"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17933"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            Classes in which <fo:inline font-family="monospace">HK2 ServiceLocator</fo:inline> was simply replaced by
                            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/internal/inject/InjectionManager.html)"><fo:inline>InjectionManager</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/internal/inject/InjectionManager.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/internal/inject/InjectionManager.html</fo:basic-link>]</fo:inline> and the replacing influenced their public methods:
                            <fo:table space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e17942" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/model/MethodHandler.html)"><fo:inline>MethodHandler</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/model/MethodHandler.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/model/MethodHandler.html</fo:basic-link>]</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ComponentProvider.html)"><fo:inline>ComponentProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ComponentProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ComponentProvider.html</fo:basic-link>]</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ExternalRequestScope.html)"><fo:inline>ExternalRequestScope</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ExternalRequestScope.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ExternalRequestScope.html</fo:basic-link>]</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/wadl/config/WadlGeneratorConfig.html)"><fo:inline>WadlGeneratorConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/wadl/config/WadlGeneratorConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/wadl/config/WadlGeneratorConfig.html</fo:basic-link>]</fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/RequestScopedInitializer.html)"><fo:inline>RequestScopedInitializer</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/RequestScopedInitializer.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/RequestScopedInitializer.html</fo:basic-link>]</fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>
                        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            Support for <fo:inline font-family="monospace">HK2 Binder</fo:inline> in the case of using HK2 Injection Module was implemented
                            but Jersey newly supports a registration its own <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/internal/inject/AbstractBinder.html)"><fo:inline>AbstractBinder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/internal/inject/AbstractBinder.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/internal/inject/AbstractBinder.html</fo:basic-link>]</fo:inline> and
                            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/internal/inject/Binder.html)"><fo:inline>Binder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/internal/inject/Binder.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/internal/inject/Binder.html</fo:basic-link>]</fo:inline> in <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)"><fo:inline>Application</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html</fo:basic-link>]</fo:inline> to easily switch from HK2 classes
                            to Jersey ones just by adjusting the imports.
                        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            <fo:inline font-family="monospace">InjectionManager</fo:inline> contains a mechanism for registering DI specific
                            injection bindings, in case the application uses CDI, developers should use CDI mechanism, in case the
                            application uses HK2, developers should configure HK2 - ideally via configuring a parent locator that
                            is then passed to Jersey. The custom bindings can be also registered through <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)"><fo:inline>Application</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Application.html</fo:basic-link>]</fo:inline>
                            if <fo:inline font-family="monospace">InjectionManager</fo:inline> supports the bindings type that means that
                            <fo:inline font-family="monospace">InjectionManager#isRegistrable</fo:inline> returns <fo:inline font-family="monospace">true</fo:inline>;
                        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            In <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)"><fo:inline>ResourceConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html</fo:basic-link>]</fo:inline> and <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientConfig.html)"><fo:inline>ClientConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientConfig.html</fo:basic-link>]</fo:inline> configuration methods for
                            auto-discoverable components and meta-components (e.g. <fo:inline font-family="monospace">Feature</fo:inline>) accept
                            <fo:inline font-family="monospace">InjectionManager</fo:inline> and moreover the meta-components accept
                            <fo:inline font-family="monospace">ManagedObjectFinalizer</fo:inline> which ensures a pre-destroy method invocation on registered
                            components.
                        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            Method <fo:inline font-family="monospace">getTemplateObjectFactory</fo:inline> in
                            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/spi/AbstractTemplateProcessor.html)"><fo:inline>AbstractTemplateProcessor</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/spi/AbstractTemplateProcessor.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/spi/AbstractTemplateProcessor.html</fo:basic-link>]</fo:inline> accepts a function that initializes a retrieved
                            template factory from a configuration, usually this function is just a wrapper with underlying
                            <fo:inline font-family="monospace">InjectionManager</fo:inline> invocation.
                        </fo:block><fo:inline font-family="monospace">HK2 Factory</fo:inline> support is replaced by <fo:inline font-family="monospace">java.util.function.Supplier</fo:inline>
                            and Jersey-specific <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/internal/inject/DisposableSupplier.html)"><fo:inline>DisposableSupplier</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/internal/inject/DisposableSupplier.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/internal/inject/DisposableSupplier.html</fo:basic-link>]</fo:inline>.
                        <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            HK2-specific annotations <fo:inline font-family="monospace">@Optional</fo:inline>, <fo:inline font-family="monospace">@Immediate</fo:inline>,
                            <fo:inline font-family="monospace">@Unqualified</fo:inline> are no longer supported directly in Jersey but can be used if HK2
                            Injection Module is used.
                        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            HK2-specific annotations <fo:inline font-family="monospace">@PerLookup</fo:inline> and <fo:inline font-family="monospace">@PerThread</fo:inline> are migrated
                            to Jersey with an adjusted package.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block></fo:block><fo:block id="mig-2.26-removed-deprecated"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Removed deprecated APIs</fo:marker><fo:block font-size="17.28pt">28.1.3. Removed deprecated APIs</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Following, already deprecated, APIs were removed:</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e18054"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18055"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">LoggingFilter</fo:inline> has been removed. Use <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html)"><fo:inline>LoggingFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html</fo:basic-link>]</fo:inline> instead. See
                            <fo:basic-link internal-destination="logging"><fo:inline>Logging chapter</fo:inline></fo:basic-link>.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block></fo:block></fo:block><fo:block id="d0e18068"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Migrating from Jersey 2.22.1 to 2.23</fo:marker><fo:block font-size="20.735999999999997pt">28.2. Migrating from Jersey 2.22.1 to 2.23</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="mig-2.23-highlights"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Release 2.23 Highlights</fo:marker><fo:block font-size="17.28pt">28.2.1. Release 2.23 Highlights</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e18074"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.2.1.1. Introducing LoggingFeature</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    From version 2.23 onwards, <fo:inline font-family="monospace">LoggingFilter</fo:inline> has been replaced
                    with <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html)"><fo:inline>LoggingFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html</fo:basic-link>]</fo:inline>.
                </fo:block></fo:block></fo:block><fo:block id="mig-2.23-new-deprecated"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Deprecated APIs</fo:marker><fo:block font-size="17.28pt">28.2.2. Deprecated APIs</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Following APIs were deprecated:</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e18092"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18093"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">LoggingFilter</fo:inline> has been marked as deprecated and will be removed in a subsequent
                            release. Use <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html)"><fo:inline>LoggingFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html</fo:basic-link>]</fo:inline> instead. See chapter<fo:basic-link internal-destination="logging"><fo:inline>
                            logging</fo:inline></fo:basic-link>.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block></fo:block></fo:block><fo:block id="mig-2.23-breaking-changes"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Breaking Changes</fo:marker><fo:block font-size="20.735999999999997pt">28.3. Breaking Changes</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Last version contained a change in relative URI resolution in the location header. Even though the change
            was fixing the discrepancy between the real behaviour and RFC7231, it also caused JAX-RS spec
            incompatibility
            in some cases. Furthermore, there was no way to preserve backwards compatibility.
        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            Therefore, the default behaviour was rollbacked and a new configuration property was introduced to switch
            to the RFC7231 compliant
            behaviour: <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#LOCATION_HEADER_RELATIVE_URI_RESOLUTION_RFC7231)"><fo:inline>ServerProperties.LOCATION_HEADER_RELATIVE_URI_RESOLUTION_RFC7231</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#LOCATION_HEADER_RELATIVE_URI_RESOLUTION_RFC7231)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#LOCATION_HEADER_RELATIVE_URI_RESOLUTION_RFC7231</fo:basic-link>]</fo:inline>. Also,
            the possibility to switch the URI resolution completely off remains with the
            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#LOCATION_HEADER_RELATIVE_URI_RESOLUTION_DISABLED)"><fo:inline>ServerProperties.LOCATION_HEADER_RELATIVE_URI_RESOLUTION_DISABLED</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#LOCATION_HEADER_RELATIVE_URI_RESOLUTION_DISABLED)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#LOCATION_HEADER_RELATIVE_URI_RESOLUTION_DISABLED</fo:basic-link>]</fo:inline> disabled switch. Both
            properties are false by default.
        </fo:block></fo:block><fo:block id="mig-2.22.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Migrating from Jersey 2.22 to 2.22.1</fo:marker><fo:block font-size="20.735999999999997pt">28.4. Migrating from Jersey 2.22 to 2.22.1</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="mig-2.22.1-breaking-changes"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Breaking Changes</fo:marker><fo:block font-size="17.28pt">28.4.1. Breaking Changes</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Last version contained a change in relative URI resolution in the location header. Even though the change was
                fixing the discrepancy between the real behaviour and RFC7231, it also caused JAX-RS spec incompatibility in some
                cases. Furthermore, there was no way to preserve backwards compatibility.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Therefore, the default behaviour was rollbacked and a new configuration property was introduced to switch to the
                RFC7231 compliant behaviour: <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#LOCATION_HEADER_RELATIVE_URI_RESOLUTION_RFC7231)"><fo:inline>ServerProperties.LOCATION_HEADER_RELATIVE_URI_RESOLUTION_RFC7231</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#LOCATION_HEADER_RELATIVE_URI_RESOLUTION_RFC7231)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#LOCATION_HEADER_RELATIVE_URI_RESOLUTION_RFC7231</fo:basic-link>]</fo:inline>.
                Also, the possibility to switch the URI resolution completely off remains with
                the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#LOCATION_HEADER_RELATIVE_URI_RESOLUTION_DISABLED)"><fo:inline>ServerProperties.LOCATION_HEADER_RELATIVE_URI_RESOLUTION_DISABLED</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#LOCATION_HEADER_RELATIVE_URI_RESOLUTION_DISABLED)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#LOCATION_HEADER_RELATIVE_URI_RESOLUTION_DISABLED</fo:basic-link>]</fo:inline> disabled switch. Both
                properties are false by default.
            </fo:block></fo:block></fo:block><fo:block id="mig-2.22"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Migrating from Jersey 2.21 to 2.22</fo:marker><fo:block font-size="20.735999999999997pt">28.5. Migrating from Jersey 2.21 to 2.22</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="mig-2.22-breaking-changes"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Breaking Changes</fo:marker><fo:block font-size="17.28pt">28.5.1. Breaking Changes</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e18143"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18144"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            In previous Jersey versions, if the resource method created a response containing relative URI in the
                            <fo:inline font-family="monospace">Location</fo:inline>
                            http header, the URI was resolved against
                            <fo:inline font-style="italic">base uri</fo:inline>
                            of the application. This behaviour was not correct, as pointed out by <fo:basic-link external-destination="url(https://java.net/jira/browse/2838)"><fo:inline>JERSEY-2838</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://java.net/jira/browse/2838)">https://java.net/jira/browse/2838</fo:basic-link>]</fo:inline>. With this
                            change, the URI is, by default, resolved against<fo:inline font-style="italic">request base uri</fo:inline>.
                        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            For example, having a resource at<fo:inline font-family="monospace">http://server.com/api/management/user</fo:inline>, that
                            returns response with<fo:inline font-family="monospace">Location: foo</fo:inline>, while the root of the app is
                            <fo:inline font-family="monospace">http://server.com/api</fo:inline>, the resulting URI will be:
                            <fo:table space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18170" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>with Jersey 2.21 and earlier:
                                    <fo:inline font-family="monospace">http://server.com/api/foo</fo:inline>
                                </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>with Jersey 2.22:
                                    <fo:inline font-family="monospace">http://server.com/api/management/foo</fo:inline>
                                </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>
                        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            Please note, that the trailing slash is significant, so that if the URI ends with a slash (<fo:inline font-family="monospace">
                            http://server.com/api/management/user/</fo:inline>), the output will be:
                            <fo:table space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18187" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>with Jersey 2.21 and earlier:
                                    <fo:inline font-family="monospace">http://server.com/api/foo</fo:inline>
                                </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell><fo:block>with Jersey 2.22:
                                    <fo:inline font-family="monospace">http://server.com/api/management/user/foo</fo:inline>
                                </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>
                        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            Alternatively, the entire URI resolving logic can be switched off by newly
                            introduced <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#LOCATION_HEADER_RELATIVE_URI_RESOLUTION_DISABLED)"><fo:inline>ServerProperties.LOCATION_HEADER_RELATIVE_URI_RESOLUTION_DISABLED</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#LOCATION_HEADER_RELATIVE_URI_RESOLUTION_DISABLED)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#LOCATION_HEADER_RELATIVE_URI_RESOLUTION_DISABLED</fo:basic-link>]</fo:inline> property.
                            If the value is<fo:inline font-family="monospace">true</fo:inline>, Jersey will not change the URI contained in the
                            <fo:inline font-family="monospace">Location</fo:inline>
                            header at all (even if this behaviour may not match with behaviour described in JavaDoc).
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block></fo:block></fo:block><fo:block id="mig-2.20"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Migrating from Jersey 2.19 to 2.20</fo:marker><fo:block font-size="20.735999999999997pt">28.6. Migrating from Jersey 2.19 to 2.20</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="mig-2.20-breaking-changes"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Breaking Changes</fo:marker><fo:block font-size="17.28pt">28.6.1. Breaking Changes</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e18219"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18220"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            New parameter,<fo:inline font-family="monospace">org.glassfish.hk2.api.ServiceLocator</fo:inline>, has been added
                            to <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ExternalRequestScope.html)"><fo:inline>ExternalRequestScope</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ExternalRequestScope.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ExternalRequestScope.html</fo:basic-link>]</fo:inline> methods. This is to allow 3rd party component providers to
                            hook up with the actual HK2 locator in case of multiple Jersey applications are running in paralell
                            within a single 3rd party component container. The change was driven by CDI/Servlet requirements.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block></fo:block></fo:block><fo:block id="mig-2.19"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Migrating from Jersey 2.18 to 2.19</fo:marker><fo:block font-size="20.735999999999997pt">28.7. Migrating from Jersey 2.18 to 2.19</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="mig-2.19-breaking-changes"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Breaking Changes</fo:marker><fo:block font-size="17.28pt">28.7.1. Breaking Changes</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e18238"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18239"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            New method,<fo:inline font-family="monospace">close</fo:inline>, has been added to <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceFinder.html)"><fo:inline>ResourceFinder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceFinder.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceFinder.html</fo:basic-link>]</fo:inline>. It's intention
                            is to release allocated/opened resources (such as streams) without a need to iterate through the
                            whole <fo:inline font-family="monospace">ResourceFinder</fo:inline>.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block></fo:block></fo:block><fo:block id="mig-2.18"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Migrating from Jersey 2.17 to 2.18</fo:marker><fo:block font-size="20.735999999999997pt">28.8. Migrating from Jersey 2.17 to 2.18</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="mig-2.18-highlights"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Release 2.18 Highlights</fo:marker><fo:block font-size="17.28pt">28.8.1. Release 2.18 Highlights</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e18258"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.8.1.1. Updated to MOXy 2.6</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Jersey has updated version of MOXy (XML/JSON provider) to version 2.6. Among some bug fixes there are other
                    notable changes (some of them breaking) that you should be aware of:

                    <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e18263"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18264"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:basic-link external-destination="url(https://wiki.eclipse.org/EclipseLink/DesignDocs/459464)"><fo:inline>Redesign of type
                                    property in JSON processing
                                </fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://wiki.eclipse.org/EclipseLink/DesignDocs/459464)">https://wiki.eclipse.org/EclipseLink/DesignDocs/459464</fo:basic-link>]</fo:inline>
                                - Special handling of JSON
                                <fo:inline font-family="monospace">type</fo:inline>
                                property is deprecated. If there is need to identify type of JSON object - due to missing root
                                element or some special inheritance requirements, it is necessary to specify fully qualified type
                                property with
                                <fo:inline font-family="monospace">http://www.w3.org/2001/XMLSchema-instance</fo:inline>
                                namespace.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18276"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:basic-link external-destination="url(https://bugs.eclipse.org/bugs/attachment.cgi?id=241506)"><fo:inline>Bean Validation in MOXy
                                </fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://bugs.eclipse.org/bugs/attachment.cgi?id=241506)">https://bugs.eclipse.org/bugs/attachment.cgi?id=241506</fo:basic-link>]</fo:inline>
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18282"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:basic-link external-destination="url(https://wiki.eclipse.org/EclipseLink/DesignDocs/405161)"><fo:inline>MOXy support for for
                                    Java API for JSON Processing (JSR-353)
                                </fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://wiki.eclipse.org/EclipseLink/DesignDocs/405161)">https://wiki.eclipse.org/EclipseLink/DesignDocs/405161</fo:basic-link>]</fo:inline>
                            </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
                </fo:block></fo:block><fo:block id="d0e18289"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.8.1.2. Promoted Public Beta APIs</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Several experimental Jersey APIs have matured enough and as such we have decided to promote them
                    from <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/Beta.html)"><fo:inline>Beta</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/Beta.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/Beta.html</fo:basic-link>]</fo:inline> status, namely:

                    <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e18297"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18298"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                Jersey Reactive Client API. Also Reactive Client moved from incubator to extension (umbrella)
                                module.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18301"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                Jersey client-side <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientLifecycleListener.html)"><fo:inline>ClientLifecycleListener</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientLifecycleListener.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientLifecycleListener.html</fo:basic-link>]</fo:inline> SPI.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18307"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                Jersey server-side <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ContainerLifecycleListener.html)"><fo:inline>ContainerLifecycleListener</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ContainerLifecycleListener.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ContainerLifecycleListener.html</fo:basic-link>]</fo:inline> SPI.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18313"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                Jersey server-side (MVC) <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/ErrorTemplate.html)"><fo:inline>@ErrorTemplate</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/ErrorTemplate.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/ErrorTemplate.html</fo:basic-link>]</fo:inline> annotation.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18319"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                Jersey test framework (client-side) <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/util/client/LoopBackConnectorProvider.html)"><fo:inline>LoopBackConnectorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/util/client/LoopBackConnectorProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/util/client/LoopBackConnectorProvider.html</fo:basic-link>]</fo:inline> connector.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18325"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                Jersey test framework (server-side) <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/util/server/ContainerRequestBuilder.html)"><fo:inline>ContainerRequestBuilder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/util/server/ContainerRequestBuilder.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/util/server/ContainerRequestBuilder.html</fo:basic-link>]</fo:inline> class.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

                    These APIs are now part of the official public Jersey 2.x API.
                </fo:block></fo:block></fo:block><fo:block id="mig-2.18-removed-deprecated"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Removed deprecated APIs</fo:marker><fo:block font-size="17.28pt">28.8.2. Removed deprecated APIs</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Following, already deprecated, APIs were removed:</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e18339"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18340"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">org.glassfish.jersey.apache.connector.ApacheClientProperties</fo:inline>
                            - constant
                            <fo:inline font-family="monospace">SSL_CONFIG</fo:inline>
                            has been removed. Use <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html)"><fo:inline>ClientBuilder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html</fo:basic-link>]</fo:inline> methods to configure SSL in a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)"><fo:inline>Client</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html</fo:basic-link>]</fo:inline>
                            instance.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18355"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">org.glassfish.jersey.jetty.connector.JettyClientProperties</fo:inline>
                            - constant
                            <fo:inline font-family="monospace">SSL_CONFIG</fo:inline>
                            has been removed. Use <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html)"><fo:inline>ClientBuilder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html</fo:basic-link>]</fo:inline> methods to configure SSL in a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)"><fo:inline>Client</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html</fo:basic-link>]</fo:inline>
                            instance.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18370"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">FreemarkerMvcFeature.TEMPLATES_BASE_PATH</fo:inline>
                            - constant has been unified across MVC modules and the deprecated one has been removed. Use
                            <fo:inline font-family="monospace">FreemarkerMvcFeature.TEMPLATE_BASE_PATH</fo:inline>
                            or property
                            <fo:inline font-family="monospace">jersey.config.server.mvc.templateBasePath.freemarker</fo:inline>
                            instead.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18382"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">JspMvcFeature.TEMPLATES_BASE_PATH</fo:inline>
                            - constant has been unified across MVC modules and the deprecated one has been removed. Use
                            <fo:inline font-family="monospace">JspMvcFeature.TEMPLATE_BASE_PATH</fo:inline>
                            or property
                            <fo:inline font-family="monospace">jersey.config.server.mvc.templateBasePath.jsp</fo:inline>
                            instead.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block></fo:block><fo:block id="mig-2.18-breaking-changes"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Breaking Changes</fo:marker><fo:block font-size="17.28pt">28.8.3. Breaking Changes</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e18400"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18401"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            Integration of executor providers for Jersey runtime has been unified and refactored. As a result, the
                            <fo:inline font-family="monospace">org.glassfish.jersey.spi.RequestExecutorProvider</fo:inline>
                            and
                            <fo:inline font-family="monospace">org.glassfish.jersey.spi.RuntimeThreadProvider</fo:inline>
                            SPIs have been removed from Jersey. A new, common &amp; generic executor service providers have been
                            introduced instead: <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/spi/ExecutorServiceProvider.html)"><fo:inline>ExecutorServiceProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/spi/ExecutorServiceProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/spi/ExecutorServiceProvider.html</fo:basic-link>]</fo:inline>
                            and <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/spi/ScheduledExecutorServiceProvider.html)"><fo:inline>ScheduledExecutorServiceProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/spi/ScheduledExecutorServiceProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/spi/ScheduledExecutorServiceProvider.html</fo:basic-link>]</fo:inline>. These new providers are used to support
                            custom qualified executor service injection, including the refactored use cases of client asynchronous
                            request execution, server-side managed asynchronous request processing as well as server-side
                            background task scheduler.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block></fo:block></fo:block><fo:block id="mig-2.17"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Migrating from Jersey 2.16 to 2.17</fo:marker><fo:block font-size="20.735999999999997pt">28.9. Migrating from Jersey 2.16 to 2.17</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="mig-2.17-highlights"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Release 2.17 Highlights</fo:marker><fo:block font-size="17.28pt">28.9.1. Release 2.17 Highlights</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e18423"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.9.1.1. CDI integration in EAR packaged WARs</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    From version 2.17 onwards, it's possible to use CDI with JAX-RS web-applications packaged in EAR. All
                    supported HK2/CDI injections now work as expected for JAX-RS application deployed in the mentioned fashion.
                    One need to make sure that modules
                    <fo:inline font-family="monospace">jersey-cdi1x</fo:inline>
                    and
                    <fo:inline font-family="monospace">jersey-cdi1x-servlet</fo:inline>
                    are present in Servlet container (that supports EARs).
                </fo:block></fo:block></fo:block></fo:block><fo:block id="mig-2.16"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Migrating from Jersey 2.15 to 2.16</fo:marker><fo:block font-size="20.735999999999997pt">28.10. Migrating from Jersey 2.15 to 2.16</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="mig-2.16-highlights"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Release 2.16 Highlights</fo:marker><fo:block font-size="17.28pt">28.10.1. Release 2.16 Highlights</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e18440"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.10.1.1. JAX-B providers separated from the core</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    From version 2.16 onwards, all JAX-B providers are being bundled in a separate module.
                </fo:block></fo:block><fo:block id="d0e18445"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.10.1.2. Performance gain when using Sub-Resource Locators</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    We improved the performance for using sub-resource locators in an Jersey application. The performance gains
                    are available for cases when the sub-resource locator method returns either a resource class (return value is
                    e.g.
                    <fo:inline font-family="monospace">Class&lt;?&gt;</fo:inline>
                    or<fo:inline font-family="monospace">Class&lt;MySubResource&gt;</fo:inline>) or a (non-proxied) resource instance (when return value is an
                    instance of
                    <fo:inline font-family="monospace">MySubResource</fo:inline>
                    class).
                </fo:block></fo:block><fo:block id="d0e18459"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.10.1.3. More unified connector configuration options</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Jetty connector and Apache connector have been previously using their own custom properties to set SSL context
                    on a connector. These properties have been deprecated and the code has been updated to read the SSL context
                    information from the JAX-RS client configuration. This means that all Jersey connectors now properly accept
                    SSL configuration as configured via standard JAX-RS <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html)"><fo:inline>ClientBuilder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html</fo:basic-link>]</fo:inline> methods.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Previously, all Jersey connectors have been using their own default chunk size when HTTP chunked coding was
                    used. Since Jersey 2.16, there is a new default chunk size value used by all connectors, if a custom chunk
                    size is not set. The new default value is stored under <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#DEFAULT_CHUNK_SIZE)"><fo:inline>ClientProperties.DEFAULT_CHUNK_SIZE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#DEFAULT_CHUNK_SIZE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#DEFAULT_CHUNK_SIZE</fo:basic-link>]</fo:inline>
                    client property.
                </fo:block></fo:block></fo:block><fo:block id="mig-2.16-new-deprecated"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Deprecated APIs</fo:marker><fo:block font-size="17.28pt">28.10.2. Deprecated APIs</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Following APIs were deprecated:</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e18479"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18480"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">org.glassfish.jersey.apache.connector.ApacheClientProperties</fo:inline>
                            - constant
                            <fo:inline font-family="monospace">SSL_CONFIG</fo:inline>
                            has been marked as deprecated and will be removed in a subsequent release.
                            Use <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html)"><fo:inline>ClientBuilder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html</fo:basic-link>]</fo:inline> methods to configure SSL in a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)"><fo:inline>Client</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html</fo:basic-link>]</fo:inline> instance.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18495"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">org.glassfish.jersey.jetty.connector.JettyClientProperties</fo:inline>
                            - constant
                            <fo:inline font-family="monospace">SSL_CONFIG</fo:inline>
                            has been marked as deprecated and will be removed in a subsequent release.
                            Use <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html)"><fo:inline>ClientBuilder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html</fo:basic-link>]</fo:inline> methods to configure SSL in a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)"><fo:inline>Client</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html</fo:basic-link>]</fo:inline> instance.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block></fo:block><fo:block id="mig-2.16-breaking-changes"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Breaking Changes</fo:marker><fo:block font-size="17.28pt">28.10.3. Breaking Changes</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e18516"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18517"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            JAX-B support modularization might cause breaking changes for those users relying on JAX-B and
                            directly referring to the Jersey core-common module:
                            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e18520">
                                &lt;dependency&gt; &lt;groupId&gt;org.glassfish.jersey.core&lt;/groupId&gt; &lt;artifactId&gt;jersey-common&lt;/artifactId&gt;
                                &lt;version&gt;${pre-2.16-version}&lt;/version&gt; &lt;/dependency&gt;</fo:block>
                            The following needs to be included in addition from version 2.16 on:
                            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e18523">
                                &lt;dependency&gt; &lt;groupId&gt;org.glassfish.jersey.media&lt;/groupId&gt; &lt;artifactId&gt;jersey-media-jaxb&lt;/artifactId&gt;
                                &lt;version&gt;2.28&lt;/version&gt; &lt;/dependency&gt;</fo:block>
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18526"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">MediaType</fo:inline>'s quality source parameters (<fo:inline font-family="monospace">qs</fo:inline>) reuse the same
                            parsing as quality parameters. This means that values higher than
                            <fo:inline font-family="monospace">1.0</fo:inline>
                            throw ParseException. I.e. following example is not allowed any more:
                            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e18538">
                                @Path("/") @Produces("text/html;qs=5") // wrong 'qs' value public class Bookstore { ... }
                            </fo:block>
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block></fo:block></fo:block><fo:block id="mig-2.15"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Migrating to 2.15</fo:marker><fo:block font-size="20.735999999999997pt">28.11. Migrating to 2.15</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="mig-2.15-highlights"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Release 2.15 Highlights</fo:marker><fo:block font-size="17.28pt">28.11.1. Release 2.15 Highlights</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e18548"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.11.1.1. Container agnostic CDI support</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Before 2.15, CDI integration was supported primarily in Java EE containers with built-in CDI support. From
                    version 2.15 onwards, it is possible to leverage CDI integration also outside of Java EE environment. A new
                    example,<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/master/examples/helloworld-weld)"><fo:inline>
                    helloworld-weld</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/master/examples/helloworld-weld)">https://github.com/jersey/jersey/tree/master/examples/helloworld-weld</fo:basic-link>]</fo:inline>, has been introduced to demonstrate the new feature using Grizzly HTTP server. Another
                    example application,<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/master/examples/cdi-webapp)"><fo:inline>
                    cdi-webapp</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://github.com/jersey/jersey/tree/master/examples/cdi-webapp)">https://github.com/jersey/jersey/tree/master/examples/cdi-webapp</fo:basic-link>]</fo:inline>, has been updated so that it enables Apache Tomcat Server deployment.
                </fo:block></fo:block></fo:block><fo:block id="mig-2.15-breaking-changes"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Breaking Changes</fo:marker><fo:block font-size="17.28pt">28.11.2. Breaking Changes</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e18564"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18565"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            CDI support improvement caused breaking changes for those users directly referring to the following
                            CDI supporting Jersey module in maven:
                            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e18568">
                                &lt;dependency&gt; &lt;groupId&gt;org.glassfish.jersey.containers.glassfish&lt;/groupId&gt; &lt;artifactId&gt;jersey-gf-cdi&lt;/artifactId&gt;
                                &lt;version&gt;${pre-2.15-version}&lt;/version&gt; &lt;/dependency&gt;</fo:block>
                            The above dependency needs to be replaced with:
                            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e18571">
                                &lt;dependency&gt; &lt;groupId&gt;org.glassfish.jersey.ext.cdi&lt;/groupId&gt; &lt;artifactId&gt;jersey-cdi1x&lt;/artifactId&gt;
                                &lt;version&gt;2.28&lt;/version&gt; &lt;/dependency&gt;</fo:block>
                            The following needs to be included in addition if you want to leverage CDI JTA support:
                            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e18574">
                                &lt;dependency&gt; &lt;groupId&gt;org.glassfish.jersey.ext.cdi&lt;/groupId&gt; &lt;artifactId&gt;jersey-cdi1x-transaction&lt;/artifactId&gt;
                                &lt;version&gt;2.28&lt;/version&gt; &lt;/dependency&gt;</fo:block>
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block></fo:block></fo:block><fo:block id="mig-2.12"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Migrating from Jersey 2.11 to 2.12</fo:marker><fo:block font-size="20.735999999999997pt">28.12. Migrating from Jersey 2.11 to 2.12</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="mig-2.12-highlights"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Release 2.12 Highlights</fo:marker><fo:block font-size="17.28pt">28.12.1. Release 2.12 Highlights</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Following experimental APIs have been promoted to become part of public Jersey API:
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e18586"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18587"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            Jersey client-side <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/authentication/HttpAuthenticationFeature.html)"><fo:inline>HttpAuthenticationFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/authentication/HttpAuthenticationFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/authentication/HttpAuthenticationFeature.html</fo:basic-link>]</fo:inline> API.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18593"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            Jersey server-side <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/DestroyListener.html)"><fo:inline>DestroyListener</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/DestroyListener.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/DestroyListener.html</fo:basic-link>]</fo:inline> (formerly
                            <fo:inline font-family="monospace">ExtendedMonitoringStatisticsListener</fo:inline>), which has been slightly refactored and is
                            now a separate interface (e.g. not extending<fo:inline font-family="monospace">MonitoringStatisticsListener</fo:inline>), hence
                            providing better compatibility with lambdas.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
                These APIs are now part of the official public Jersey 2.x API.
            </fo:block></fo:block><fo:block id="mig-2.12-breaking-changes"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Breaking Changes</fo:marker><fo:block font-size="17.28pt">28.12.2. Breaking Changes</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e18611"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18612"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            Because of a bug fix for issue
                            <fo:basic-link external-destination="url(https://java.net/jira/browse/JERSEY-2602)"><fo:inline>JERSEY-2602</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://java.net/jira/browse/JERSEY-2602)">https://java.net/jira/browse/JERSEY-2602</fo:basic-link>]</fo:inline>, we re-generate WADL
                            classes from
                            <fo:inline font-family="monospace">wadl.xsd</fo:inline>
                            to make sure the getters for boolean properties starts with
                            <fo:inline font-family="monospace">is</fo:inline>
                            instead of
                            <fo:inline font-family="monospace">get</fo:inline>
                            as in Jersey 1 and Jersey &lt;= 2.6.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18627"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            For performance purposes a new server property <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_ENABLED)"><fo:inline>ServerProperties.MONITORING_ENABLED</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_ENABLED)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_ENABLED</fo:basic-link>]</fo:inline> has
                            been introduced. It is possible to enable just basic almost static monitoring information using the
                            property. It allows to inject <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ApplicationInfo.html)"><fo:inline>ApplicationInfo</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ApplicationInfo.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ApplicationInfo.html</fo:basic-link>]</fo:inline> object, renamed original
                            class<fo:inline font-family="monospace">org.glassfish.jersey.server.monitoring.ApplicationStatistics</fo:inline>.
                            And <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatistics.html)"><fo:inline>MonitoringStatistics</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatistics.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatistics.html</fo:basic-link>]</fo:inline> no more have a reference to<fo:inline font-family="monospace">
                            ApplicationStatistics</fo:inline>, method
                            <fo:inline font-family="monospace">getApplicationStatistics()</fo:inline>
                            has been removed.
                        </fo:block>
                        gitc
                    </fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block></fo:block></fo:block><fo:block id="mig-2.11"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Migrating from Jersey 2.10 to 2.11</fo:marker><fo:block font-size="20.735999999999997pt">28.13. Migrating from Jersey 2.10 to 2.11</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="mig-2.11-highlights"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Release 2.11 Highlights</fo:marker><fo:block font-size="17.28pt">28.13.1. Release 2.11 Highlights</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e18656"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.13.1.1. Promoted Public Beta APIs</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Several experimental Jersey APIs have matured enough and as such we have decided to promote them
                    from <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/Beta.html)"><fo:inline>Beta</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/Beta.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/Beta.html</fo:basic-link>]</fo:inline> status, namely:

                    <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e18664"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18665"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                Jersey client-side <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/ConnectorProvider.html)"><fo:inline>ConnectorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/ConnectorProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/ConnectorProvider.html</fo:basic-link>]</fo:inline> SPI.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18671"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                Jersey server-side <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ResponseErrorMapper.html)"><fo:inline>ResponseErrorMapper</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ResponseErrorMapper.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ResponseErrorMapper.html</fo:basic-link>]</fo:inline> SPI.
                            </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

                    These APIs are now part of the official public Jersey 2.x API.
                </fo:block></fo:block><fo:block id="d0e18678"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.13.1.2. Not closing provided streams in message body providers</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Jersey is now preventing message body providers (MBR, MBW) from closing given input/output stream. With this
                    change Jersey is enforcing the JavaDoc statements present in message body providers.
                </fo:block></fo:block><fo:block id="d0e18683"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.13.1.3. Jackson 1</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    We have reintroduced support for JSON processing via Jackson 1.x JSON provider (1.9.11). In order to use
                    Jackson 1 in your application you need to add
                    <fo:inline font-family="monospace">jersey-media-json-jackson1</fo:inline>
                    module (+ it's dependencies) to your class-path and register
                    <fo:inline font-family="monospace">Jackson1Feature</fo:inline>
                    in your application (server or client).
                </fo:block></fo:block><fo:block id="d0e18694"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.13.1.4. ClientLifecycleListener</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Client-side providers (such as<fo:inline font-family="monospace">ClientRequestFilter</fo:inline>s) implementing the new
                    <fo:inline font-family="monospace">org.glassfish.jersey.client.ClientLifecycleListener</fo:inline>
                    interface will be notified when various lifecycle events occur. Currently client runtime initialization
                    triggers the
                    <fo:inline font-family="monospace">onInit()</fo:inline>
                    method and client closing triggers
                    <fo:inline font-family="monospace">onClose()</fo:inline>
                    method. Such providers implementing the
                    <fo:inline font-family="monospace">ClientLifecycleListener</fo:inline>
                    can be registered in a common way, e.g. into a
                    <fo:inline font-family="monospace">JerseyClient</fo:inline>
                    or
                    <fo:inline font-family="monospace">JerseyWebTarget</fo:inline>
                    instance, or into a (potentially) auto discoverable feature context.
                </fo:block></fo:block></fo:block></fo:block><fo:block id="mig-2.10"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Migrating from Jersey 2.9 to 2.10</fo:marker><fo:block font-size="20.735999999999997pt">28.14. Migrating from Jersey 2.9 to 2.10</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="mig-2.10-removed-deprecated"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Removed deprecated APIs</fo:marker><fo:block font-size="17.28pt">28.14.1. Removed deprecated APIs</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Following, already deprecated, APIs were removed:</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e18730"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18731"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">org.glassfish.jersey.server.model.ResourceModelContext</fo:inline>
                            (not used)
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18737"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">org.glassfish.jersey.server.model.ResourceModelListener</fo:inline>
                            (not used)
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block></fo:block></fo:block><fo:block id="mig-2.9"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Migrating from Jersey 2.8 to 2.9</fo:marker><fo:block font-size="20.735999999999997pt">28.15. Migrating from Jersey 2.8 to 2.9</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="mig-2.9-highlights"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Release 2.9 Highlights</fo:marker><fo:block font-size="17.28pt">28.15.1. Release 2.9 Highlights</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="d0e18750"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.15.1.1. Declarative Linking</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Gerard updated the Declarative Linking extension module which has been ported to Jersey 2 in version 2.6. You
                    can read more about what Declarative Linking does and what it's capable of in the following blog posts:

                    <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e18755"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18756"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:basic-link external-destination="url(http://kingsfleet.blogspot.co.uk/2014/05/declarative-linking-in-jersey-29.html)"><fo:inline>
                                    Declarative Linking in Jersey 2.9 and up
                                </fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://kingsfleet.blogspot.co.uk/2014/05/declarative-linking-in-jersey-29.html)">http://kingsfleet.blogspot.co.uk/2014/05/declarative-linking-in-jersey-29.html</fo:basic-link>]</fo:inline>
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18762"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:basic-link external-destination="url(http://kingsfleet.blogspot.co.uk/2014/05/reading-and-writing-jax-rs-link-objects.html)"><fo:inline>
                                    Reading and writing JAX-RS Link objects
                                </fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://kingsfleet.blogspot.co.uk/2014/05/reading-and-writing-jax-rs-link-objects.html)">http://kingsfleet.blogspot.co.uk/2014/05/reading-and-writing-jax-rs-link-objects.html</fo:basic-link>]</fo:inline>
                            </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
                </fo:block></fo:block><fo:block id="d0e18769"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.15.1.2. Jackson 2</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Our media module that supports working with JSON via Jackson library has been updated to use Jackson 2.x
                    (2.3.2). All samples and tests have been rewritten to use Jackson 2 as well. In order to use Jackson 2 in your
                    application you need to add jersey-media-json-jackson (+ it's Jackson dependencies) to your class-path and
                    register
                    <fo:inline font-family="monospace">JacksonFeature</fo:inline>
                    in your application.
                </fo:block></fo:block><fo:block id="d0e18777"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.15.1.3. META-INF/services</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    We dropped automatic registration of message body providers (MessageBodyWriter, MessageBodyReader) and
                    exception mappers via META-INF/services mechanism. This functionality can be restored by adding
                    <fo:inline font-family="monospace">jersey-metainf-services</fo:inline>
                    module to the class-path of your application.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Note: This change may affect 3rd party libraries (e.g. Jackson 2.x) in a way their provider would not be
                    registered in an JAX-RS app. You need to either register them manually or use mentioned
                    <fo:inline font-family="monospace">jersey-metainf-services</fo:inline>
                    module.
                </fo:block></fo:block><fo:block id="d0e18790"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.15.1.4. Jersey Test Framework</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Jersey Test Framework now supports TestNG to run the tests (in addition to the JUnit, which is supported by
                    default). You can now run the tests in parallel using either JUnit or TestNG. See chapters dedicated to TestNG
                    and parallel testing for more information:
                    <fo:basic-link internal-destination="testng"><fo:inline>Section 26.3, “Running TestNG Tests”</fo:inline></fo:basic-link>
                    and<fo:basic-link internal-destination="parallel"><fo:inline>Section 26.5, “Parallel Testing with Jersey Test Framework”</fo:inline></fo:basic-link>.
                </fo:block></fo:block></fo:block><fo:block id="mig-2.9-breaking-changes"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Changes</fo:marker><fo:block font-size="17.28pt">28.15.2. Changes</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e18804"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18805"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            Some of the feature specific configuration properties (disable WADL, disable BV, disable
                            JSON-Processing, enable Monitoring), and their server/client counterparts, are no longer affected by a
                            value of properties
                            <fo:inline font-family="monospace">CommonProperties.FEATURE_AUTO_DISCOVERY_DISABLE</fo:inline>
                            or
                            <fo:inline font-family="monospace">CommonProperties.METAINF_SERVICES_LOOKUP_DISABLE</fo:inline>. The specific properties have to
                            be used to change default behaviour of mentioned features (e.g.
                            <fo:inline font-family="monospace">ServerProperties.WADL_FEATURE_DISABLE</fo:inline>).
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18817"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            Automatic registration of<fo:inline font-family="monospace">MessageBodyWriter</fo:inline>,
                            <fo:inline font-family="monospace">MessageBodyReaders</fo:inline>
                            and
                            <fo:inline font-family="monospace">ExceptionMappers</fo:inline>
                            via
                            <fo:inline font-family="monospace">META-INF/services</fo:inline>
                            mechanism has been removed. Disabling the automatic registration of providers via
                            <fo:inline font-family="monospace">META-INF/services</fo:inline>
                            may affect 3rd party libraries (i.e. Jackson 2.x) that are using this mechanism to register it's
                            providers. In order to restore this functionality the
                            <fo:inline font-family="monospace">org.glassfish.jersey.ext:jersey-metainf-services</fo:inline>
                            has to be added on the classpath. Otherwise such providers has to be registered manually.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18838"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            The Jackson JSON Jersey module has been updated to use Jackson 2.x instead of Jackson 1.x. This means
                            that all the code that has been using Jackson 1.x for JSON (de)serialization has to be migrated to
                            Jackson 2.x.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block></fo:block></fo:block><fo:block id="mig-2.8"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Migrating from Jersey 2.7 to 2.8</fo:marker><fo:block font-size="20.735999999999997pt">28.16. Migrating from Jersey 2.7 to 2.8</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="mig-2.8-breaking-changes"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Changes</fo:marker><fo:block font-size="17.28pt">28.16.1. Changes</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e18850"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18851"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            Because of a bug fix for issue
                            <fo:basic-link external-destination="url(https://java.net/jira/browse/JERSEY-2458)"><fo:inline>JERSEY-2458</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://java.net/jira/browse/JERSEY-2458)">https://java.net/jira/browse/JERSEY-2458</fo:basic-link>]</fo:inline>, there has been a
                            slight change in the behavior of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriInfo.html)"><fo:inline>UriInfo</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriInfo.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriInfo.html</fo:basic-link>]</fo:inline>
                            <fo:inline font-family="monospace">getPath</fo:inline>
                            and
                            <fo:inline font-family="monospace">getPathSegments</fo:inline>
                            methods. The
                            <fo:inline font-family="monospace">getPath</fo:inline>
                            methods no longer return a path prefixed with a slash (<fo:inline font-family="monospace">'/'</fo:inline>), instead they now
                            correctly return a request path
                            <fo:inline font-style="italic">relative</fo:inline>
                            to the base request URI. Also, the <fo:inline font-family="monospace">UriInfo</fo:inline> now correctly handles requests which URI
                            contains empty path segments (e.g.<fo:inline font-family="monospace">http://localhost///a/b//c</fo:inline>). These empty path
                            segments are now correctly included in the lists returned by the
                            <fo:inline font-family="monospace">UriInfo.getPathSegments</fo:inline>
                            methods.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18884"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html)"><fo:inline>SseFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html</fo:basic-link>]</fo:inline> now gets automatically discovered and enabled if the SSE module is present on
                            the class path. This behavior can be suppressed by setting <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html#DISABLE_SSE)"><fo:inline>DISABLE_SSE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html#DISABLE_SSE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html#DISABLE_SSE</fo:basic-link>]</fo:inline>
                            property to<fo:inline font-family="monospace">true</fo:inline>. The behavior can also be selectively suppressed in either client
                            or server runtime by setting the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html#DISABLE_SSE_CLIENT)"><fo:inline>DISABLE_SSE_CLIENT</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html#DISABLE_SSE_CLIENT)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html#DISABLE_SSE_CLIENT</fo:basic-link>]</fo:inline>
                            or <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html#DISABLE_SSE_SERVER)"><fo:inline>DISABLE_SSE_SERVER</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html#DISABLE_SSE_SERVER)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseFeature.html#DISABLE_SSE_SERVER</fo:basic-link>]</fo:inline> property respectively.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18902"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            Deprecated
                            <fo:inline font-family="monospace">getDestroyTime</fo:inline>
                            method has been removed from
                            <fo:inline font-family="monospace">org.glassfish.jersey.server.monitoring.ApplicationStatistics</fo:inline>. To get the
                            application shutdown information, a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ContainerLifecycleListener.html)"><fo:inline>ContainerLifecycleListener</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ContainerLifecycleListener.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ContainerLifecycleListener.html</fo:basic-link>]</fo:inline> should be registered
                            and its
                            <fo:inline font-family="monospace">onShutdown</fo:inline>
                            method implemented to listen to and process the application shutdown event.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18917"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            Method
                            <fo:inline font-family="monospace">triggerEvent(RequestEvent.Type)</fo:inline>
                            has been removed from the public <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ContainerRequest.html)"><fo:inline>ContainerRequest</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ContainerRequest.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ContainerRequest.html</fo:basic-link>]</fo:inline> API. This method has never been
                            intended for public, application-level use.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18926"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            In Jersey 2.7 and earlier it was (under certain conditions) possible to supply
                            custom <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/spi/TestContainerFactory.html)"><fo:inline>TestContainerFactory</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/spi/TestContainerFactory.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/spi/TestContainerFactory.html</fo:basic-link>]</fo:inline> as part of the tested JAX-RS / Jersey application. This
                            factory would be picked and used by <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html)"><fo:inline>JerseyTest</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/JerseyTest.html</fo:basic-link>]</fo:inline> to
                            instantiate <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/spi/TestContainer.html)"><fo:inline>TestContainer</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/spi/TestContainer.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/test/spi/TestContainer.html</fo:basic-link>]</fo:inline> that will host the tested application. This feature was
                            unreliable and redundant. As such, support for the feature has been removed. To specify a
                            custom <fo:inline font-family="monospace">TestContainerFactory</fo:inline> to be used by your <fo:inline font-family="monospace">JerseyTest</fo:inline>
                            subclass, please override the
                            <fo:inline font-family="monospace">JerseyTest.getTestContainerFactory</fo:inline>
                            method instead. Overriding
                            <fo:inline font-family="monospace">getTestContainerFactory</fo:inline>
                            now remains the only reliable way of specifying custom <fo:inline font-family="monospace">TestContainerFactory</fo:inline>
                            implementation to be used in your tests.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18953"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            Protected method
                            <fo:inline font-family="monospace">setTestContainerFactory</fo:inline>
                            has been removed from the <fo:inline font-family="monospace">JerseyTest</fo:inline> API as calling the method had no effect on
                            the <fo:inline font-family="monospace">TestContainerFactory</fo:inline> instance used by the <fo:inline font-family="monospace">JerseyTest</fo:inline>
                            subclass.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18968"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            Protected method
                            <fo:inline font-family="monospace">getClient</fo:inline>
                            has been removed from the <fo:inline font-family="monospace">JerseyTest</fo:inline> API. To configure test client instances, please
                            override the
                            <fo:inline font-family="monospace">configureClient</fo:inline>
                            method instead.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18980"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            Utility methods <fo:inline font-family="monospace">JerseyTest</fo:inline> that provide access to
                            pre-configured <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)"><fo:inline>Client</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html</fo:basic-link>]</fo:inline> and <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html)"><fo:inline>WebTarget</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html</fo:basic-link>]</fo:inline> instances (<fo:inline font-family="monospace">
                            client()</fo:inline>,
                            <fo:inline font-family="monospace">target(...)</fo:inline>) have been made final to prevent overriding in subclasses and thus
                            ensure consistency of the jersey test framework functionality.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e18998"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">JerseyTest</fo:inline> constructor
                            <fo:inline font-family="monospace">JerseyTest(Class&lt;? extends Application&gt;)</fo:inline>
                            has been made deprecated and will be removed in the subsequent Jersey release.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19007"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            It was previously possible to pass in a custom <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ContainerProvider.html)"><fo:inline>ContainerProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ContainerProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ContainerProvider.html</fo:basic-link>]</fo:inline> that was supposed
                            to deploy and run the application as one of the JAX-RS / Jersey application providers. This ability
                            has been removed without any substitute as the concept was fundamentally flawed. Typical use cases
                            should not be affected by this change.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19013"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            Factory methods
                            <fo:inline font-family="monospace">createHttpServer</fo:inline>
                            which take Jersey <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ApplicationHandler.html)"><fo:inline>ApplicationHandler</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ApplicationHandler.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ApplicationHandler.html</fo:basic-link>]</fo:inline> as one of the input parameters have been removed
                            from the Jersey container factory API as inherently broken. This
                            impacts <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/grizzly2/httpserver/GrizzlyHttpServerFactory.html)"><fo:inline>GrizzlyHttpServerFactory</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/grizzly2/httpserver/GrizzlyHttpServerFactory.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/grizzly2/httpserver/GrizzlyHttpServerFactory.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jdkhttp/JdkHttpServerFactory.html)"><fo:inline>JdkHttpServerFactory</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jdkhttp/JdkHttpServerFactory.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jdkhttp/JdkHttpServerFactory.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jetty/JettyHttpContainerFactory.html)"><fo:inline>JettyHttpContainerFactory</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jetty/JettyHttpContainerFactory.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jetty/JettyHttpContainerFactory.html</fo:basic-link>]</fo:inline>
                            and <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/simple/SimpleContainerFactory.html)"><fo:inline>SimpleContainerFactory</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/simple/SimpleContainerFactory.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/simple/SimpleContainerFactory.html</fo:basic-link>]</fo:inline> implementations. The methods that
                            take <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)"><fo:inline>ResourceConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html</fo:basic-link>]</fo:inline> as input parameter should be used instead. Typical use cases
                            should not be affected by this change.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19037"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            Method
                            <fo:inline font-family="monospace">registerAdditionalBinders</fo:inline>
                            on <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ApplicationHandler.html)"><fo:inline>ApplicationHandler</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ApplicationHandler.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ApplicationHandler.html</fo:basic-link>]</fo:inline> has been removed from the public API. Please use the
                            specific <fo:inline font-family="monospace">ApplicationHandler</fo:inline> constructor that accepts custom HK2 binders instead.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19049"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            Several configuration properties were renamed, especially those having client and server versions
                            along with the common version in <fo:inline font-family="monospace">CommonProperties</fo:inline>. Please see following table for
                            complete reference:
                            <fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e19055"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 28.1. List of changed configuration properties:</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-start-style="solid" border-end-style="solid" border-top-style="solid" border-bottom-style="solid" border-start-width="0.5pt" border-end-width="0.5pt" border-top-width="0.5pt" border-bottom-width="0.5pt" border-start-color="black" border-end-color="black" border-top-color="black" border-bottom-color="black" width="auto"><fo:table-column column-number="1" column-width="33%"/><fo:table-column column-number="2" column-width="33%"/><fo:table-column column-number="3" column-width="34%"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row keep-with-next.within-column="always"><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block font-weight="bold">Constant</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block font-weight="bold">Old value (Jersey 2.7 and before)</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block font-weight="bold">New value (Jersey 2.8+)</fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE)"><fo:inline>ClientProperties.FEATURE_AUTO_DISCOVERY_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE</fo:basic-link>]</fo:inline>
                                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>
                                                <fo:inline font-family="monospace">jersey.config.disableAutoDiscovery.client</fo:inline>
                                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                                                <fo:inline font-family="monospace">jersey.config.client.disableAutoDiscovery</fo:inline>
                                            </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE)"><fo:inline>ServerProperties.FEATURE_AUTO_DISCOVERY_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE</fo:basic-link>]</fo:inline>
                                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>
                                                <fo:inline font-family="monospace">jersey.config.disableAutoDiscovery.server</fo:inline>
                                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                                                <fo:inline font-family="monospace">jersey.config.server.disableAutoDiscovery</fo:inline>
                                            </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#JSON_PROCESSING_FEATURE_DISABLE)"><fo:inline>ClientProperties.JSON_PROCESSING_FEATURE_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#JSON_PROCESSING_FEATURE_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#JSON_PROCESSING_FEATURE_DISABLE</fo:basic-link>]</fo:inline>
                                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>
                                                <fo:inline font-family="monospace">jersey.config.disableJsonProcessing.client</fo:inline>
                                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                                                <fo:inline font-family="monospace">jersey.config.client.disableJsonProcessing</fo:inline>
                                            </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#JSON_PROCESSING_FEATURE_DISABLE)"><fo:inline>ServerProperties.JSON_PROCESSING_FEATURE_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#JSON_PROCESSING_FEATURE_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#JSON_PROCESSING_FEATURE_DISABLE</fo:basic-link>]</fo:inline>
                                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>
                                                <fo:inline font-family="monospace">jersey.config.disableJsonProcessing.server</fo:inline>
                                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                                                <fo:inline font-family="monospace">jersey.config.server.disableJsonProcessing</fo:inline>
                                            </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#METAINF_SERVICES_LOOKUP_DISABLE)"><fo:inline>ClientProperties.METAINF_SERVICES_LOOKUP_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#METAINF_SERVICES_LOOKUP_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#METAINF_SERVICES_LOOKUP_DISABLE</fo:basic-link>]</fo:inline>
                                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>
                                                <fo:inline font-family="monospace">jersey.config.disableMetainfServicesLookup.client</fo:inline>
                                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                                                <fo:inline font-family="monospace">jersey.config.client.disableMetainfServicesLookup</fo:inline>
                                            </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#METAINF_SERVICES_LOOKUP_DISABLE)"><fo:inline>ServerProperties.METAINF_SERVICES_LOOKUP_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#METAINF_SERVICES_LOOKUP_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#METAINF_SERVICES_LOOKUP_DISABLE</fo:basic-link>]</fo:inline>
                                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>
                                                <fo:inline font-family="monospace">jersey.config.disableMetainfServicesLookup.server</fo:inline>
                                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                                                <fo:inline font-family="monospace">jersey.config.server.disableMetainfServicesLookup</fo:inline>
                                            </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#MOXY_JSON_FEATURE_DISABLE)"><fo:inline>ClientProperties.MOXY_JSON_FEATURE_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#MOXY_JSON_FEATURE_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#MOXY_JSON_FEATURE_DISABLE</fo:basic-link>]</fo:inline>
                                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>
                                                <fo:inline font-family="monospace">jersey.config.disableMoxyJson.client</fo:inline>
                                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                                                <fo:inline font-family="monospace">jersey.config.client.disableMoxyJson</fo:inline>
                                            </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MOXY_JSON_FEATURE_DISABLE)"><fo:inline>ServerProperties.MOXY_JSON_FEATURE_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MOXY_JSON_FEATURE_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MOXY_JSON_FEATURE_DISABLE</fo:basic-link>]</fo:inline>
                                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>
                                                <fo:inline font-family="monospace">jersey.config.disableMoxyJson.server</fo:inline>
                                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                                                <fo:inline font-family="monospace">jersey.config.server.disableMoxyJson</fo:inline>
                                            </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#OUTBOUND_CONTENT_LENGTH_BUFFER)"><fo:inline>ClientProperties.OUTBOUND_CONTENT_LENGTH_BUFFER</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#OUTBOUND_CONTENT_LENGTH_BUFFER)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#OUTBOUND_CONTENT_LENGTH_BUFFER</fo:basic-link>]</fo:inline>
                                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>
                                                <fo:inline font-family="monospace">jersey.config.contentLength.buffer.client</fo:inline>
                                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                                                <fo:inline font-family="monospace">jersey.config.client.contentLength.buffer</fo:inline>
                                            </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#OUTBOUND_CONTENT_LENGTH_BUFFER)"><fo:inline>ServerProperties.OUTBOUND_CONTENT_LENGTH_BUFFER</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#OUTBOUND_CONTENT_LENGTH_BUFFER)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#OUTBOUND_CONTENT_LENGTH_BUFFER</fo:basic-link>]</fo:inline>
                                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>
                                                <fo:inline font-family="monospace">jersey.config.contentLength.buffer.server</fo:inline>
                                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                                                <fo:inline font-family="monospace">jersey.config.server.contentLength.buffer</fo:inline>
                                            </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#TRACING)"><fo:inline>ServerProperties.TRACING</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#TRACING)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#TRACING</fo:basic-link>]</fo:inline>
                                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>
                                                <fo:inline font-family="monospace">jersey.config.server.tracing</fo:inline>
                                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt"><fo:block>
                                                <fo:inline font-family="monospace">jersey.config.server.tracing.type</fo:inline>
                                            </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block>
                            The old names are still working for now, but are deprecated. There is a fallback mechanism implemented
                            while reading the property and each get, that resolves the value from the old-named property, will log
                            a
                            <fo:inline font-family="monospace">CONFIG</fo:inline>
                            level warning.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block></fo:block></fo:block><fo:block id="mig-2.7"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Migrating from Jersey 2.6 to 2.7</fo:marker><fo:block font-size="20.735999999999997pt">28.17. Migrating from Jersey 2.6 to 2.7</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="mig-2.7-breaking-changes"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Changes</fo:marker><fo:block font-size="17.28pt">28.17.1. Changes</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e19246"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19247"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            Until version 2.6, Jersey was compiled with Java SE 6. This has changes in Jersey 2.7. Now almost all
                            Jersey components are compiled with Java SE 7 target. It means, that you will need at least Java SE 7
                            to be able to compile and run your application that is using latest Jersey. Only
                            <fo:inline font-family="monospace">core-common</fo:inline>
                            and
                            <fo:inline font-family="monospace">core-client</fo:inline>
                            modules are still compiled with Java class version runnable with Java SE 6.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19256"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            MVC support: method
                            <fo:inline font-family="monospace">writeTo</fo:inline>
                            of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/spi/TemplateProcessor.html)"><fo:inline>TemplateProcessor</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/spi/TemplateProcessor.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/spi/TemplateProcessor.html</fo:basic-link>]</fo:inline> was modified by adding an argument<fo:inline font-family="monospace">MultivaluedMap&lt;String,
                            Object&gt; httpHeaders</fo:inline>. This is an incompatible change (the method was modified directly in
                            the interface). All Jersey provided MVC implementation were adjusted but if you have your own MVC
                            implementation then you need to modify the method signature of the implementation.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19268"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            A minor JAX-RS incompatibility issue has been recently discovered and reported (see<fo:basic-link external-destination="url(https://java.net/jira/browse/JERSEY-2387)"><fo:inline>JERSEY-2387</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://java.net/jira/browse/JERSEY-2387)">https://java.net/jira/browse/JERSEY-2387</fo:basic-link>]</fo:inline>). As part of the fix,
                            minor breaking changes related to URI resolving and creation have been introduced in the behavior
                            of <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriBuilder.html)"><fo:inline>UriBuilder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriBuilder.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/UriBuilder.html</fo:basic-link>]</fo:inline>, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Link.Builder.html)"><fo:inline>Link.Builder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Link.Builder.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Link.Builder.html</fo:basic-link>]</fo:inline> and <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html)"><fo:inline>WebTarget</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html</fo:basic-link>]</fo:inline> classes. It is no
                            longer possible to successfully build a new <fo:inline font-family="monospace">URI</fo:inline> instance from a <fo:inline font-family="monospace">UriBuilder</fo:inline>
                            that contains unresolved template parameters. An
                            <fo:inline font-family="monospace">IllegalArgumentException</fo:inline>
                            will be thrown in such case, as mandated by JAX-RS API javadoc. Similarly, it is not possible to
                            successfully create a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Link.html)"><fo:inline>Link</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Link.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/core/Link.html</fo:basic-link>]</fo:inline> instance from a URI template with unresolved template
                            parameters. Also, it is not possible to successfully send a request on a <fo:inline font-family="monospace">WebTarget</fo:inline>
                            that represents a URI template that does not have all the template parameters properly resolved. Any
                            attempt to do so will fail with an exception. Note that this also applies to any managed clients
                            injected into JAX-RS server-side components using <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/Uri.html)"><fo:inline>Uri</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/Uri.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/Uri.html</fo:basic-link>]</fo:inline> annotation.
                        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            In Jersey 2.6 and earlier, producing a URI from an incompletely resolved URI template would succeed
                            and all unresolved template parameter locations would be encoded without change into the resulting
                            URI, for example
                            <fo:inline font-family="monospace">"/path/{param}"</fo:inline>
                            would be implicitly encoded as
                            <fo:inline font-family="monospace">"/path/%7Bparam%7D"</fo:inline>. While we do not expect our users to depend on this
                            functionality, if the former behavior is desired for some reason,
                            <fo:inline font-family="monospace">UriComponent.encodeTemplateNames</fo:inline>
                            method can be used instead:

                            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e19312">
                                URI.create(UriComponent.encodeTemplateNames(UriBuilder.fromUri("/path/{param}").toTemplate()));
                            </fo:block>

                            or simply

                            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e19315">
                                URI.create(UriComponent.encodeTemplateNames("/path/{param}"));
                            </fo:block>
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block></fo:block></fo:block><fo:block id="mig-2.6"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Migrating from Jersey 2.5.1 to 2.6</fo:marker><fo:block font-size="20.735999999999997pt">28.18. Migrating from Jersey 2.5.1 to 2.6</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="mig-2.6-repackaged"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Guava and ASM have been embedded</fo:marker><fo:block font-size="17.28pt">28.18.1. Guava and ASM have been embedded</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Jersey no longer depend directly on Guava and ASM artifacts which means that users are free to use their own
                versions of mentioned libraries.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                New bundle has been created for Guava (<fo:inline font-family="monospace">bundles/repackaged/jersey-guava</fo:inline>), with Maven
                coordinates:
                <fo:inline font-family="monospace">org.glassfish.jersey.bundles.repackaged:jersey-guava</fo:inline>
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                (Repackaged) ASM is now part of Jersey Server. Jersey currently uses ASM 5 for package-scanning capabilities.
            </fo:block></fo:block><fo:block id="mig-2.6-new-deprecated"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Deprecated APIs</fo:marker><fo:block font-size="17.28pt">28.18.2. Deprecated APIs</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Following APIs were deprecated:</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e19344"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19345"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">org.glassfish.jersey.message.internal.HttpDateFormat</fo:inline>
                            - method
                            <fo:inline font-family="monospace">getPreferedDateFormat()</fo:inline>
                            has been marked as deprecated due to typo in the name. New method
                            <fo:inline font-family="monospace">getPreferredDateFormat()</fo:inline>
                            should be used instead.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block></fo:block><fo:block id="mig-2.6-removed-deprecated"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Removed deprecated APIs</fo:marker><fo:block font-size="17.28pt">28.18.3. Removed deprecated APIs</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Following, already deprecated, APIs were removed:</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e19365"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19366"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">org.glassfish.jersey.client.filter.HttpBasicAuthFilter</fo:inline>
                            and
                            <fo:inline font-family="monospace">org.glassfish.jersey.client.filter.HttpDigestAuthFilter</fo:inline>
                            (use <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/authentication/HttpAuthenticationFeature.html)"><fo:inline>HttpAuthenticationFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/authentication/HttpAuthenticationFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/authentication/HttpAuthenticationFeature.html</fo:basic-link>]</fo:inline> instead)
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19378"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">org.glassfish.jersey.apache.connector.ApacheClientProperties.HTTP_PARAMS</fo:inline>
                            (use
                            <fo:inline font-family="monospace">org.glassfish.jersey.apache.connector.ApacheClientProperties#REQUEST_CONFIG</fo:inline>
                            instead),
                            <fo:inline font-family="monospace">org.glassfish.jersey.apache.connector.ApacheClientProperties.PROXY_URI</fo:inline>,
                            <fo:inline font-family="monospace">org.glassfish.jersey.apache.connector.ApacheClientProperties.PROXY_USERNAME</fo:inline>,
                            <fo:inline font-family="monospace">org.glassfish.jersey.apache.connector.ApacheClientProperties.PROXY_PASSWORD</fo:inline>
                            (use corresponding <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html)"><fo:inline>ClientProperties</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html</fo:basic-link>]</fo:inline> instead.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19399"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">org.glassfish.jersey.server.validation.ValidationConfig.setMessageInterpolator</fo:inline>
                            <fo:inline font-family="monospace">org.glassfish.jersey.server.validation.ValidationConfig.setTraversableResolver</fo:inline>
                            <fo:inline font-family="monospace">org.glassfish.jersey.server.validation.ValidationConfig.setConstraintValidatorFactory
                            </fo:inline>
                            <fo:inline font-family="monospace">org.glassfish.jersey.server.validation.ValidationConfig.setParameterNameProvider</fo:inline>
                            (use corresponding methods of the same class without
                            <fo:inline font-family="monospace">"set"</fo:inline>
                            prefix in the method names).
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19417"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">org.glassfish.jersey.server.mvc.MvcProperties</fo:inline>
                            (use properties of
                            <fo:inline font-family="monospace">org.glassfish.jersey.server.mvc.MvcFeature</fo:inline>
                            instead).
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19426"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            MVC does not allow to specify the resolving class. Resolving class is used to create a path of the
                            template. Changes are:
                        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            Annotation attribute
                            <fo:inline font-family="monospace">Class&lt;?&gt; org.glassfish.jersey.server.mvc.Template.resolvingClass()</fo:inline>
                            (the attribute was obsolete and therefore removed. Resolving class now always the resource class in
                            which the MVC resource method is defined).
                        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            <fo:inline font-family="monospace">resolvingClass</fo:inline>
                            was removed from <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Viewable.html)"><fo:inline>Viewable</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Viewable.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/Viewable.html</fo:basic-link>]</fo:inline>. The constructor no longer accepts this argument and
                            there is no getter for this field.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19442"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">org.glassfish.jersey.server.mvc.freemarker.FreemarkerProperties</fo:inline>
                            (use <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/freemarker/FreemarkerMvcFeature.html)"><fo:inline>FreemarkerMvcFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/freemarker/FreemarkerMvcFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/freemarker/FreemarkerMvcFeature.html</fo:basic-link>]</fo:inline> instead)
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19451"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">org.glassfish.jersey.server.mvc.jsp.JspProperties</fo:inline>
                            (use <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/jsp/JspMvcFeature.html)"><fo:inline>JspMvcFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/jsp/JspMvcFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/jsp/JspMvcFeature.html</fo:basic-link>]</fo:inline> instead)
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19460"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">org.glassfish.jersey.server.model.RuntimeResource.getFirstParentResource()</fo:inline>
                            (use <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/model/Resource.html#getParent())"><fo:inline>Resource.getParent()</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/model/Resource.html#getParent())">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/model/Resource.html#getParent()</fo:basic-link>]</fo:inline> instead).
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e19472"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19473"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        WADL is by default displayed in the simplified form. It does not contain supporting resources like OPTIONS
                        methods or
                        <fo:inline font-family="monospace">/application.wadl</fo:inline>
                        itself. In order to get the full WADL use query param<fo:inline font-family="monospace">detail=true</fo:inline>. For example make a
                        GET request to<fo:inline font-family="monospace">http://localhost:8080/application.wadl?detail=true</fo:inline>.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
        </fo:block></fo:block><fo:block id="mig-2.5.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Migrating from Jersey 2.5 to 2.5.1</fo:marker><fo:block font-size="20.735999999999997pt">28.19. Migrating from Jersey 2.5 to 2.5.1</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e19491"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19492"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        WADL is by default displayed in the simplified form. It does not contain supporting resources like OPTIONS
                        methods or
                        <fo:inline font-family="monospace">/application.wadl</fo:inline>
                        itself. In order to get the full WADL use query param<fo:inline font-family="monospace">detail=true</fo:inline>. For example make a
                        GET request to<fo:inline font-family="monospace">http://localhost:8080/application.wadl?detail=true</fo:inline>.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
        </fo:block></fo:block><fo:block id="mig-2.5"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Migrating from Jersey 2.4.1 to 2.5</fo:marker><fo:block font-size="20.735999999999997pt">28.20. Migrating from Jersey 2.4.1 to 2.5</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="mig-2.5-client"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Client-side API and SPI changes</fo:marker><fo:block font-size="17.28pt">28.20.1. Client-side API and SPI changes</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e19513"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19514"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-style="italic">Client chunked encoding configuration behaviour has changed:</fo:inline>
                        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            Jersey client uses chunked encoding (streaming) for serialization of the entity as a default option.
                            Before Jersey 2.5 release entity buffering has been used by default. The size of the chunk can still
                            be controlled by <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#CHUNKED_ENCODING_SIZE)"><fo:inline>ClientProperties.CHUNKED_ENCODING_SIZE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#CHUNKED_ENCODING_SIZE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#CHUNKED_ENCODING_SIZE</fo:basic-link>]</fo:inline> property, this property
                            however no longer enforces the use of chunked encoding. To control request entity buffering and
                            chunked transfer coding selection, please utilize use the new
                            <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#REQUEST_ENTITY_PROCESSING)"><fo:inline>ClientProperties.REQUEST_ENTITY_PROCESSING</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#REQUEST_ENTITY_PROCESSING)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#REQUEST_ENTITY_PROCESSING</fo:basic-link>]</fo:inline> property. The behaviour of the property
                            is however not unified across the available <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/Connector.html)"><fo:inline>Connector</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/Connector.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/Connector.html</fo:basic-link>]</fo:inline> implementations and depends
                            on the connector implementation configured for the <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)"><fo:inline>Client</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html</fo:basic-link>]</fo:inline> instance.
                            Default connector produced by <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/HttpUrlConnector.html)"><fo:inline>HttpUrlConnectorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/HttpUrlConnector.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/HttpUrlConnector.html</fo:basic-link>]</fo:inline> still uses
                            buffering as default options due to bugs in <fo:inline font-family="monospace">HttpURLConnection</fo:inline>. On the other hand,
                            Jetty HTTP Client based connectors produced by <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jetty/connector/JettyConnectorProvider.html)"><fo:inline>JettyConnectorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jetty/connector/JettyConnectorProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jetty/connector/JettyConnectorProvider.html</fo:basic-link>]</fo:inline> do not support
                            chunked encoding at all.
                        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            Please note that this is not a newly introduced limitation - it's merely
                            an official acknowledgement of the fact that different connectors have different capabilities and
                            limitations - something that has always been part of the individual connector implementations, it
                            just was not publicly acknowledged.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19545"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        New <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/ConnectorProvider.html)"><fo:inline>ConnectorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/ConnectorProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/ConnectorProvider.html</fo:basic-link>]</fo:inline> SPI has been introduced to decouple <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/Connector.html)"><fo:inline>Connector</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/Connector.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/spi/Connector.html</fo:basic-link>]</fo:inline>
                        instantiation from <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)"><fo:inline>Client</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html</fo:basic-link>]</fo:inline> instance boot-strapping. As such, the
                        <fo:inline font-family="monospace">connector(Connector)</fo:inline>
                        method has been removed from <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientConfig.html)"><fo:inline>ClientConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientConfig.html</fo:basic-link>]</fo:inline>
                        API. It has been replaced with a newly introduced
                        <fo:inline font-family="monospace">connectorProvider(ConnectorProvider)</fo:inline>
                        method.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19566"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        <fo:inline font-family="monospace">org.glassfish.jersey.client.HttpUrlConnector</fo:inline>
                        has been removed from the public API.
                        <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/HttpUrlConnector.html)"><fo:inline>HttpUrlConnectorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/HttpUrlConnector.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/HttpUrlConnector.html</fo:basic-link>]</fo:inline> should be used to produce <fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/net/HttpURLConnection.html)"><fo:inline>HttpURLConnection</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://docs.oracle.com/javase/6/docs/api/java/net/HttpURLConnection.html)">http://docs.oracle.com/javase/6/docs/api/java/net/HttpURLConnection.html</fo:basic-link>]</fo:inline>
                        connector instances instead.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19578"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        <fo:inline font-family="monospace">ClientProperties.HTTP_URL_CONNECTION_SET_METHOD_WORKAROUND</fo:inline>
                        property has been moved to the new <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/HttpUrlConnector.html)"><fo:inline>HttpUrlConnectorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/HttpUrlConnector.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/HttpUrlConnector.html</fo:basic-link>]</fo:inline>
                        has been introduced in Jersey 2.4) has been moved to the new <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/HttpUrlConnector.html)"><fo:inline>HttpUrlConnectorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/HttpUrlConnector.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/HttpUrlConnector.html</fo:basic-link>]</fo:inline>
                        class as this property is specific to the connector instances created by
                        <fo:inline font-family="monospace">HttpUrlConnectorProvider</fo:inline> only. The property has been also renamed to
                        <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/HttpUrlConnectorProvider.html#SET_METHOD_WORKAROUND)"><fo:inline>HttpUrlConnector.SET_METHOD_WORKAROUND</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/HttpUrlConnectorProvider.html#SET_METHOD_WORKAROUND)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/HttpUrlConnectorProvider.html#SET_METHOD_WORKAROUND</fo:basic-link>]</fo:inline>. The name of the property
                        remains the same - <fo:inline font-family="monospace">jersey.config.client.httpUrlConnection.setMethodWorkaround</fo:inline>.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19599"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        <fo:inline font-family="monospace">ClientProperties.HTTP_URL_CONNECTOR_FIX_LENGTH_STREAMING</fo:inline>
                        property (that
                        class as this property is specific to the connector instances created by
                        <fo:inline font-family="monospace">HttpUrlConnectorProvider</fo:inline> only. The property has been also renamed to
                        <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/HttpUrlConnectorProvider.html#USE_FIXED_LENGTH_STREAMING)"><fo:inline>HttpUrlConnectorProvider.USE_FIXED_LENGTH_STREAMING</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/HttpUrlConnectorProvider.html#USE_FIXED_LENGTH_STREAMING)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/HttpUrlConnectorProvider.html#USE_FIXED_LENGTH_STREAMING</fo:basic-link>]</fo:inline> and the new property name
                        is <fo:inline font-family="monospace">jersey.config.client.httpUrlConnector.useFixedLengthStreaming</fo:inline>.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19614"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        <fo:inline font-family="monospace">org.glassfish.jersey.grizzly.connector.GrizzlyConnector</fo:inline>
                        has been removed from the public
                        API. <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/grizzly/connector/GrizzlyConnectorProvider.html)"><fo:inline>GrizzlyConnectorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/grizzly/connector/GrizzlyConnectorProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/grizzly/connector/GrizzlyConnectorProvider.html</fo:basic-link>]</fo:inline> should be used to produce Grizzly Asynchronous HTTP Client
                        connector instances instead.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19623"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        Public constructor has been removed from the <fo:inline font-family="monospace">org.glassfish.jersey.apache.connector.ApacheConnector</fo:inline>; API.
                        <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/apache/connector/ApacheConnectorProvider.html)"><fo:inline>ApacheConnectorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/apache/connector/ApacheConnectorProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/apache/connector/ApacheConnectorProvider.html</fo:basic-link>]</fo:inline> should be used to provide Apache HTTP Client
                        connector instances instead.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19632"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        Public constructor has been removed from the <fo:inline font-family="monospace">org.glassfish.jersey.jetty.connector.JettyConnector</fo:inline>; API.
                        <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jetty/connector/JettyConnectorProvider.html)"><fo:inline>JettyConnectorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jetty/connector/JettyConnectorProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jetty/connector/JettyConnectorProvider.html</fo:basic-link>]</fo:inline> should be used to provide Jetty HTTP Client
                        connector instances instead.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19641"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        Renamed property <fo:inline font-family="monospace">CACHING_TEMPLATES_ENABLED</fo:inline> in <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/mustache/MustacheMvcFeature.html)"><fo:inline>MustacheMvcFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/mustache/MustacheMvcFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/mvc/mustache/MustacheMvcFeature.html</fo:basic-link>]</fo:inline>
                        from <fo:inline font-family="monospace">jersey.config.server.mvc.caching.mustache.enabled</fo:inline> to
                        <fo:inline font-family="monospace">jersey.config.server.mvc.caching.mustache</fo:inline>.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19656"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        Authentication filters <fo:inline font-family="monospace">org.glassfish.jersey.client.filter.HttpBasicAuthFilter</fo:inline>
                        and <fo:inline font-family="monospace">org.glassfish.jersey.client.filter.HttpDigestAuthFilter</fo:inline>
                        were deprecated and replaced by <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/authentication/HttpAuthenticationFeature.html)"><fo:inline>HttpAuthenticationFeature</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/authentication/HttpAuthenticationFeature.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/authentication/HttpAuthenticationFeature.html</fo:basic-link>]</fo:inline>.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block></fo:block><fo:block id="mig-2.5-other"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Other changes</fo:marker><fo:block font-size="17.28pt">28.20.2. Other changes</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e19674"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19675"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            The <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ContainerLifecycleListener.html)"><fo:inline>ContainerLifecycleListener</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ContainerLifecycleListener.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ContainerLifecycleListener.html</fo:basic-link>]</fo:inline> invokes event
                            <fo:inline font-family="monospace">onStartup</fo:inline>
                            and
                            <fo:inline font-family="monospace">onShutdown</fo:inline>
                            also when application is being started or stopped because of application redeploy. The interface was
                            marked as a Beta now.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19687"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            The monitoring statistics method
                            <fo:inline font-family="monospace">ApplicationStatistics.getDestroyTime()</fo:inline>
                            is deprecated and returns always null. Use <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ContainerLifecycleListener.html)"><fo:inline>ContainerLifecycleListener</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ContainerLifecycleListener.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/spi/ContainerLifecycleListener.html</fo:basic-link>]</fo:inline> to listen on
                            application destroy and get the destroy time.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19696"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">org.glassfish.jersey.spi.ResponseExecutorsProvider</fo:inline>
                            contract has been completely removed from the Jersey SPI as it was inconsistently used by Jersey
                            runtime and we did not find a suitable use case where a custom response executor would make sense.
                            While we have no indication that the removed SPI is used in the Jersey community, please do not
                            hesitate to contact us in case you think that you have a valid use case where the use of a custom
                            response executor makes sense.
                        </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19702"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                            <fo:inline font-family="monospace">org.glassfish.jersey.spi.RequestsExecutorsProvider</fo:inline>
                            contract has been renamed to
                            <fo:inline font-family="monospace">org.glassfish.jersey.spi.RequestsExecutorsProvider</fo:inline>. It has been also extended with
                            an additional
                            <fo:inline font-family="monospace">releaseRequestingExecutor</fo:inline>
                            method to address executor shutdown handling issues reported in<fo:basic-link external-destination="url(https://java.net/jira/browse/JERSEY-2205)"><fo:inline>JERSEY-2205</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://java.net/jira/browse/JERSEY-2205)">https://java.net/jira/browse/JERSEY-2205</fo:basic-link>]</fo:inline>. As such, any custom
                            implementation of the SPI is now required to implement the new method. (Note that the SPI has been
                            removed in Jersey 2.18 - see the Jersey 2.18 release migration guide section for more details.)
                        </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
            </fo:block></fo:block></fo:block><fo:block id="mig-2.4.1"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Migrating from Jersey 2.4 to 2.4.1</fo:marker><fo:block font-size="20.735999999999997pt">28.21. Migrating from Jersey 2.4 to 2.4.1</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e19723"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19724"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        The unsupported
                        <fo:inline font-family="monospace">ClientProperties.BUFFER_RESPONSE_ENTITY_ON_EXCEPTION</fo:inline>
                        property, with value of<fo:inline font-family="monospace">jersey.config.client.bufferResponseEntityOnException</fo:inline>, has been
                        removed from the API. Since Jersey 2.4 where
                        <fo:basic-link external-destination="url(https://java.net/jira/browse/jersey-2157)"><fo:inline>JERSEY-2157</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://java.net/jira/browse/jersey-2157)">https://java.net/jira/browse/jersey-2157</fo:basic-link>]</fo:inline>
                        issue has been fixed, Jersey client runtime automatically buffers error response entities. This behavior
                        is automatic and there is no need to set any property.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
        </fo:block></fo:block><fo:block id="mig-2.4"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Migrating from Jersey 2.3 to 2.4</fo:marker><fo:block font-size="20.735999999999997pt">28.22. Migrating from Jersey 2.3 to 2.4</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e19742"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19743"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        All deprecated SSE <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/InboundEvent.html)"><fo:inline>InboundEvent</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/InboundEvent.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/InboundEvent.html</fo:basic-link>]</fo:inline>
                        <fo:inline font-family="monospace">getData(...)</fo:inline>
                        methods have been removed from the API. Use the new
                        <fo:inline font-family="monospace">readData(...)</fo:inline>
                        methods have been introduced instead in Jersey 2.3 for consistency with other parts of client-side JAX-RS
                        API. Access to the raw SSE event data content is provided via a <fo:inline font-family="monospace">InboundEvent</fo:inline>'s
                        <fo:inline font-family="monospace">byte[] getRawData()</fo:inline>
                        method that has been too introduced in Jersey 2.3.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19761"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        All EJB and CDI integration classes have been moved into internal Jersey packages, to clearly state the
                        integration code should not be used as a public API.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
        </fo:block></fo:block><fo:block id="mig-2.3"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Migrating from Jersey 2.0, 2.1 or 2.2 to 2.3</fo:marker><fo:block font-size="20.735999999999997pt">28.23. Migrating from Jersey 2.0, 2.1 or 2.2 to 2.3</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e19770"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19771"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        All existing SSE <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/InboundEvent.html)"><fo:inline>InboundEvent</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/InboundEvent.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/InboundEvent.html</fo:basic-link>]</fo:inline>
                        <fo:inline font-family="monospace">getData(...)</fo:inline>
                        methods have been made deprecated and new
                        <fo:inline font-family="monospace">readData(...)</fo:inline>
                        methods have been introduced instead for consistency with other parts of client-side JAX-RS API. The
                        deprecated
                        <fo:inline font-family="monospace">getData(...)</fo:inline>
                        methods will be removed in Jersey 2.4. A new SSE <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/InboundEvent.html)"><fo:inline>InboundEvent</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/InboundEvent.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/InboundEvent.html</fo:basic-link>]</fo:inline>
                        <fo:inline font-family="monospace">byte[] getRawData()</fo:inline>
                        method has been introduced to provide access to the raw SSE event data content.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19792"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        Generic <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/Broadcaster.html)"><fo:inline>Broadcaster</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/Broadcaster.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/Broadcaster.html</fo:basic-link>]</fo:inline> methods for adding/removing <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/BroadcasterListener.html)"><fo:inline>BroadcasterListener</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/BroadcasterListener.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/BroadcasterListener.html</fo:basic-link>]</fo:inline>
                        registrations have been renamed from
                        <fo:inline font-family="monospace">addBroadcasterListener/removeBroadcasterListener</fo:inline>
                        to simply<fo:inline font-family="monospace">add/remove</fo:inline>.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19807"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                        Generic <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/Broadcaster.html)"><fo:inline>Broadcaster</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/Broadcaster.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/Broadcaster.html</fo:basic-link>]</fo:inline> (and transitively, <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseBroadcaster.html)"><fo:inline>SseBroadcaster</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseBroadcaster.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/SseBroadcaster.html</fo:basic-link>]</fo:inline>)
                        <fo:inline font-family="monospace">add/remove</fo:inline>
                        methods - that are responsible for adding/removing <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/BroadcasterListener.html)"><fo:inline>BroadcasterListener</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/BroadcasterListener.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/BroadcasterListener.html</fo:basic-link>]</fo:inline>
                        and <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ChunkedOutput.html)"><fo:inline>ChunkedOutput</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ChunkedOutput.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ChunkedOutput.html</fo:basic-link>]</fo:inline> (or <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventOutput.html)"><fo:inline>EventOutput</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventOutput.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/media/sse/EventOutput.html</fo:basic-link>]</fo:inline>) registrations - no longer try to avoid
                        duplicate registrations by comparing hash code of the added/removed instance with the hash codes of
                        already registered instances. This behavior has been identified as a potential source of hard to discover
                        bugs and was removed as such. The issue with the former behavior was that hash codes as integer values
                        provide only a very limited value space that could lead to false-positive duplicate registration
                        rejections, especially with larger number of simultaneously connected SSE clients (represented
                        by <fo:inline font-family="monospace">ChunkedOutput</fo:inline> or <fo:inline font-family="monospace">EventOutput</fo:inline> broadcaster registrations).
                        Consequently, users who rely on the old registration behavior in their application code need to adapt the
                        code to the revised behavior of <fo:inline font-family="monospace">Broadcaster</fo:inline>
                        <fo:inline font-family="monospace">add/remove</fo:inline>
                        methods.
                    </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
        </fo:block></fo:block><fo:block id="mig-1.x"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Migrating from Jersey 1.x to 2.0</fo:marker><fo:block font-size="20.735999999999997pt">28.24. Migrating from Jersey 1.x to 2.0</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            This chapter is a migration guide for people switching from Jersey 1.x. Since many of the Jersey 1.x features became
            part of JAX-RS 2.0 standard which caused changes in the package names, we decided it is a good time to do a more
            significant incompatible refactoring, which will allow us to introduce some more interesting new features in the
            future. As the result, there are many incompatibilities between Jersey 1.x and Jersey 2.0. This chapter summarizes how
            to migrate the concepts found in Jersey 1.x to Jersey/JAX-RS 2.0 concepts.
        </fo:block><fo:block id="mig-server-api"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Server API</fo:marker><fo:block font-size="17.28pt">28.24.1. Server API</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                Jersey 1.x contains number of proprietary server APIs. This section covers migration of application code relying
                on those APIs.
            </fo:block><fo:block id="mig-server-inject-custom-objects"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.24.1.1. Injecting custom objects</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Jersey 1.x have its own internal dependency injection framework which handles injecting various parameters
                    into field or methods. It also provides a way how to register custom injection provider in Singleton or
                    PerRequest scopes. Jersey 2.x uses HK2 as dependency injection framework and users are also able to register
                    custom classes or instances to be injected in various scopes.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Main difference in Jersey 2.x is that you don't need to create special classes or providers for this task;
                    everything should be achievable using HK2 API. Custom injectables can be registered at ResourceConfig level by
                    adding new HK2 Module or by dynamically adding binding almost anywhere using injected HK2 Services instance.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Jersey 1.x Singleton:
                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e19860">ResourceConfig resourceConfig = new
                        DefaultResourceConfig(); resourceConfig.getSingletons().add( new SingletonTypeInjectableProvider&lt;Context,
                        SingletonType&gt;( SingletonType.class, new SingletonType()) {});
                    </fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Jersey 1.x PerRequest:
                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e19865">ResourceConfig resourceConfig = new
                        DefaultResourceConfig(); resourceConfig.getSingletons().add( new PerRequestTypeInjectableProvider&lt;Context,
                        PerRequestType&gt;() { @Override public Injectable&lt;PerRequestType&gt; getInjectable(ComponentContext
                        ic, Context context) { //... } });
                    </fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Jersey 2.0 HK2 Module:
                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e19870">public static class MyBinder extends AbstractBinder
                        {

                        @Override protected void configure() { // request scope binding
                        bind(MyInjectablePerRequest.class).to(MyInjectablePerRequest.class).in(RequestScoped.class); // singleton
                        binding bind(MyInjectableSingleton.class).in(Singleton.class); // singleton instance binding bind(new
                        MyInjectableSingleton()).to(MyInjectableSingleton.class); }

                        }

                        // register module to ResourceConfig (can be done also in constructor) ResourceConfig rc = new
                        ResourceConfig(); rc.addClasses(/* ... */); rc.addBinders(new MyBinder());
                    </fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Jersey 2.0 dynamic binding:
                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e19875">public static class MyApplication extends
                        Application {

                        @Inject public MyApplication(ServiceLocator serviceLocator) { System.out.println("Registering
                        injectables...");

                        DynamicConfiguration dc = Injections.getConfiguration(serviceLocator);

                        // request scope binding Injections.addBinding(
                        Injections.newBinder(MyInjectablePerRequest.class).to(MyInjectablePerRequest.class).in(RequestScoped.class),
                        dc);

                        // singleton binding Injections.addBinding( Injections.newBinder(MyInjectableSingleton.class)
                        .to(MyInjectableSingleton.class) .in(Singleton.class), dc);

                        // singleton instance binding Injections.addBinding( Injections.newBinder(new MyInjectableSingleton())
                        .to(MyInjectableSingleton.class), dc);

                        // request scope binding with specified custom annotation Injections.addBinding(
                        Injections.newBinder(MyInjectablePerRequest.class) .to(MyInjectablePerRequest.class) .qualifiedBy(new
                        MyAnnotationImpl()) .in(RequestScoped.class), dc);

                        // commits changes dc.commit(); }

                        @Override public Set&lt;Class&lt;?&gt;&gt; getClasses() { return ... }}
                    </fo:block>
                </fo:block></fo:block><fo:block id="mig-server-reload"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.24.1.2. ResourceConfig Reload</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    In Jersey 1, the reload functionality is based on two interfaces:
                    <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.2em" id="d0e19883"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19884"><fo:list-item-label end-indent="label-end()"><fo:block>1.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>com.sun.jersey.spi.container.ContainerListener</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19887"><fo:list-item-label end-indent="label-end()"><fo:block>2.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>com.sun.jersey.spi.container.ContainerNotifier</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

                    Containers, which support the reload functionality implement the
                    <fo:inline font-family="monospace">ContainerListener</fo:inline>
                    interface, so that once you get access to the actual container instance, you could call it's
                    <fo:inline font-family="monospace">onReload</fo:inline>
                    method and get the container re-load the config. The second interface helps you to obtain the actual container
                    instance reference. An example on how things are wired together follows.

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e19897"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 28.1. Jersey 1 reloader implementation</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e19900">  1 public class Reloader implements
  2                             ContainerNotifier { List&lt;ContainerListener&gt; ls;
  3 
  4                             public Reloader() { ls = new ArrayList&lt;ContainerListener&gt;(); }
  5 
  6                             public void addListener(ContainerListener l) { ls.add(l); }
  7 
  8                             public void reload() { for (ContainerListener l : ls) { l.onReload(); } } }
  9                         </fo:block></fo:block></fo:block>

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e19903"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 28.2. Jersey 1 reloader registration</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e19906">  1 Reloader reloader = new Reloader();
  2                             resourceConfig.getProperties().put(ResourceConfig.PROPERTY_CONTAINER_NOTIFIER, reloader);
  3                         </fo:block></fo:block></fo:block>

                    In Jersey 2, two interfaces are involved again, but these have been re-designed.

                    <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.2em" id="d0e19909"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19910"><fo:list-item-label end-indent="label-end()"><fo:block>1.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>org.glassfish.jersey.server.spi.Container</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e19913"><fo:list-item-label end-indent="label-end()"><fo:block>2.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>org.glassfish.jersey.server.spi.ContainerLifecycleListener</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

                    The
                    <fo:inline font-family="monospace">Container</fo:inline>
                    interface introduces two
                    <fo:inline font-family="monospace">reload</fo:inline>
                    methods, which you can call to get the application re-loaded. One of these methods allows to pass in a
                    new <fo:inline font-family="monospace">ResourceConfig</fo:inline> instance.

                    You can register your implementation of
                    <fo:inline font-family="monospace">ContainerLifecycleListener</fo:inline>
                    the same way as any other provider (i.e. either by annotating it by <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/Provider.html)"><fo:inline>@Provider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/Provider.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/ext/Provider.html</fo:basic-link>]</fo:inline> annotation or adding
                    it to the Jersey <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)"><fo:inline>ResourceConfig</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ResourceConfig.html</fo:basic-link>]</fo:inline> directly either using the class (using
                    <fo:inline font-family="monospace">ResourceConfig.addClasses()</fo:inline>) or registering a particular instance using
                    <fo:inline font-family="monospace">ResourceConfig.addSingletons()</fo:inline>
                    method.
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    An example on how things work in Jersey 2 follows.

                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e19943"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 28.3. Jersey 2 reloader implementation</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e19946">  1 public class Reloader implements
  2                             ContainerLifecycleListener {
  3 
  4                             Container container;
  5 
  6                             public void reload(ResourceConfig newConfig) { container.reload(newConfig); }
  7 
  8                             public void reload() { container.reload(); }
  9 
 10                             @Override public void onStartup(Container container) { this.container = container; }
 11 
 12                             @Override public void onReload(Container container) { // ignore or do whatever you want after reload
 13                             has been done }
 14 
 15                             @Override public void onShutdown(Container container) { // ignore or do something after the container
 16                             has been shutdown } }
 17                         </fo:block></fo:block></fo:block>
                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e19949"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 28.4. Jersey 2 reloader registration</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e19952">  1 Reloader reloader = new Reloader();
  2                             resourceConfig.addSingletons(reloader);
  3                         </fo:block></fo:block></fo:block>
                </fo:block></fo:block><fo:block id="mig-server-provider-ordering"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.24.1.3. MessageBodyReaders and MessageBodyWriters ordering</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">JAX-RS 2.0 defines new order of MessageBodyWorkers - whole set is sorted by declaration distance, media type
                    and source (custom providers having higher priority than default ones provided by Jersey). JAX-RS 1.x ordering
                    can still be forced by setting parameter
                    <fo:inline font-family="monospace">MessageProperties.LEGACY_WORKERS_ORDERING</fo:inline>
                    (<fo:inline font-family="monospace">"jersey.config.workers.legacyOrdering"</fo:inline>) to <fo:inline font-family="monospace">true</fo:inline>
                    in <fo:inline font-family="monospace">ResourceConfig</fo:inline> or <fo:inline font-family="monospace">ClientConfig</fo:inline> properties.
                </fo:block></fo:block></fo:block><fo:block id="mig-client-api"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Migrating Jersey Client API</fo:marker><fo:block font-size="17.28pt">28.24.2. Migrating Jersey Client API</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                JAX-RS 2.0 provides functionality that is equivalent to the Jersey 1.x proprietary client API. Here is a rough
                mapping between the Jersey 1.x and JAX-RS 2.0 Client API classes:
            </fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e19980"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 28.2. Mapping of Jersey 1.x to JAX-RS 2.0 client classes</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-start-style="solid" border-end-style="solid" border-top-style="solid" border-bottom-style="solid" border-start-width="0.5pt" border-end-width="0.5pt" border-top-width="0.5pt" border-bottom-width="0.5pt" border-start-color="black" border-end-color="black" border-top-color="black" border-bottom-color="black" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="0%"/><fo:table-column column-number="2" column-width="0%"/><fo:table-column column-number="3" column-width="100%"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row keep-with-next.within-column="always"><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block font-weight="bold">Jersey 1.x Class</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block font-weight="bold">JAX-RS 2.0 Class</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block font-weight="bold">Notes</fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
                                <fo:basic-link external-destination="url(http://jersey.java.net/nonav/apidocs/1.17/jersey/com/sun/jersey/api/client/Client.html)"><fo:inline>
                                    com.sun.jersey.api.client.Client
                                </fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://jersey.java.net/nonav/apidocs/1.17/jersey/com/sun/jersey/api/client/Client.html)">http://jersey.java.net/nonav/apidocs/1.17/jersey/com/sun/jersey/api/client/Client.html</fo:basic-link>]</fo:inline>
                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
                                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html)"><fo:inline>ClientBuilder</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/ClientBuilder.html</fo:basic-link>]</fo:inline>
                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>For the static factory methods and constructors.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block> </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
                                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)"><fo:inline>Client</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/Client.html</fo:basic-link>]</fo:inline>
                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block>For the instance methods.</fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
                                <fo:basic-link external-destination="url(http://jersey.java.net/nonav/apidocs/1.17/jersey/com/sun/jersey/api/client/WebResource.html)"><fo:inline>
                                    com.sun.jersey.api.client.WebResource
                                </fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://jersey.java.net/nonav/apidocs/1.17/jersey/com/sun/jersey/api/client/WebResource.html)">http://jersey.java.net/nonav/apidocs/1.17/jersey/com/sun/jersey/api/client/WebResource.html</fo:basic-link>]</fo:inline>
                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
                                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html)"><fo:inline>WebTarget</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html</fo:basic-link>]</fo:inline>
                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" text-align="left"><fo:block> </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
                                <fo:basic-link external-destination="url(http://jersey.java.net/nonav/apidocs/1.17/jersey/com/sun/jersey/api/client/AsyncWebResource.html)"><fo:inline>
                                    com.sun.jersey.api.client.AsyncWebResource
                                </fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://jersey.java.net/nonav/apidocs/1.17/jersey/com/sun/jersey/api/client/AsyncWebResource.html)">http://jersey.java.net/nonav/apidocs/1.17/jersey/com/sun/jersey/api/client/AsyncWebResource.html</fo:basic-link>]</fo:inline>
                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black" text-align="left"><fo:block>
                                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html)"><fo:inline>WebTarget</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html)">https://jersey.github.io/apidocs-javax.jax-rs/2.1.5/javax/ws/rs/client/WebTarget.html</fo:basic-link>]</fo:inline>
                            </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" text-align="left"><fo:block>You can access async versions of the async methods by calling
                                <fo:inline font-family="monospace">WebTarget.request().async()</fo:inline>
                            </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">The following sub-sections show code examples.</fo:block><fo:block id="mig-client-simple-request"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.24.2.1. Making a simple client request</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Jersey 1.x way:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e20053">Client client = Client.create(); WebResource
                        webResource = client.resource(restURL).path("myresource/{param}"); String result =
                        webResource.pathParam("param", "value").get(String.class);
                    </fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    JAX-RS 2.0 way:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e20058">Client client = ClientBuilder.newClient();
                        WebTarget target = client.target(restURL).path("myresource/{param}"); String result =
                        target.pathParam("param", "value").get(String.class);
                    </fo:block>
                </fo:block></fo:block><fo:block id="mig-client-filter-register"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.24.2.2. Registering filters</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Jersey 1.x way:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e20066">Client client = Client.create(); WebResource
                        webResource = client.resource(restURL); webResource.addFilter(new HTTPBasicAuthFilter(username,
                        password));
                    </fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    JAX-RS 2.0 way:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e20071">Client client = ClientBuilder.newClient();
                        WebTarget target = client.target(restURL); target.register(new HttpBasicAuthFilter(username, password));
                    </fo:block>
                </fo:block></fo:block><fo:block id="mig-client-accept-header"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.24.2.3. Setting "Accept" header</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Jersey 1.x way:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e20079">Client client = Client.create(); WebResource
                        webResource = client.resource(restURL).accept("text/plain"); ClientResponse response =
                        webResource.get(ClientResponse.class);
                    </fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    JAX-RS 2.0 way:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e20084">Client client = ClientBuilder.newClient();
                        WebTarget target = client.target(restURL); Response response = target.request("text/plain").get();
                    </fo:block>
                </fo:block></fo:block><fo:block id="mig-client-add-entity"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.24.2.4. Attaching entity to request</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Jersey 1.x way:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e20092">Client client = Client.create(); WebResource
                        webResource = client.resource(restURL); ClientResponse response = webResource.post(ClientResponse.class,
                        "payload");
                    </fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    JAX-RS 2.0 way:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e20097">Client client = ClientBuilder.newClient();
                        WebTarget target = client.target(restURL); Response response =
                        target.request().post(Entity.text("payload"));
                    </fo:block>
                </fo:block></fo:block><fo:block id="mig-client-ssl"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.24.2.5. Setting SSLContext and/or HostnameVerifier</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Jersey 1.x way:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e20105">HTTPSProperties prop = new
                        HTTPSProperties(hostnameVerifier, sslContext); DefaultClientConfig dcc = new DefaultClientConfig();
                        dcc.getProperties().put(HTTPSProperties.PROPERTY_HTTPS_PROPERTIES, prop); Client client =
                        Client.create(dcc);
                    </fo:block>
                </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Jersey 2.0 way:

                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e20110">Client client = ClientBuilder.newBuilder()
                        .sslContext(sslContext) .hostnameVerifier(hostnameVerifier) .build();
                    </fo:block>
                </fo:block></fo:block></fo:block><fo:block id="mig-1-x-json"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">JSON support changes</fo:marker><fo:block font-size="17.28pt">28.24.3. JSON support changes</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">JSON Support has undergone certain changes in Jersey 2.x. The most visible difference for the developer is
                in the initialization and configuration.
            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                In Jersey 1.x, the JAXB/JSON Support was implemented as a set of
                <fo:inline font-family="monospace">MessageBodyReaders</fo:inline>
                and
                <fo:inline font-family="monospace">MessageWriters</fo:inline>
                in the
                <fo:inline font-family="monospace">jersey-json</fo:inline>
                module. Internally, there were several implementations of JSON to Object mapping ranging from Jersey's own custom
                solution to third party providers, such as
                <fo:inline font-family="monospace">Jackson</fo:inline>
                or<fo:inline font-family="monospace">Jettison</fo:inline>. The configuration of the JSON support was centralized in the
                <fo:inline font-family="monospace">JSONConfiguration</fo:inline>
                and
                <fo:inline font-family="monospace">JSONJAXBContext</fo:inline>
                classes.
            </fo:block><fo:block id="mig-1-x-json-init"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.24.3.1. Initialization</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    There are three main JSON-mapping handling approaches, which are preserved in Jersey 2:
                    <fo:basic-link internal-destination="json-jaxb"><fo:inline>JAXB-based</fo:inline></fo:basic-link>,
                    <fo:basic-link internal-destination="json-pojo"><fo:inline>POJO mapping</fo:inline></fo:basic-link>
                    and
                    <fo:basic-link internal-destination="json-lowlevel"><fo:inline>Low-level parsing</fo:inline></fo:basic-link>

                    The following table shows how to enable each of them in both Jersey 2 compared to Jersey 1:
                    <fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e20155"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table 28.3. JSON approaches and usage in Jersey 1 vs Jersey 2</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-start-style="solid" border-end-style="solid" border-top-style="solid" border-bottom-style="solid" border-start-width="0.5pt" border-end-width="0.5pt" border-top-width="0.5pt" border-bottom-width="0.5pt" border-start-color="black" border-end-color="black" border-top-color="black" border-bottom-color="black" width="auto"><fo:table-column column-number="1" column-width="33%"/><fo:table-column column-number="2" column-width="33%"/><fo:table-column column-number="3" column-width="34%"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row keep-with-next.within-column="always"><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block font-weight="bold">Approach</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block font-weight="bold">Jersey 1</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block font-weight="bold">Jersey 2</fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>POJO</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>register<fo:inline font-family="monospace">POJOMappingFeature</fo:inline>, use <fo:basic-link external-destination="url(http://jackson.codehaus.org/1.9.9/javadoc/org/codehaus/jackson/map/ObjectMapper.html)"><fo:inline>ObjectMapper</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://jackson.codehaus.org/1.9.9/javadoc/org/codehaus/jackson/map/ObjectMapper.html)">http://jackson.codehaus.org/1.9.9/javadoc/org/codehaus/jackson/map/ObjectMapper.html</fo:basic-link>]</fo:inline> for
                                        configuration
                                    </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                                        use
                                        <fo:inline font-family="monospace">Jackson</fo:inline>
                                        provider: (add
                                        <fo:inline font-family="monospace">jersey-media-json-jackson</fo:inline>
                                        dependency and
                                        <fo:basic-link internal-destination="jackson-registration"><fo:inline>register</fo:inline></fo:basic-link>
                                        the<fo:inline font-family="monospace">JacksonFeature</fo:inline>), configure with custom <fo:basic-link external-destination="url(http://fasterxml.github.io/jackson-databind/javadoc/2.3.0/com/fasterxml/jackson/databind/ObjectMapper.html)"><fo:inline>ObjectMapper</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(http://fasterxml.github.io/jackson-databind/javadoc/2.3.0/com/fasterxml/jackson/databind/ObjectMapper.html)">http://fasterxml.github.io/jackson-databind/javadoc/2.3.0/com/fasterxml/jackson/databind/ObjectMapper.html</fo:basic-link>]</fo:inline>
                                        instance.
                                    </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>JAXB</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>Default; use<fo:inline font-family="monospace">JSONConfiguration</fo:inline>/
                                        <fo:inline font-family="monospace">JSONJAXBContext</fo:inline>
                                        for configuration
                                    </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>use
                                        <fo:inline font-family="monospace">MOXy</fo:inline>
                                        (add the
                                        <fo:inline font-family="monospace">jersey-media-moxy</fo:inline>
                                        dependency; the feature will be registered
                                        <fo:basic-link internal-destination="deployment.autodiscoverable"><fo:inline>automatically</fo:inline></fo:basic-link>), configure using
                                        <fo:inline font-family="monospace">MoxyJsonConfig</fo:inline>
                                    </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>Low-level</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>Direct usage of
                                        <fo:inline font-family="monospace">JSONObject</fo:inline>
                                        and/or
                                        <fo:inline font-family="monospace">JSONArray</fo:inline>
                                        classes
                                    </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt"><fo:block>use JSON-P (standard) or Jettison (non-standard) APIs (add the relevant dependency)
                                    </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block>
                    <fo:block><fo:block space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e20235"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Example 28.5. Initializing JAXB-based support with MOXy</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" font-family="monospace" id="d0e20238">
                            &lt;dependency&gt; &lt;groupId&gt;org.glassfish.jersey.media&lt;/groupId&gt; &lt;artifactId&gt;jersey-media-moxy&lt;/artifactId&gt;
                            &lt;version&gt;2.28&lt;/version&gt; &lt;/dependency&gt;</fo:block></fo:block></fo:block>
                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e20241"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            For JAXB-based support, MOXy is the default way in Jersey 2. However, other providers (<fo:inline font-family="monospace">
                            Jackson</fo:inline>,<fo:inline font-family="monospace">Jettison</fo:inline>) can be used as well. The relevant feature has to be
                            registered (and dependency added) and custom implementation of
                            <fo:inline font-family="monospace">ContextResolver</fo:inline>
                            has to be provided. See the code snippets in the<fo:basic-link internal-destination="json.jackson"><fo:inline>related chapter</fo:inline></fo:basic-link>.
                        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            For more on particular
                            <fo:inline font-family="monospace">Feature</fo:inline>
                            registration, see also:
                            <fo:basic-link internal-destination="jackson-registration"><fo:inline>Jackson registration</fo:inline></fo:basic-link>,
                            <fo:basic-link internal-destination="jettison-registration"><fo:inline>Jettison registration</fo:inline></fo:basic-link>,
                            <fo:basic-link internal-destination="moxy-registration"><fo:inline>MOXy registration</fo:inline></fo:basic-link>,
                            <fo:basic-link internal-destination="jsonp-registration"><fo:inline>JSON-P registration</fo:inline></fo:basic-link>.
                        </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            It is important to point out, that the
                            <fo:inline font-family="monospace">Feature</fo:inline>
                            registration has to be done separately for client and server.
                        </fo:block></fo:block></fo:block>
                    <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="d0e20279"><fo:block font-size="14pt" font-weight="bold" hyphenate="false" keep-with-next.within-column="always">Note</fo:block><fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                            With Jersey 2.9,
                            <fo:inline font-family="monospace">Jackson</fo:inline>
                            has been updated to version 2.3.2. The feature is still configured via mentioned
                            <fo:inline font-family="monospace">ObjectMapper</fo:inline>
                            class, but the package has changed.
                            <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e20288"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e20289"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>For<fo:inline font-family="monospace">jackson 1.x</fo:inline>, use
                                    <fo:inline font-family="monospace">org.codehaus.jackson.map.ObjectMapper</fo:inline></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e20296"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block>For<fo:inline font-family="monospace">jackson 2.x</fo:inline>, use
                                    <fo:inline font-family="monospace">com.fasterxml.jackson.core.ObjectMapper</fo:inline></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
                        </fo:block></fo:block></fo:block>
                </fo:block></fo:block><fo:block id="mig-1-x-json-notation"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.24.3.2. JSON Notation</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    Jersey 1 was selecting the provider automatically based on the desired JSON Notation. This concept was
                    replaced in Jersey 2 by direct choice of provider (as shown above). To provide some guide how to achieve
                    the same results as in the previous Jersey version, see the following list:
                    <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e20310"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e20311"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:inline font-family="monospace">MAPPED</fo:inline>
                                not supported
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e20317"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:inline font-family="monospace">NATURAL</fo:inline>
                                default MOXy output
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e20323"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:inline font-family="monospace">JETTISON_MAPPED</fo:inline>
                                supported by Jettison
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e20329"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:inline font-family="monospace">BADGERFISH</fo:inline>
                                supported by Jettison
                            </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>
                </fo:block></fo:block><fo:block id="mig-1-x-json-config"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:block font-size="14.399999999999999pt">28.24.3.3. Configuration</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                    As mentioned, the centralized configuration of Jersey 1's
                    <fo:inline font-family="monospace">JSONConfiguration</fo:inline>
                    does not have a direct equivalent in Jersey 2. Each provider has it's own way to be configured. Detailed
                    description of each method and property is out of scope of this migration guide and can be found in the
                    documentation and APIs of the relevant providers and/or the relevant Jersey module API. Bellow are several
                    basic examples how to configure certain options when using MOXy with Jersey's
                    <fo:inline font-family="monospace">MoxyJsonConfig</fo:inline>
                    class.

                    <fo:list-block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="d0e20347"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e20348"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:inline font-style="italic">Formated output</fo:inline>
                            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Jersey 1:
                                <fo:inline font-family="monospace">JSONConfiguration.createJSONConfigurationWithFormatted()</fo:inline>
                            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Jersey 2/MOXy:
                                <fo:inline font-family="monospace">MoxyJsonConfig.setFormattedOutput()</fo:inline>
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e20364"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:inline font-style="italic">Namespaces mapping</fo:inline>
                            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Jersey 1:
                                <fo:inline font-family="monospace">JSONConfiguration.natural().xml2JsonNs()</fo:inline>
                            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Jersey 2/MOXy:
                                <fo:inline font-family="monospace">MoxyJsonConfig.setNamespacePrefixMapper()</fo:inline>
                            </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="d0e20380"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block>
                                <fo:inline font-style="italic">Namespace separator</fo:inline>
                            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Jersey 1:
                                <fo:inline font-family="monospace">JSONConfiguration.natural().nsSeparator()</fo:inline>
                            </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Jersey 2/MOXy:
                                <fo:inline font-family="monospace">MoxyJsonConfig.setNamespaceSeparator()</fo:inline>
                            </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block>

                    Properties can be also passed directly to
                    <fo:inline font-family="monospace">Marshaller</fo:inline>
                    and/or
                    <fo:inline font-family="monospace">Unmarshaller</fo:inline>
                    using:<fo:inline font-family="monospace">MoxyJsonConfig</fo:inline>'s<fo:inline font-family="monospace">property()</fo:inline>,
                    <fo:inline font-family="monospace">marshallerProperty()</fo:inline>
                    and
                    <fo:inline font-family="monospace">unmarshallerProperty()</fo:inline>
                    methods.
                </fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                More on the JSON Support topic can be found in<fo:basic-link internal-destination="json"><fo:inline>Section 9.1, “JSON”</fo:inline></fo:basic-link>.
            </fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="back" language="en" format="1" initial-page-number="auto" force-page-count="no-force" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Configuration Properties</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>Configuration Properties</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="4pc" end-indent="0pt"><fo:block id="appendix-properties"><fo:block><fo:block><fo:block margin-left="0pt" font-size="24.8832pt" font-weight="bold" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always" space-before.optimum="10pt" space-before.minimum="10pt * 0.8" space-before.maximum="10pt * 1.2" hyphenate="false" text-align="start" start-indent="0pt" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2">Appendix A. Configuration Properties</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="appendix-properties-common"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Common (client/server) configuration properties</fo:marker><fo:block font-size="20.735999999999997pt">A.1. Common (client/server) configuration properties</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            List of common configuration properties that can be found in <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html)"><fo:inline>CommonProperties</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html</fo:basic-link>]</fo:inline> class. All of these properties
            can be overridden by their server/client counterparts.
        </fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e20431"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table A.1. List of common configuration properties</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-start-style="solid" border-end-style="solid" border-top-style="solid" border-bottom-style="solid" border-start-width="0.5pt" border-end-width="0.5pt" border-top-width="0.5pt" border-bottom-width="0.5pt" border-start-color="black" border-end-color="black" border-top-color="black" border-bottom-color="black" width="auto"><fo:table-column column-number="1" column-width="33%"/><fo:table-column column-number="2" column-width="33%"/><fo:table-column column-number="3" column-width="34%"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row keep-with-next.within-column="always"><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block font-weight="bold">Constant</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block font-weight="bold">Value</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block font-weight="bold">Description</fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE)"><fo:inline>CommonProperties.FEATURE_AUTO_DISCOVERY_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.disableAutoDiscovery</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Disables feature auto discovery globally on client/server. Default value is <fo:inline font-family="monospace">false</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#JSON_PROCESSING_FEATURE_DISABLE)"><fo:inline>CommonProperties.JSON_PROCESSING_FEATURE_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#JSON_PROCESSING_FEATURE_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#JSON_PROCESSING_FEATURE_DISABLE</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.disableJsonProcessing</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Disables configuration of Json Processing (JSR-353) feature. Default value is <fo:inline font-family="monospace">false</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#METAINF_SERVICES_LOOKUP_DISABLE)"><fo:inline>CommonProperties.METAINF_SERVICES_LOOKUP_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#METAINF_SERVICES_LOOKUP_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#METAINF_SERVICES_LOOKUP_DISABLE</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.disableMetainfServicesLookup</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Disables META-INF/services lookup globally on client/server. Default value is <fo:inline font-family="monospace">false</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#MOXY_JSON_FEATURE_DISABLE)"><fo:inline>CommonProperties.MOXY_JSON_FEATURE_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#MOXY_JSON_FEATURE_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#MOXY_JSON_FEATURE_DISABLE</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.disableMoxyJson</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Disables configuration of MOXy Json feature. Default value is <fo:inline font-family="monospace">false</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#OUTBOUND_CONTENT_LENGTH_BUFFER)"><fo:inline>CommonProperties.OUTBOUND_CONTENT_LENGTH_BUFFER</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#OUTBOUND_CONTENT_LENGTH_BUFFER)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/CommonProperties.html#OUTBOUND_CONTENT_LENGTH_BUFFER</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.contentLength.buffer</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                An integer value that defines the buffer size used to buffer the outbound message entity in order to
                                determine its size and set the value of HTTP <fo:inline font-family="monospace">Content-Length</fo:inline> header. Default
                                value is <fo:inline font-family="monospace">8192</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_LOGGER_NAME)"><fo:inline>LoggingFeature.LOGGING_FEATURE_LOGGER_NAME</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_LOGGER_NAME)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_LOGGER_NAME</fo:basic-link>]</fo:inline>
                        </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>
                            <fo:inline font-family="monospace">jersey.config.logging.logger.name</fo:inline>
                        </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            Logger name of the logging filter.
                            See <fo:inline>logging</fo:inline> chapter for more information.
                            The default value is <fo:inline font-family="monospace">org.glassfish.jersey.logging.LoggingFeature</fo:inline>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_LOGGER_LEVEL)"><fo:inline>LoggingFeature.LOGGING_FEATURE_LOGGER_LEVEL</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_LOGGER_LEVEL)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_LOGGER_LEVEL</fo:basic-link>]</fo:inline>
                        </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>
                            <fo:inline font-family="monospace">jersey.config.logging.logger.level</fo:inline>
                        </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            Level of logging filter's logger at which the messages will be logged.
                            See <fo:inline>logging</fo:inline> chapter for more information.
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_VERBOSITY)"><fo:inline>LoggingFeature.LOGGING_FEATURE_VERBOSITY</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_VERBOSITY)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_VERBOSITY</fo:basic-link>]</fo:inline>
                        </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>
                            <fo:inline font-family="monospace">jersey.config.logging.verbosity</fo:inline>
                        </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            Verbosity of logging filter describes how verbose the logging filter will be.
                            There are 3 possible values <fo:inline font-family="monospace">LoggingFeature.Verbosity.HEADERS_ONLY</fo:inline>,
                            <fo:inline font-family="monospace">LoggingFeature.Verbosity.PAYLOAD_TEXT</fo:inline> or
                            <fo:inline font-family="monospace">LoggingFeature.Verbosity.PAYLOAD_ANY</fo:inline>.
                            See <fo:inline>logging</fo:inline> chapter for more information.
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_MAX_ENTITY_SIZE)"><fo:inline>LoggingFeature.LOGGING_FEATURE_MAX_ENTITY_SIZE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_MAX_ENTITY_SIZE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_MAX_ENTITY_SIZE</fo:basic-link>]</fo:inline>
                        </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>
                            <fo:inline font-family="monospace">jersey.config.logging.entity.maxSize</fo:inline>
                        </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt"><fo:block>
                            The maximum number of bytes of the entity which will be logged.
                            See <fo:inline>logging</fo:inline> chapter for more information.
                        </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:block><fo:block id="appendix-properties-server"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Server configuration properties</fo:marker><fo:block font-size="20.735999999999997pt">A.2. Server configuration properties</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            List of server configuration properties that can be found in <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html)"><fo:inline>ServerProperties</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html</fo:basic-link>]</fo:inline> class.
        </fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e20602"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table A.2. List of server configuration properties</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-start-style="solid" border-end-style="solid" border-top-style="solid" border-bottom-style="solid" border-start-width="0.5pt" border-end-width="0.5pt" border-top-width="0.5pt" border-bottom-width="0.5pt" border-start-color="black" border-end-color="black" border-top-color="black" border-bottom-color="black" width="auto"><fo:table-column column-number="1" column-width="33%"/><fo:table-column column-number="2" column-width="33%"/><fo:table-column column-number="3" column-width="34%"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row keep-with-next.within-column="always"><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block font-weight="bold">Constant</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block font-weight="bold">Value</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block font-weight="bold">Description</fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#APPLICATION_NAME)"><fo:inline>ServerProperties.APPLICATION_NAME</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#APPLICATION_NAME)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#APPLICATION_NAME</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server.application.name</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Defines the application name. The name is an arbitrary user defined name which is used to
                                distinguish between Jersey applications in the case that more applications are deployed on
                                the same runtime (container). The name can be used for example for purposes of monitoring
                                by JMX when name identifies to which application deployed MBeans belong to. The name should
                                be unique in the runtime. The property does not have a default value.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#BV_FEATURE_DISABLE)"><fo:inline>ServerProperties.BV_FEATURE_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#BV_FEATURE_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#BV_FEATURE_DISABLE</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.beanValidation.disable.server</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Disables Bean Validation support. Default value is <fo:inline font-family="monospace">false</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#BV_DISABLE_VALIDATE_ON_EXECUTABLE_OVERRIDE_CHECK)"><fo:inline>ServerProperties
                            .BV_DISABLE_VALIDATE_ON_EXECUTABLE_OVERRIDE_CHECK</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#BV_DISABLE_VALIDATE_ON_EXECUTABLE_OVERRIDE_CHECK)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#BV_DISABLE_VALIDATE_ON_EXECUTABLE_OVERRIDE_CHECK</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.beanValidation
                            .disable.validateOnExecutableCheck.server</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Disables <fo:inline font-family="monospace">@ValidateOnExecution</fo:inline> check. Default value is <fo:inline font-family="monospace">false</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#BV_SEND_ERROR_IN_RESPONSE)"><fo:inline>ServerProperties.BV_SEND_ERROR_IN_RESPONSE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#BV_SEND_ERROR_IN_RESPONSE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#BV_SEND_ERROR_IN_RESPONSE</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.beanValidation
                            .enableOutputValidationErrorEntity.server</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Enables sending validation error information to the client. Default value is <fo:inline font-family="monospace">false</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE)"><fo:inline>ServerProperties.FEATURE_AUTO_DISCOVERY_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server.disableAutoDiscovery</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Disables feature auto discovery on server. Default value is <fo:inline font-family="monospace">false</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#HTTP_METHOD_OVERRIDE)"><fo:inline>ServerProperties.HTTP_METHOD_OVERRIDE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#HTTP_METHOD_OVERRIDE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#HTTP_METHOD_OVERRIDE</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server.httpMethodOverride</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Defines configuration of HTTP method overriding.
                                This property is used by <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/filter/HttpMethodOverrideFilter.html)"><fo:inline>HttpMethodOverrideFilter</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/filter/HttpMethodOverrideFilter.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/filter/HttpMethodOverrideFilter.html</fo:basic-link>]</fo:inline> to determine
                                where it should look for method override information (e.g. request header or query parameters).
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#JSON_PROCESSING_FEATURE_DISABLE)"><fo:inline>ServerProperties.JSON_PROCESSING_FEATURE_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#JSON_PROCESSING_FEATURE_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#JSON_PROCESSING_FEATURE_DISABLE</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server.disableJsonProcessing</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Disables configuration of Json Processing (JSR-353) feature. Default value is <fo:inline font-family="monospace">false</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#LANGUAGE_MAPPINGS)"><fo:inline>ServerProperties.LANGUAGE_MAPPINGS</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#LANGUAGE_MAPPINGS)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#LANGUAGE_MAPPINGS</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server.languageMappings</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Defines mapping of URI extensions to languages. The property is used by <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/filter/UriConnegFilter.html)"><fo:inline>UriConnegFilter</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/filter/UriConnegFilter.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/filter/UriConnegFilter.html</fo:basic-link>]</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MEDIA_TYPE_MAPPINGS)"><fo:inline>ServerProperties.MEDIA_TYPE_MAPPINGS</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MEDIA_TYPE_MAPPINGS)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MEDIA_TYPE_MAPPINGS</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server.mediaTypeMappings</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Defines mapping of URI extensions to media types. The property is used by <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/filter/UriConnegFilter.html)"><fo:inline>UriConnegFilter</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/filter/UriConnegFilter.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/filter/UriConnegFilter.html</fo:basic-link>]</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#METAINF_SERVICES_LOOKUP_DISABLE)"><fo:inline>ServerProperties.METAINF_SERVICES_LOOKUP_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#METAINF_SERVICES_LOOKUP_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#METAINF_SERVICES_LOOKUP_DISABLE</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server.disableMetainfServicesLookup</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Disables META-INF/services lookup on server. Default value is <fo:inline font-family="monospace">false</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MOXY_JSON_FEATURE_DISABLE)"><fo:inline>ServerProperties.MOXY_JSON_FEATURE_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MOXY_JSON_FEATURE_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MOXY_JSON_FEATURE_DISABLE</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server.disableMoxyJson</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Disables configuration of MOXy Json feature. Default value is <fo:inline font-family="monospace">false</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_ENABLED)"><fo:inline>ServerProperties.MONITORING_ENABLED</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_ENABLED)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_ENABLED</fo:basic-link>]</fo:inline> (Jersey 2.12 or later)</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server
                            .monitoring.statistics.enabled</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                If <fo:inline font-family="monospace">true</fo:inline>, then application monitoring will be enabled. This will enable the possibility
                                of injecting <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ApplicationInfo.html)"><fo:inline>ApplicationInfo</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ApplicationInfo.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/ApplicationInfo.html</fo:basic-link>]</fo:inline> into resource and providers.
                                Default value is <fo:inline font-family="monospace">false</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_STATISTICS_ENABLED)"><fo:inline>ServerProperties.MONITORING_STATISTICS_ENABLED</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_STATISTICS_ENABLED)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_STATISTICS_ENABLED</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server
                            .monitoring.enabled</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                If <fo:inline font-family="monospace">true</fo:inline>, the calculation of monitoring statistics will be enabled. This will enable the
                                possibility of injecting <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatistics.html)"><fo:inline>MonitoringStatistics</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatistics.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatistics.html</fo:basic-link>]</fo:inline> into resource and
                                providers and also the registered listeners implementing
                                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatisticsListener.html)"><fo:inline>MonitoringStatisticsListener</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatisticsListener.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatisticsListener.html</fo:basic-link>]</fo:inline> will be called when statistics are
                                available for processing.
                                Monitoring statistics extends basic monitoring feature. Therefore when enabled,
                                the monitoring gets automatically enabled too (the same result as setting the property
                                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_ENABLED)"><fo:inline>ServerProperties.MONITORING_ENABLED</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_ENABLED)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_ENABLED</fo:basic-link>]</fo:inline> to <fo:inline font-family="monospace">true</fo:inline>).
                                Note that enabling statistics may have a negative performance impact
                                and therefore should be enabled only when needed. Default value is <fo:inline font-family="monospace">false</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_STATISTICS_MBEANS_ENABLED)"><fo:inline>ServerProperties.MONITORING_STATISTICS_MBEANS_ENABLED</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_STATISTICS_MBEANS_ENABLED)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_STATISTICS_MBEANS_ENABLED</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server
                            .monitoring.statistics.mbeans.enabled</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                If <fo:inline font-family="monospace">true</fo:inline> then Jersey will expose MBeans for the collected monitoring statistics. Exposed
                                JMX MBeans are based on <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatistics.html)"><fo:inline>MonitoringStatistics</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatistics.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/monitoring/MonitoringStatistics.html</fo:basic-link>]</fo:inline> data and therefore when
                                enabled, the calculation of monitoring statistics gets automatically enabled too (the same result
                                as setting the property <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_STATISTICS_ENABLED)"><fo:inline>ServerProperties.MONITORING_STATISTICS_ENABLED</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_STATISTICS_ENABLED)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_STATISTICS_ENABLED</fo:basic-link>]</fo:inline> to
                                <fo:inline font-family="monospace">true</fo:inline>). Note that enabling MBeans for monitoring statistics may have a negative performance
                                impact and therefore should be enabled only when needed. Default value is <fo:inline font-family="monospace">false</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_STATISTICS_REFRESH_INTERVAL)"><fo:inline>ServerProperties.MONITORING_STATISTICS_REFRESH_INTERVAL</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_STATISTICS_REFRESH_INTERVAL)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#MONITORING_STATISTICS_REFRESH_INTERVAL</fo:basic-link>]</fo:inline> (Jersey 2.10 or later)</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server
                            .monitoring.statistics.refresh.interval</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Interval (in <fo:inline font-family="monospace">ms</fo:inline>}) indicating how often will be monitoring statistics refreshed
                                (<fo:inline font-family="monospace">onStatistics</fo:inline> method called). Default value is <fo:inline font-family="monospace">500</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#OUTBOUND_CONTENT_LENGTH_BUFFER)"><fo:inline>ServerProperties.OUTBOUND_CONTENT_LENGTH_BUFFER</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#OUTBOUND_CONTENT_LENGTH_BUFFER)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#OUTBOUND_CONTENT_LENGTH_BUFFER</fo:basic-link>]</fo:inline>
                            (Jersey 2.2 or later)</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.contentLength.server.buffer</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                An integer value that defines the buffer size used to buffer the outbound message entity in order to
                                determine its size and set the value of HTTP <fo:inline font-family="monospace">Content-Length</fo:inline> header. Default
                                value is <fo:inline font-family="monospace">8192</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#PROVIDER_CLASSNAMES)"><fo:inline>ServerProperties.PROVIDER_CLASSNAMES</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#PROVIDER_CLASSNAMES)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#PROVIDER_CLASSNAMES</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server.provider.classnames</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Defines one or more class names that implement application-specific resources
                                and providers. If the property is set, the specified classes will be instantiated
                                and registered as either application JAX-RS root resources or providers.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#PROVIDER_CLASSPATH)"><fo:inline>ServerProperties.PROVIDER_CLASSPATH</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#PROVIDER_CLASSPATH)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#PROVIDER_CLASSPATH</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server.provider.classpath</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Defines class-path that contains application-specific resources and
                                providers. If the property is set, the specified packages will be scanned for
                                JAX-RS root resources and providers.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#PROVIDER_PACKAGES)"><fo:inline>ServerProperties.PROVIDER_PACKAGES</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#PROVIDER_PACKAGES)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#PROVIDER_PACKAGES</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server.provider.packages</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Defines one or more packages that contain application-specific resources and
                                providers. If the property is set, the specified packages will be scanned for
                                JAX-RS root resources and providers.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#PROVIDER_SCANNING_RECURSIVE)"><fo:inline>ServerProperties.PROVIDER_SCANNING_RECURSIVE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#PROVIDER_SCANNING_RECURSIVE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#PROVIDER_SCANNING_RECURSIVE</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server
                            .provider.scanning.recursive</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Sets the recursion strategy for package scanning. Default value is <fo:inline font-family="monospace">true</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#REDUCE_CONTEXT_PATH_SLASHES_ENABLED)"><fo:inline>ServerProperties.REDUCE_CONTEXT_PATH_SLASHES_ENABLED</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#REDUCE_CONTEXT_PATH_SLASHES_ENABLED)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#REDUCE_CONTEXT_PATH_SLASHES_ENABLED</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server.reduceContextPathSlashes.enabled</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Ignores multiple slashes between a port and a context path and will resolve it
                                as URI with only one slash. Default value is <fo:inline font-family="monospace">false</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#RESOURCE_VALIDATION_DISABLE)"><fo:inline>ServerProperties.RESOURCE_VALIDATION_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#RESOURCE_VALIDATION_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#RESOURCE_VALIDATION_DISABLE</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server
                            .resource.validation.disable</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Disables <fo:inline font-family="monospace">Resource</fo:inline> validation. Default value is <fo:inline font-family="monospace">false</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#RESOURCE_VALIDATION_IGNORE_ERRORS)"><fo:inline>ServerProperties.RESOURCE_VALIDATION_IGNORE_ERRORS</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#RESOURCE_VALIDATION_IGNORE_ERRORS)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#RESOURCE_VALIDATION_IGNORE_ERRORS</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server
                            .resource.validation.ignoreErrors</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Determines whether validation of application resource models should fail even in case of a fatal
                                validation errors. Default value is <fo:inline font-family="monospace">false</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#WADL_FEATURE_DISABLE)"><fo:inline>ServerProperties.WADL_FEATURE_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#WADL_FEATURE_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#WADL_FEATURE_DISABLE</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server.wadl.disableWadl</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Disables WADL generation. Default value is <fo:inline font-family="monospace">false</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#WADL_GENERATOR_CONFIG)"><fo:inline>ServerProperties.WADL_GENERATOR_CONFIG</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#WADL_GENERATOR_CONFIG)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#WADL_GENERATOR_CONFIG</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server.wadl.generatorConfig</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Defines the wadl generator configuration that provides a <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/wadl/WadlGenerator.html)"><fo:inline>WadlGenerator</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/wadl/WadlGenerator.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/wadl/WadlGenerator.html</fo:basic-link>]</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#RESPONSE_SET_STATUS_OVER_SEND_ERROR)"><fo:inline>ServerProperties.RESPONSE_SET_STATUS_OVER_SEND_ERROR</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#RESPONSE_SET_STATUS_OVER_SEND_ERROR)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#RESPONSE_SET_STATUS_OVER_SEND_ERROR</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server.response.setStatusOverSendError</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Whenever response status is <fo:inline font-family="monospace">4xx</fo:inline> or <fo:inline font-family="monospace">5xx</fo:inline> it is
                                possible to choose between <fo:inline font-family="monospace">sendError</fo:inline> or <fo:inline font-family="monospace">setStatus</fo:inline>
                                on container specific <fo:inline font-family="monospace">Response</fo:inline> implementation. E.g. on servlet
                                container Jersey can call <fo:inline font-family="monospace">HttpServletResponse.setStatus(...)</fo:inline> or
                                <fo:inline font-family="monospace">HttpServletResponse.sendError(...)</fo:inline>.

                                Calling <fo:inline font-family="monospace">sendError(...)</fo:inline> method usually resets entity, response headers
                                and provide error page for specified status code (e.g. servlet
                                <fo:inline font-family="monospace">error-page</fo:inline> configuration).
                                However if you want to post-process response (e.g. by servlet filter) the only
                                way to do it is calling <fo:inline font-family="monospace">setStatus(...)</fo:inline> on container Response object.

                                If property value is <fo:inline font-family="monospace">true</fo:inline> the method <fo:inline font-family="monospace">Response.setStatus(...)</fo:inline> is
                                used over default <fo:inline font-family="monospace">Response.sendError(...)</fo:inline>.

                                Type of the property value is <fo:inline font-family="monospace">boolean</fo:inline>.
                                The default value is <fo:inline font-family="monospace">false</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#TRACING)"><fo:inline>ServerProperties.TRACING</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#TRACING)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#TRACING</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server.tracing.type</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Enables/disables tracing support. Possible values are <fo:inline font-family="monospace">OFF</fo:inline> (default),
                                <fo:inline font-family="monospace">ON_DEMAND</fo:inline> and <fo:inline font-family="monospace">ALL</fo:inline>.
                                See <fo:basic-link internal-destination="tracing.configuration"><fo:inline>Section 22.2.1, “Configuration options”</fo:inline></fo:basic-link> for more detail.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#TRACING_THRESHOLD)"><fo:inline>ServerProperties.TRACING_THRESHOLD</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#TRACING_THRESHOLD)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#TRACING_THRESHOLD</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server.tracing.threshold</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Sets the amount of detail provided by tracing. Possible values are <fo:inline font-family="monospace">SUMMARY</fo:inline>,
                                <fo:inline font-family="monospace">TRACE</fo:inline> and <fo:inline font-family="monospace">VERBOSE</fo:inline>.
                                See <fo:basic-link internal-destination="tracing.configuration"><fo:inline>Section 22.2.1, “Configuration options”</fo:inline></fo:basic-link> to learn more about the levels.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#PROCESSING_RESPONSE_ERRORS_ENABLED)"><fo:inline>ServerProperties.PROCESSING_RESPONSE_ERRORS_ENABLED</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#PROCESSING_RESPONSE_ERRORS_ENABLED)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#PROCESSING_RESPONSE_ERRORS_ENABLED</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server.exception.processResponseErrors</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                If property value is <fo:inline font-family="monospace">true</fo:inline> then the errors raised during response processing are
                                tried to be handled using available response error mappers.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#SUBRESOURCE_LOCATOR_CACHE_SIZE)"><fo:inline>ServerProperties.SUBRESOURCE_LOCATOR_CACHE_SIZE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#SUBRESOURCE_LOCATOR_CACHE_SIZE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#SUBRESOURCE_LOCATOR_CACHE_SIZE</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server.subresource.cache.size</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                An integer value that defines the size of cache for sub-resource locator models. The cache is used
                                to provide better performance for application that uses JAX-RS sub-resource locators.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#SUBRESOURCE_LOCATOR_CACHE_SIZE)"><fo:inline>ServerProperties.SUBRESOURCE_LOCATOR_CACHE_SIZE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#SUBRESOURCE_LOCATOR_CACHE_SIZE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#SUBRESOURCE_LOCATOR_CACHE_SIZE</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server.subresource.cache.size</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                An integer value that defines the maximum age (in seconds) for cached for sub-resource locator
                                models. The age of an cache entry is defined as the time since the last access (read) to the entry
                                in the cache. Entry aging is not enabled by default.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#SUBRESOURCE_LOCATOR_CACHE_JERSEY_RESOURCE_ENABLED)"><fo:inline>ServerProperties.SUBRESOURCE_LOCATOR_CACHE_JERSEY_RESOURCE_ENABLED</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#SUBRESOURCE_LOCATOR_CACHE_JERSEY_RESOURCE_ENABLED)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#SUBRESOURCE_LOCATOR_CACHE_JERSEY_RESOURCE_ENABLED</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server.subresource.cache.jersey.resource.enabled</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                If <fo:inline font-family="monospace">true</fo:inline> then Jersey will cache Jersey resources in addition to caching
                                sub-resource locator classes and instances (which are cached by default). To make sure the caching
                                is effective in this case you need to return same Jersey Resource instances for same input
                                parameters from resource method. This means that generating new Jersey Resource instances for same
                                input parameters would not have any performance effect and it would only fill-up the cache.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#LOCATION_HEADER_RELATIVE_URI_RESOLUTION_DISABLED)"><fo:inline>ServerProperties.LOCATION_HEADER_RELATIVE_URI_RESOLUTION_DISABLED</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#LOCATION_HEADER_RELATIVE_URI_RESOLUTION_DISABLED)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/server/ServerProperties.html#LOCATION_HEADER_RELATIVE_URI_RESOLUTION_DISABLED</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.server.headers.location.relative.resolution.disabled</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                If <fo:inline font-family="monospace">true</fo:inline>, Jersey will not resolve relative URIs in the <fo:inline font-family="monospace">Location</fo:inline>
                                http header.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_LOGGER_NAME_SERVER)"><fo:inline>LoggingFeature.LOGGING_FEATURE_LOGGER_NAME_SERVER</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_LOGGER_NAME_SERVER)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_LOGGER_NAME_SERVER</fo:basic-link>]</fo:inline>
                        </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>
                            <fo:inline font-family="monospace">jersey.config.server.logging.logger.name</fo:inline>
                        </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            Logger name of the logging filter.
                            See <fo:inline>logging</fo:inline> chapter for more information.
                            The default value is <fo:inline font-family="monospace">org.glassfish.jersey.logging.LoggingFeature</fo:inline>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_LOGGER_LEVEL_SERVER)"><fo:inline>LoggingFeature.LOGGING_FEATURE_LOGGER_LEVEL_SERVER</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_LOGGER_LEVEL_SERVER)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_LOGGER_LEVEL_SERVER</fo:basic-link>]</fo:inline>
                        </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>
                            <fo:inline font-family="monospace">jersey.config.server.logging.logger.level</fo:inline>
                        </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            Level of logging filter's logger at which the messages will be logged.
                            See <fo:inline>logging</fo:inline> chapter for more information.
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_VERBOSITY_SERVER)"><fo:inline>LoggingFeature.LOGGING_FEATURE_VERBOSITY_SERVER</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_VERBOSITY_SERVER)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_VERBOSITY_SERVER</fo:basic-link>]</fo:inline>
                        </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>
                            <fo:inline font-family="monospace">jersey.config.server.logging.verbosity</fo:inline>
                        </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            Verbosity of logging filter describes how verbose the logging filter will be.
                            There are 3 possible values <fo:inline font-family="monospace">LoggingFeature.Verbosity.HEADERS_ONLY</fo:inline>,
                            <fo:inline font-family="monospace">LoggingFeature.Verbosity.PAYLOAD_TEXT</fo:inline> or
                            <fo:inline font-family="monospace">LoggingFeature.Verbosity.PAYLOAD_ANY</fo:inline>.
                            See <fo:inline>logging</fo:inline> chapter for more information.
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_MAX_ENTITY_SIZE_SERVER)"><fo:inline>LoggingFeature.LOGGING_FEATURE_MAX_ENTITY_SIZE_SERVER</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_MAX_ENTITY_SIZE_SERVER)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_MAX_ENTITY_SIZE_SERVER</fo:basic-link>]</fo:inline>
                        </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>
                            <fo:inline font-family="monospace">jersey.config.server.logging.entity.maxSize</fo:inline>
                        </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt"><fo:block>
                            The maximum number of bytes of the entity which will be logged.
                            See <fo:inline>logging</fo:inline> chapter for more information.
                        </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:block><fo:block id="appendix-properties-servlet"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Servlet configuration properties</fo:marker><fo:block font-size="20.735999999999997pt">A.3. Servlet configuration properties</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            List of servlet configuration properties that can be found in <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletProperties.html)"><fo:inline>ServletProperties</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletProperties.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletProperties.html</fo:basic-link>]</fo:inline> class.
        </fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e21284"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table A.3. List of servlet configuration properties</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-start-style="solid" border-end-style="solid" border-top-style="solid" border-bottom-style="solid" border-start-width="0.5pt" border-end-width="0.5pt" border-top-width="0.5pt" border-bottom-width="0.5pt" border-start-color="black" border-end-color="black" border-top-color="black" border-bottom-color="black" width="auto"><fo:table-column column-number="1" column-width="33%"/><fo:table-column column-number="2" column-width="33%"/><fo:table-column column-number="3" column-width="34%"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row keep-with-next.within-column="always"><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block font-weight="bold">Constant</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block font-weight="bold">Value</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block font-weight="bold">Description</fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletProperties.html#FILTER_CONTEXT_PATH)"><fo:inline>ServletProperties.FILTER_CONTEXT_PATH</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletProperties.html#FILTER_CONTEXT_PATH)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletProperties.html#FILTER_CONTEXT_PATH</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.servlet.filter.contextPath</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                If set, indicates the URL pattern of the Jersey servlet filter context path.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletProperties.html#FILTER_FORWARD_ON_404)"><fo:inline>ServletProperties.FILTER_FORWARD_ON_404</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletProperties.html#FILTER_FORWARD_ON_404)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletProperties.html#FILTER_FORWARD_ON_404</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.servlet.filter.forwardOn404</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                If set to <fo:inline font-family="monospace">true</fo:inline> and a 404 response with no entity body is returned from either
                                the runtime or the application then the runtime forwards the request to the next filter in the
                                filter chain. This enables another filter or the underlying servlet engine to process the request.
                                Before the request is forwarded the response status is set to 200.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletProperties.html#FILTER_STATIC_CONTENT_REGEX)"><fo:inline>ServletProperties.FILTER_STATIC_CONTENT_REGEX</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletProperties.html#FILTER_STATIC_CONTENT_REGEX)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletProperties.html#FILTER_STATIC_CONTENT_REGEX</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.servlet.filter.staticContentRegex</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                If set the regular expression is used to match an incoming servlet path URI to some web page
                                content such as static resources or JSPs to be handled by the underlying servlet engine.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletProperties.html#JAXRS_APPLICATION_CLASS)"><fo:inline>ServletProperties.JAXRS_APPLICATION_CLASS</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletProperties.html#JAXRS_APPLICATION_CLASS)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletProperties.html#JAXRS_APPLICATION_CLASS</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">javax.ws.rs.Application</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Application configuration initialization property whose value is a fully qualified class name of a
                                class that implements JAX-RS Application.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletProperties.html#PROVIDER_WEB_APP)"><fo:inline>ServletProperties.PROVIDER_WEB_APP</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletProperties.html#PROVIDER_WEB_APP)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletProperties.html#PROVIDER_WEB_APP</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.servlet.provider.webapp</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Indicates that Jersey should scan the whole web app for application-specific resources and
                                providers.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletProperties.html#QUERY_PARAMS_AS_FORM_PARAMS_DISABLED)"><fo:inline>ServletProperties.QUERY_PARAMS_AS_FORM_PARAMS_DISABLED</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletProperties.html#QUERY_PARAMS_AS_FORM_PARAMS_DISABLED)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletProperties.html#QUERY_PARAMS_AS_FORM_PARAMS_DISABLED</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.servlet.form.queryParams.disabled</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                If <fo:inline font-family="monospace">true</fo:inline> then query parameters will not be treated as form parameters
                                (e.g. injectable using @FormParam) in case a Form request is processed by server.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletProperties.html#SERVICE_LOCATOR)"><fo:inline>ServletProperties.SERVICE_LOCATOR</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletProperties.html#SERVICE_LOCATOR)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/servlet/ServletProperties.html#SERVICE_LOCATOR</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.servlet.context.serviceLocator</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Identifies the object that will be used as a parent ServiceLocator in the Jersey WebComponent.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:block><fo:block id="appendix-properties-client"><fo:block><fo:block><fo:block keep-together.within-column="always" margin-left="0pt" font-family="sans-serif,Symbol,ZapfDingbats"><fo:block keep-with-next.within-column="always"><fo:block font-family="sans-serif,Symbol,ZapfDingbats" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="0.8em" space-before.optimum="1.0em" space-before.maximum="1.2em" text-align="start" start-indent="0pt"><fo:marker marker-class-name="section.head.marker">Client configuration properties</fo:marker><fo:block font-size="20.735999999999997pt">A.4. Client configuration properties</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
            List of client configuration properties that can be found in <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html)"><fo:inline>ClientProperties</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html</fo:basic-link>]</fo:inline> class.
        </fo:block><fo:block xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em" keep-together.within-column="auto" id="d0e21395"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" font-weight="bold" font-size="12pt" hyphenate="false" space-after.minimum="0.4em" space-after.optimum="0.6em" space-after.maximum="0.8em" keep-with-next.within-column="always">Table A.4. List of client configuration properties</fo:block><fo:table border-before-width.conditionality="retain" border-collapse="collapse" border-start-style="solid" border-end-style="solid" border-top-style="solid" border-bottom-style="solid" border-start-width="0.5pt" border-end-width="0.5pt" border-top-width="0.5pt" border-bottom-width="0.5pt" border-start-color="black" border-end-color="black" border-top-color="black" border-bottom-color="black" width="auto"><fo:table-column column-number="1" column-width="33%"/><fo:table-column column-number="2" column-width="33%"/><fo:table-column column-number="3" column-width="34%"/><fo:table-header start-indent="0pt" end-indent="0pt"><fo:table-row keep-with-next.within-column="always"><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block font-weight="bold">Constant</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block font-weight="bold">Value</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block font-weight="bold">Description</fo:block></fo:table-cell></fo:table-row></fo:table-header><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#ASYNC_THREADPOOL_SIZE)"><fo:inline>ClientProperties.ASYNC_THREADPOOL_SIZE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#ASYNC_THREADPOOL_SIZE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#ASYNC_THREADPOOL_SIZE</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.client.async.threadPoolSize</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Asynchronous thread pool size. Default value is not set.
                                <fo:inline font-style="italic">Supported with <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/grizzly/connector/GrizzlyConnectorProvider.html)"><fo:inline>GrizzlyConnectorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/grizzly/connector/GrizzlyConnectorProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/grizzly/connector/GrizzlyConnectorProvider.html</fo:basic-link>]</fo:inline> only.</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#CHUNKED_ENCODING_SIZE)"><fo:inline>ClientProperties.CHUNKED_ENCODING_SIZE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#CHUNKED_ENCODING_SIZE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#CHUNKED_ENCODING_SIZE</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.client.chunkedEncodingSize</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Chunked encoding size. Default value is not set.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#CONNECT_TIMEOUT)"><fo:inline>ClientProperties.CONNECT_TIMEOUT</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#CONNECT_TIMEOUT)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#CONNECT_TIMEOUT</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.client.connectTimeout</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Read timeout interval, in milliseconds. Default value is <fo:inline font-family="monospace">0</fo:inline> (infinity).
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE)"><fo:inline>ClientProperties.FEATURE_AUTO_DISCOVERY_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#FEATURE_AUTO_DISCOVERY_DISABLE</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.client.disableAutoDiscovery</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Disables feature auto discovery on client. Default value is <fo:inline font-family="monospace">false</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#FOLLOW_REDIRECTS)"><fo:inline>ClientProperties.FOLLOW_REDIRECTS</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#FOLLOW_REDIRECTS)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#FOLLOW_REDIRECTS</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.client.followRedirects</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Declares that the client will automatically redirect to the URI declared in 3xx responses. Default value is <fo:inline font-family="monospace">true</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#JSON_PROCESSING_FEATURE_DISABLE)"><fo:inline>ClientProperties.JSON_PROCESSING_FEATURE_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#JSON_PROCESSING_FEATURE_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#JSON_PROCESSING_FEATURE_DISABLE</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.client.disableJsonProcessing</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Disables configuration of Json Processing (JSR-353) feature. Default value is <fo:inline font-family="monospace">false</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#METAINF_SERVICES_LOOKUP_DISABLE)"><fo:inline>ClientProperties.METAINF_SERVICES_LOOKUP_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#METAINF_SERVICES_LOOKUP_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#METAINF_SERVICES_LOOKUP_DISABLE</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.disableMetainfServicesLookup.client</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Disables META-INF/services lookup on client. Default value is <fo:inline font-family="monospace">false</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#MOXY_JSON_FEATURE_DISABLE)"><fo:inline>ClientProperties.MOXY_JSON_FEATURE_DISABLE</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#MOXY_JSON_FEATURE_DISABLE)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#MOXY_JSON_FEATURE_DISABLE</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.client.disableMoxyJson</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Disables configuration of MOXy Json feature. Default value is <fo:inline font-family="monospace">false</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#OUTBOUND_CONTENT_LENGTH_BUFFER)"><fo:inline>ClientProperties.OUTBOUND_CONTENT_LENGTH_BUFFER</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#OUTBOUND_CONTENT_LENGTH_BUFFER)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#OUTBOUND_CONTENT_LENGTH_BUFFER</fo:basic-link>]</fo:inline>
                            (Jersey 2.2 or later)</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.client.contentLength.buffer</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                An integer value that defines the buffer size used to buffer the outbound message entity in order to
                                determine its size and set the value of HTTP <fo:inline font-family="monospace">Content-Length</fo:inline> header. Default
                                value is <fo:inline font-family="monospace">8192</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#PROXY_URI)"><fo:inline>ClientProperties.PROXY_URI</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#PROXY_URI)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#PROXY_URI</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.client.proxy.uri</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                URI of a HTTP proxy the client connector should use. Default value is not set.
                                <fo:inline font-style="italic">Currently supported with <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/apache/connector/ApacheConnectorProvider.html)"><fo:inline>ApacheConnectorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/apache/connector/ApacheConnectorProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/apache/connector/ApacheConnectorProvider.html</fo:basic-link>]</fo:inline> and
                                    <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jetty/connector/JettyConnectorProvider.html)"><fo:inline>JettyConnectorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jetty/connector/JettyConnectorProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jetty/connector/JettyConnectorProvider.html</fo:basic-link>]</fo:inline> only.</fo:inline>
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#PROXY_USERNAME)"><fo:inline>ClientProperties.PROXY_USERNAME</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#PROXY_USERNAME)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#PROXY_USERNAME</fo:basic-link>]</fo:inline> (Jersey 2.5 or later)</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.client.proxy.username</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                User name which will be used for HTTP proxy authentication. Default value is not set.
                                <fo:inline font-style="italic">Currently supported with <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/apache/connector/ApacheConnectorProvider.html)"><fo:inline>ApacheConnectorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/apache/connector/ApacheConnectorProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/apache/connector/ApacheConnectorProvider.html</fo:basic-link>]</fo:inline> and
                                    <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jetty/connector/JettyConnectorProvider.html)"><fo:inline>JettyConnectorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jetty/connector/JettyConnectorProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jetty/connector/JettyConnectorProvider.html</fo:basic-link>]</fo:inline> only.</fo:inline>
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#PROXY_PASSWORD)"><fo:inline>ClientProperties.PROXY_PASSWORD</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#PROXY_PASSWORD)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#PROXY_PASSWORD</fo:basic-link>]</fo:inline> (Jersey 2.5 or later)</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.client.proxy.password</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Password which will be used for HTTP proxy authentication. Default value is not set.
                                <fo:inline font-style="italic">Currently supported with <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/apache/connector/ApacheConnectorProvider.html)"><fo:inline>ApacheConnectorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/apache/connector/ApacheConnectorProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/apache/connector/ApacheConnectorProvider.html</fo:basic-link>]</fo:inline> and
                                    <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jetty/connector/JettyConnectorProvider.html)"><fo:inline>JettyConnectorProvider</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jetty/connector/JettyConnectorProvider.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/jetty/connector/JettyConnectorProvider.html</fo:basic-link>]</fo:inline> only.</fo:inline>
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#READ_TIMEOUT)"><fo:inline>ClientProperties.READ_TIMEOUT</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#READ_TIMEOUT)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#READ_TIMEOUT</fo:basic-link>]</fo:inline> (Jersey 2.5 or later)</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.client.readTimeout</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Read timeout interval, in milliseconds. Default value is <fo:inline font-family="monospace">0</fo:inline> (infinity).
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#REQUEST_ENTITY_PROCESSING)"><fo:inline>ClientProperties.REQUEST_ENTITY_PROCESSING</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#REQUEST_ENTITY_PROCESSING)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#REQUEST_ENTITY_PROCESSING</fo:basic-link>]</fo:inline> (Jersey 2.5 or later)</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.client.request.entity.processing</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Defines whether the request entity should be serialized using internal buffer to
                                evaluate content length or chunk encoding should be used. Possible values are
                                <fo:inline font-family="monospace">BUFFERED</fo:inline> or <fo:inline font-family="monospace">CHUNKED</fo:inline>. Default value is
                                <fo:inline font-family="monospace">BUFFERED</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#SUPPRESS_HTTP_COMPLIANCE_VALIDATION)"><fo:inline>ClientProperties.SUPPRESS_HTTP_COMPLIANCE_VALIDATION</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#SUPPRESS_HTTP_COMPLIANCE_VALIDATION)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#SUPPRESS_HTTP_COMPLIANCE_VALIDATION</fo:basic-link>]</fo:inline>
                            (Jersey 2.2 or later)</fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.client.suppressHttpComplianceValidation</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                If <fo:inline font-family="monospace">true</fo:inline>, the strict validation of HTTP specification compliance for client-side
                                requests will be suppressed. When compliance checks are suppressed, any violations will
                                be merely logged as warnings, rather than causing exceptions being raised in Jersey
                                runtime. Default value is <fo:inline font-family="monospace">false</fo:inline>.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#USE_ENCODING)"><fo:inline>ClientProperties.USE_ENCODING</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#USE_ENCODING)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/ClientProperties.html#USE_ENCODING</fo:basic-link>]</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:inline font-family="monospace">jersey.config.client.useEncoding</fo:inline></fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            <fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">
                                Indicates the value of <fo:inline font-family="monospace">Content-Encoding</fo:inline> property the
                                <fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/filter/EncodingFilter.html)"><fo:inline>EncodingFilter</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/filter/EncodingFilter.html)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/client/filter/EncodingFilter.html</fo:basic-link>]</fo:inline> should be adding. Default value is not set.
                            </fo:block>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_LOGGER_NAME_CLIENT)"><fo:inline>LoggingFeature.LOGGING_FEATURE_LOGGER_NAME_CLIENT</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_LOGGER_NAME_CLIENT)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_LOGGER_NAME_CLIENT</fo:basic-link>]</fo:inline>
                        </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>
                            <fo:inline font-family="monospace">jersey.config.client.logging.logger.name</fo:inline>
                        </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            Logger name of the logging filter.
                            See <fo:inline>logging</fo:inline> chapter for more information.
                            The default value is <fo:inline font-family="monospace">org.glassfish.jersey.logging.LoggingFeature</fo:inline>
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_LOGGER_LEVEL_CLIENT)"><fo:inline>LoggingFeature.LOGGING_FEATURE_LOGGER_LEVEL_CLIENT</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_LOGGER_LEVEL_CLIENT)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_LOGGER_LEVEL_CLIENT</fo:basic-link>]</fo:inline>
                        </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>
                            <fo:inline font-family="monospace">jersey.config.client.logging.logger.level</fo:inline>
                        </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            Level of logging filter's logger at which the messages will be logged.
                            See <fo:basic-link internal-destination="logging_chapter"><fo:inline>logging</fo:inline></fo:basic-link> chapter for more information.
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_VERBOSITY_CLIENT)"><fo:inline>LoggingFeature.LOGGING_FEATURE_VERBOSITY_CLIENT</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_VERBOSITY_CLIENT)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_VERBOSITY_CLIENT</fo:basic-link>]</fo:inline>
                        </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>
                            <fo:inline font-family="monospace">jersey.config.client.logging.verbosity</fo:inline>
                        </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:block>
                            Verbosity of logging filter describes how verbose the logging filter will be.
                            There are 3 possible values <fo:inline font-family="monospace">LoggingFeature.Verbosity.HEADERS_ONLY</fo:inline>,
                            <fo:inline font-family="monospace">LoggingFeature.Verbosity.PAYLOAD_TEXT</fo:inline> or
                            <fo:inline font-family="monospace">LoggingFeature.Verbosity.PAYLOAD_ANY</fo:inline>.
                            See <fo:basic-link internal-destination="logging_chapter"><fo:inline>logging</fo:inline></fo:basic-link> chapter for more information.
                        </fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block><fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_MAX_ENTITY_SIZE_CLIENT)"><fo:inline>LoggingFeature.LOGGING_FEATURE_MAX_ENTITY_SIZE_CLIENT</fo:inline></fo:basic-link><fo:inline hyphenate="false"> [<fo:basic-link external-destination="url(https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_MAX_ENTITY_SIZE_CLIENT)">https://jersey.github.io/apidocs/2.28/jersey/org/glassfish/jersey/logging/LoggingFeature.html#LOGGING_FEATURE_MAX_ENTITY_SIZE_CLIENT</fo:basic-link>]</fo:inline>
                        </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt" border-end-width="0.5pt" border-end-style="solid" border-end-color="black"><fo:block>
                            <fo:inline font-family="monospace">jersey.config.client.logging.entity.maxSize</fo:inline>
                        </fo:block></fo:table-cell><fo:table-cell padding-start="2pt" padding-end="2pt" padding-top="2pt" padding-bottom="2pt"><fo:block>
                            The maximum number of bytes of the entity which will be logged.
                            See <fo:basic-link internal-destination="logging_chapter"><fo:inline>logging</fo:inline></fo:basic-link> chapter for more information.
                        </fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:block></fo:flow></fo:page-sequence></fo:root>